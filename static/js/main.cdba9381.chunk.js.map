{"version":3,"sources":["../node_modules/react-semantic-ui-datepickers/dist/locales sync /^/.//.*/.json$","serviceWorker.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/SignOut/index.js","constants/routes.js","components/Session/context.js","components/Session/withAuthorization.js","components/Navigation/index.js","components/Landing/index.js","components/SignUp/index.js","components/PasswordForget/index.js","UIComponents/loginForm.js","components/SignIn/index.js","util/options.js","UIComponents/EditEventForm.js","UIComponents/EventCard.js","UIComponents/CreateEventForm.js","UIComponents/EventPanel.js","components/Home/index.js","components/PasswordChange/index.js","components/Account/index.js","components/NewUser/CameraFaceDescriptor.js","components/NewUser/FileFaceDescriptor.js","components/NewUser/index.js","components/NewEvent/index.js","components/Admin/index.js","components/FaceRecognition/index.js","components/Recognizer/index.js","UIComponents/UserEditForm.js","components/UserPanel/index.js","components/App/index.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Boolean","window","location","hostname","match","FirebaseContext","React","createContext","withFirebase","Component","props","Consumer","firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","doDeleteUser","user","console","log","delete","then","catch","error","getElementsInPath","path","a","async","filter","data","ref","db","once","snapshot","forEach","s","includes","key","push","uid","value","val","childSnapshot","getAllUsersDescriptions","organization","tempElement","userDesciptors","i","length","getUserInformation","getDescriptors","element","userID","userInfo","descriptors","addUser","firstName","lastName","level","gender","age","checkIfUserExist","setUserDatabaseInformation","updateUser","set","userInformation","sex","markUserAttendance","eventID","timeStampIfRegistered","u","Date","now","deleteUser","remove","getUsersPreview","userResults","deleteUsersDescriptors","getDescriptorsAVG","avg","iAVG","j","tempDescriptors","d","Float32Array","from","insertDescriptor","descriptor","date","found","getUserAttendaceReport","addEvent","eventName","minimumLevel","allowedusers","notAllowedUsers","description","eventDate","passcode","checkIfEventExist","setEventDatabaseInformation","updateEvent","loginIntoEvent","login","active","getEventInformation","eventInformation","allowedUsers","deleteEvent","activateEvent","stopEvent","getEventsPreview","eventResult","name","getOrganization","admin","companyName","users","app","initializeApp","this","database","storage","child","listAll","res","items","itemRef","getDownloadURL","imageBlob","storageRef","file","fileName","uploadTask","put","contentType","on","TaskEvent","STATE_CHANGED","progress","bytesTransferred","totalBytes","state","TaskState","PAUSED","RUNNING","downloadURL","onClick","HOME","AuthUserContext","withAuthorization","condition","WithAuthorization","listener","onAuthStateChanged","authUser","history","compose","withRouter","NavigationAuth","Menu","inverted","borderless","fluid","position","Item","as","Link","to","ROUTES","icon","Dropdown","text","item","floating","pointing","SignOut","NavigationNonAuth","Icon","size","Navigation","Landing","Responsive","minwidth","className","Container","Header","INITIAL_STATE","username","passwordOne","passwordTwo","SignUpFormBase","onSubmit","event","setState","preventDefault","onChange","target","isInvalid","color","textAlign","Form","Segment","stacked","Group","Input","label","type","iconPosition","placeholder","Button","disabled","message","SignUpLink","SignUpForm","SignUpPage","Grid","centered","Column","verticalAlign","width","PasswordForgetFormBase","fuid","PasswordForgetLink","PasswordForgetPage","style","maxWidth","PasswordForgetForm","LoginForm","errors","SignInFormBase","SignInForm","SignInPage","Message","genderOptions","levelOptions","EditEventForm","values","updateEvents","closeModal","alert","Row","maxLength","Field","content","param","tempData","toLocaleDateString","Select","options","widths","TextArea","labelPosition","floated","EventCard","useState","viewEditEventForm","setViewEditEventForm","editEventModal","Modal","onClose","open","closeOnEscape","closeOnDimmerClick","Content","Card","raised","stackable","Meta","Description","extra","openModal","EventForm","setCode","minimum_level","setValues","isValid","setIsValid","formValues","valid","test","selection","dateString","EventPanel","events","viewCreateEventForm","setViewCreateEventForm","setViewEvent","activeEvents","inactiveEvents","createEventModal","closeIcon","Divider","horizontal","itemsPerRow","index","HomePage","PasswordChangeForm","PasswordChange","CameraFaceDescriptor","handleTakePhoto","dataUri","children","loading","remainingPhotos","fetch","r","blob","faceapi","image","withFaceLandmarks","withFaceDescriptors","detection","updateUsers","Promise","all","faceRecognitionNet","loadFromUri","faceLandmark68Net","ssdMobilenetv1","Subheader","Label","stretched","Dimmer","Loader","onTakePhoto","constructorImages","Array","FileFaceDescriptor","count","images","handlePhoto","imgRaw","fb","multiple","accept","files","primary","NewUser","viewConfirmationImageModal","viewImageModal","answer","recognizer","noValidate","Actions","columns","userUpdate","NewEvent","document","getElementById","passCode","eventUpdate","addEventClick","AdminPage","bind","UserList","EventList","Face_Recognition","loadUserDescriptor","descriptionSet","handleTakePhotoNoUserID","usersDescriptors","bestFaceAccuracy","bestAgeAccuracy","bestSexDetection","current","descriptorSet","faceMatcher","displaySize","height","resizedDetections","results","findBestMatch","withAgeAndGender","detectionsWithAgeAndGender","faceAccuracy","distance","ageAccuracy","Math","abs","sexDetection","eventInfo","evaluateResult","result","innerHTML","respAttendance","toLocaleString","ageGenderNet","tinyFaceDetector","faceLandmark68TinyNet","marginLeft","Recognizer","facerecogition","eventPasscode","hidden","getAccess","UserEditForm","UserPanel","viewUserModal","viewCreateUserModal","viewEditUserModal","selectedUser","createUserModal","userFormModal","userEditModal","userModal","Table","unstackable","celled","singleLine","striped","definition","Body","Cell","positive","undefined","HeaderCell","collapsing","negative","App","Provider","exact","component","LandingPage","AccountPage","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cdba9381.chunk.js","sourcesContent":["var map = {\n\t\"./ca-ES.json\": 435,\n\t\"./de-DE.json\": 436,\n\t\"./en-US.json\": 247,\n\t\"./es-ES.json\": 437,\n\t\"./fi-FI.json\": 438,\n\t\"./fr-FR.json\": 439,\n\t\"./he-IL.json\": 440,\n\t\"./it-IT.json\": 441,\n\t\"./ja-JP.json\": 442,\n\t\"./no-NB.json\": 443,\n\t\"./pl-PL.json\": 444,\n\t\"./pt-BR.json\": 445,\n\t\"./ru-RU.json\": 446,\n\t\"./sv-SE.json\": 447,\n\t\"./tr-TR.json\": 448,\n\t\"./zh-CN.json\": 449\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 434;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n    <FirebaseContext.Consumer>\n      {firebase => <Component {...props} firebase={firebase} />}\n    </FirebaseContext.Consumer>\n  );\n\nexport default FirebaseContext;","import app from 'firebase/app'\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/storage';\nimport image from \"react-firebase-file-uploader/lib/utils/image\";\n\nconst config = {\n    apiKey: \"AIzaSyCz5H3RlwJowAPSAXi9Lvcc2oyPmLBeuIg\",\n    authDomain: \"cis4914-40936.firebaseapp.com\",\n    databaseURL: \"https://cis4914-40936.firebaseio.com\",\n    projectId: \"cis4914-40936\",\n    storageBucket: \"cis4914-40936.appspot.com\",\n    messagingSenderId: \"178831665685\",\n    appId: \"1:178831665685:web:3ba1a1b03cdd45c57afc1c\",\n    measurementId: \"G-FYCFPK2QDN\"\n  };\n\n  class Firebase {\n      //Comment\n      constructor() {\n          app.initializeApp(config);\n          this.auth = app.auth();\n          this.db = app.database();\n      }\n\n      //#region AUTH\n\n      doCreateUserWithEmailAndPassword = (email, password) =>\n          this.auth.createUserWithEmailAndPassword(email, password);\n\n      doSignInWithEmailAndPassword = (email, password) =>\n          this.auth.signInWithEmailAndPassword(email, password);\n\n      doSignOut = () => this.auth.signOut();\n\n      doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n      doPasswordUpdate = password =>\n          this.auth.currentUser.updatePassword(password);\n\n      doDeleteUser = () => {\n          var user = this.auth.currentUser;\n          console.log(user);\n          this.auth.signOut();\n\n          user.delete().then(function () {\n              console.log(\"User deleted.\");\n          }).catch(function (error) {\n              console.log(\"Error deleting user.\")\n          });\n      };\n\n      //endregion\n\n      //#region DATA\n\n      /**\n       * @param path\n       * @param filter: If filter is passed only fields in the filter will be returned\n       * @returns {Promise<[]>}: array with data\n       */\n      getElementsInPath = async (path, filter = null) => {\n          var data = [];\n          var ref = this.db.ref(path);\n          var snapshot = await ref.once('value');\n\n          if(filter != null) {\n              snapshot.forEach(s => {\n                  if(filter.includes(s.key)) {\n                      data.push({\n                          uid: s.key,\n                          value: s.val()\n                      })\n                  }\n              });\n          }\n          else {\n              snapshot.forEach(function (childSnapshot) {\n                  data.push({\n                      uid: childSnapshot.key,\n                      value: childSnapshot.val()\n                  });\n              });\n          }\n          return data;\n      }\n\n      //#region IMAGES\n\n      getImages(organization, userID) {\n\n          var data = [];\n          var listRef = app.storage().ref().child('images/' + organization + '/' + userID + '/');\n\n          // Find all the prefixes and items.\n          listRef.listAll().then(function (res) {\n              res.items.forEach(function (itemRef) {\n                  // All the items under listRef.\n                  data.push(itemRef.getDownloadURL());\n\n              });\n          }).catch(function (error) {\n              console.log(\"Unable to load image set\");\n          });\n          return data;\n      }\n\n      uploadImage(organization, userID, imageBlob) {\n          var storageRef = app.storage().ref();\n          // File or Blob named mountains.jpg\n          var file = imageBlob;\n          var metadata = {\n              contentType: 'image/jpeg'\n          };\n          // Upload file and metadata to the object 'images/mountains.jpg'\n          let fileName = Date.now() + '.jpeg';\n          var uploadTask = storageRef.child('images/' + organization + '/' + userID + '/' + fileName).put(file, metadata);\n\n          // Listen for state changes, errors, and completion of the upload.\n          uploadTask.on(app.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\n              function (snapshot) {\n                  // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n                  var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                  console.log('Upload is ' + progress + '% done');\n                  switch (snapshot.state) {\n                      case app.storage.TaskState.PAUSED: // or 'paused'\n                          console.log('Upload is paused');\n                          break;\n                      case app.storage.TaskState.RUNNING: // or 'running'\n                          console.log('Upload is running');\n                          break;\n                  }\n              }, function (error) {\n                  // https://firebase.google.com/docs/storage/web/handle-errors\n                  switch (error.code) {\n                      case 'storage/unauthorized':\n                          console.log(\"Error uploading: unauthorized \");\n                          break;\n                      case 'storage/canceled':\n                          console.log(\"Error uploading: canceled \");\n                          break;\n                      case 'storage/unknown':\n                          console.log(\"Error uploading: unknown\");\n                          break;\n                  }\n              }, function () {\n                  uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL) {\n                      console.log('File available at', downloadURL);\n                  });\n              });\n      }\n\n      //#endregion\n\n      //#region USERS\n\n      getAllUsersDescriptions = async (organization) => {\n          const path = 'organizations/' + organization + '/users/';\n          const tempElement = await this.getElementsInPath(path);\n          var userDesciptors = [];\n          for(var i=0; i < tempElement.length; i++) {\n              const user = tempElement[i];\n              const element = {\n                  userID: user.uid,\n                  userInfo: await this.getUserInformation(organization, user.uid),\n                  descriptors: await this.getDescriptors(organization, user.uid)\n              }\n              userDesciptors.push(element);\n          }\n          return userDesciptors;\n      }\n\n      addUser = async (organization, userID, firstName, lastName, email, level, gender, age) => {\n          const path = 'organizations/' + organization + '/users/' + userID +'/';\n          if( await this.checkIfUserExist(organization,userID)) {\n              return false;\n          }\n          else {\n              await this.setUserDatabaseInformation(path, firstName, lastName, email, level, gender, age);\n              return true;\n          }\n      }\n\n      updateUser = async (organization, userID, firstName, lastName, email, level, gender, age) => {\n          const path = 'organizations/' + organization + '/users/' + userID +'/';\n          await this.setUserDatabaseInformation(path, firstName, lastName, email, level, gender, age);\n          return true;\n\n      }\n      setUserDatabaseInformation = async (path, firstName, lastName, email, level, gender, age) => {\n          await this.db.ref(path+'age').set(age);\n          await this.db.ref(path+'email').set(email);\n          await this.db.ref(path+'firstName').set(firstName);\n          await this.db.ref(path+'lastName').set(lastName);\n          await this.db.ref(path+'level').set(level);\n          await this.db.ref(path+'sex').set(gender);\n      }\n\n      getUserInformation = async (organization, userID) => {\n          const path = 'organizations/' + organization + '/users/' + userID + '/';\n          var userInformation = {\n              'email':'',\n              'firstName':'',\n              'lastName':'',\n              'age':0,\n              'level':0,\n              'sex':''\n          };\n          const filter = ['email','firstName','lastName','age','level','sex'];\n          const tempElement = await this.getElementsInPath(path, filter);\n          userInformation.age = tempElement[0].value;\n          userInformation.email = tempElement[1].value;\n          userInformation.firstName = tempElement[2].value;\n          userInformation.lastName = tempElement[3].value;\n          userInformation.level = tempElement[4].value;\n          userInformation.sex = tempElement[5].value;\n\n          return userInformation;\n      }\n\n      markUserAttendance = async (organization, eventID, userID) => {\n          const path = 'organizations/' + organization + '/events/' + eventID + '/usersAttended/';\n          const tempElement = await this.getElementsInPath(path);\n          var timeStampIfRegistered = null;\n          for(var i = 0; i < tempElement.length; i++) {\n              let u = tempElement[i];\n              if(u.uid === userID) {\n                  timeStampIfRegistered = u.value;\n                  break;\n              }\n          }\n          if(timeStampIfRegistered != null) {\n              return timeStampIfRegistered;\n          }\n          else {\n              this.db.ref(path+userID).set(Date.now());\n          }\n      }\n\n      deleteUser = async (organization, userID) => {\n          const path = 'organizations/' + organization + '/users/' + userID + '/';\n          this.db.ref(path).remove();\n      }\n\n      getUsersPreview = async (organization) => {\n          var userResults = [];\n          const path = 'organizations/' + organization + '/users/';\n          const tempElement = await this.getElementsInPath(path);\n\n          for(var i=0; i < tempElement.length; i++) {\n              var userInformation = {\n                  'firstName':'',\n                  'lastName':'',\n                  'level':'',\n                  'email':'',\n                  'userID':'',\n                  'age':'',\n                  'sex':''\n              };\n              userInformation.firstName = tempElement[i].value.firstName;\n              userInformation.lastName = tempElement[i].value.lastName;\n              userInformation.level = tempElement[i].value.level;\n              userInformation.email = tempElement[i].value.email;\n              userInformation.userID = tempElement[i].uid;\n              userInformation.age = tempElement[i].value.age;\n              userInformation.sex = tempElement[i].value.sex;\n              userResults.push(userInformation);\n          }\n          return userResults;\n      }\n\n      deleteUsersDescriptors = async (organization, userID) => {\n          const path = 'organizations/' + organization + '/users/' + userID + '/descriptors/';\n          this.db.ref(path).remove();\n      }\n\n      getDescriptorsAVG = async (descriptors) => {\n          var avg = [];\n          for(var i = 0; i < descriptors[0].length; i++) {\n              var iAVG = 0;\n              for(var j = 0; j < descriptors.length; j++) {\n                  iAVG += descriptors[j][i];\n              }\n              iAVG /= descriptors.length;\n              avg.push(iAVG);\n          }\n          return avg;\n      }\n\n      getDescriptors = async (organization, userID) => {\n          const path = 'organizations/' + organization + '/users/' + userID + '/descriptors/';\n          const tempDescriptors = await this.getElementsInPath(path);\n          var descriptors = [];\n          for (var i = 0; i < tempDescriptors.length; i++) {\n              let d = tempDescriptors[i];\n              descriptors.push(d.value.value);\n          }\n\n          if(descriptors.length === 0) {\n              return descriptors;\n          }\n          /*\n          var avg = [];\n          for(var i = 0; i < descriptors[0].length; i++) {\n              var iAVG = 0;\n              for(var j = 0; j < descriptors.length; j++) {\n                  iAVG += descriptors[j][i];\n              }\n              iAVG /= descriptors.length;\n              avg.push(iAVG);\n          }\n           */\n          //descriptors = [Float32Array.from(avg)];\n\n          descriptors = [Float32Array.from(await this.getDescriptorsAVG(descriptors))];\n          return descriptors;\n      };\n\n      insertDescriptor = (organization, userID, descriptor) => {\n          this.db.ref('organizations/' + organization + '/users/' + userID + '/descriptors/').push({\n              date: Date.now(),\n              value: descriptor,\n          });\n      };\n\n      checkIfUserExist = async (organization, userID) => {\n          const path = 'organizations/'+organization+'/users/';\n          const tempElement = await this.getElementsInPath(path);\n          var found = false;\n          for(var i = 0; i < tempElement.length; i++) {\n              if(tempElement[i].uid === userID) {\n                  found = true;\n                  break;\n              }\n          }\n          return found;\n      }\n\n      getUserAttendaceReport = async (organization, eventID) => {\n          const path = 'organizations/' + organization + '/events/' + eventID + '/usersAttended/';\n          const tempElement = await this.getElementsInPath(path);\n          return tempElement;\n      }\n\n      //#endregion\n\n      //#region EVENTS\n\n      addEvent = async (organization, eventID, eventName, minimumLevel, allowedusers, notAllowedUsers, description, eventDate, passcode) => {\n          const path = 'organizations/' + organization + '/events/' + eventID +'/';\n          if( await this.checkIfEventExist(organization,eventID)) {\n              return false;\n          }\n          else {\n              await this.setEventDatabaseInformation(path, eventName, minimumLevel, allowedusers, notAllowedUsers, description, eventDate, passcode);\n\n              return true;\n          }\n      }\n\n      updateEvent = async (organization, eventID, eventName, minimumLevel, allowedusers, notAllowedUsers, description, eventDate, passcode) => {\n          const path = 'organizations/' + organization + '/events/' + eventID +'/';\n          await this.setEventDatabaseInformation(path, eventName, minimumLevel, allowedusers, notAllowedUsers, description, eventDate, passcode);\n          return true;\n\n      }\n      setEventDatabaseInformation = async (path, eventName, minimumLevel, allowedusers, notAllowedUsers, description, eventDate, passcode) => {\n          await this.db.ref(path+'name').set(eventName);\n          await this.db.ref(path+'minimumLevel').set(minimumLevel);\n          await this.db.ref(path+'allowedUsers').set(allowedusers);\n          await this.db.ref(path+'notAllowedUsers').set(notAllowedUsers);\n          await this.db.ref(path+'description').set(description);\n          await this.db.ref(path+'eventDate').set(eventDate);\n          await this.db.ref(path+'passcode').set(passcode);\n          await this.db.ref(path+'active').set(false);\n      }\n\n      loginIntoEvent = async (organization, eventID, passcode) => {\n          const path = 'organizations/'+organization+'/events/';\n          const tempElement = await this.getElementsInPath(path);\n          var login = false;\n          for(var i = 0; i < tempElement.length; i++) {\n              if(tempElement[i].uid === eventID) {\n                  if(tempElement[i].value.passcode === passcode && tempElement[i].value.active === true) {\n                      login = true;\n                  }\n                  else {\n                      login = false;\n                  }\n                  break;\n              }\n          }\n          return login;\n      }\n\n      getEventInformation = async (organization, eventID) => {\n          const path = 'organizations/' + organization + '/events/' + eventID + '/';\n          var eventInformation = {\n              'allowedUsers':'',\n              'minimumLevel':'',\n              'notAllowedUsers':'',\n          };\n          const filter = ['allowedUsers','minimumLevel','notAllowedUsers'];\n          const tempElement = await this.getElementsInPath(path, filter);\n          eventInformation.allowedUsers = tempElement[0].value;\n          eventInformation.minimumLevel = tempElement[1].value;\n          eventInformation.notAllowedUsers = tempElement[2].value;\n\n          return eventInformation;\n      }\n\n      deleteEvent = async (organization, eventID) => {\n          const path = 'organizations/' + organization + '/events/' + eventID + '/';\n          this.db.ref(path).remove();\n      }\n\n      activateEvent = async (organization, eventID) => {\n          const path = 'organizations/' + organization + '/events/' + eventID + '/active/';\n          this.db.ref(path).set(true);\n      }\n\n      stopEvent = async (organization, eventID) => {\n          const path = 'organizations/' + organization + '/events/' + eventID + '/active/';\n          this.db.ref(path).set(false);\n      }\n\n      getEventsPreview = async (organization) => {\n          var eventResult = [];\n          const path = 'organizations/' + organization + '/events/';\n          const tempElement = await this.getElementsInPath(path);\n\n          for(var i=0; i < tempElement.length; i++) {\n              var eventInformation = {\n                  'active':'',\n                  'eventDate':'',\n                  'minimumLevel':'',\n                  'name':'',\n                  'eventID':'',\n                  'description':''\n              };\n              eventInformation.active = tempElement[i].value.active;\n              eventInformation.eventDate = tempElement[i].value.eventDate;\n              eventInformation.minimumLevel = tempElement[i].value.minimumLevel;\n              eventInformation.name = tempElement[i].value.name;\n              eventInformation.eventID = tempElement[i].uid;\n              eventInformation.description = tempElement[i].value.description;\n              eventInformation.allowedUsers = tempElement[i].value.allowedUsers;\n              eventInformation.notAllowedUsers = tempElement[i].value.notAllowedUsers;\n              eventInformation.passcode = tempElement[i].value.passcode;\n              eventResult.push(eventInformation);\n          }\n          return eventResult;\n      }\n\n      checkIfEventExist = async (organization, eventID) => {\n          const path = 'organizations/'+organization+'/events/';\n          const tempElement = await this.getElementsInPath(path);\n          var found = false;\n          for(var i = 0; i < tempElement.length; i++) {\n              if(tempElement[i].uid === eventID) {\n                  found = true;\n                  break;\n              }\n          }\n          return found;\n      }\n\n      //#endregion\n\n      //#region ORGANIZATIONS\n\n      getOrganization = async () => {\n          var userID = this.auth.currentUser.uid;\n          var admin = await this.getElementsInPath('users/', userID);\n          if(admin != null){\n              return admin[0].value.companyName;\n          }\n          else{\n              return null;\n          }\n      }\n\n      //#endregion\n\n      //endregion\n\n      // *** User API ***\n      user = uid => this.db.ref(`users/${uid}`);\n      users = () => this.db.ref('users');\n  }\n  export default Firebase;","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\nexport default Firebase;\nexport { FirebaseContext, withFirebase };","import React from 'react';\nimport { withFirebase } from '../Firebase';\nconst SignOutButton = ({ firebase }) => (\n  <span onClick={firebase.doSignOut}>\n    Sign Out\n  </span>\n);\nexport default withFirebase(SignOutButton);","export const LANDING = '/';\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const HOME = '/home';\nexport const ACCOUNT = '/account';\nexport const PASSWORD_FORGET = '/pw-forget';\nexport const RECOGNIZER = '/recognizer';\nexport const NEWUSER = '/newuser';\nexport const USERPANEL = '/userpanel';","import React from 'react';\nconst AuthUserContext = React.createContext(null);\nexport default AuthUserContext;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n        if (!condition(authUser)) {\n          this.props.history.push(ROUTES.SIGN_IN);\n        }\n      });\n    }\n    componentWillUnmount() {\n      this.listener();\n    }\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {authUser =>\n            condition(authUser) ? <Component {...this.props} /> : null\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n  return compose(\n    withRouter,\n    withFirebase,\n  )(WithAuthorization);\n};\nexport default withAuthorization;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignOutButton from '../SignOut';\nimport * as ROUTES from '../../constants/routes';\n\nimport { AuthUserContext } from '../Session';\n\nimport {\n    Menu,\n    Dropdown,\n    Icon\n} from 'semantic-ui-react';\n\nconst Navigation = () => (\n  <>\n    <AuthUserContext.Consumer>\n      {authUser =>\n        authUser ? <NavigationAuth user={authUser} /> : <NavigationNonAuth />\n      }\n    </AuthUserContext.Consumer>\n  </>\n);\n\nconst NavigationAuth = ({user}) => (\n  <Menu\n  inverted\n  borderless\n  fluid\n  >\n    <Menu.Menu position='left'>\n        <Menu.Item as={Link} to={ROUTES.HOME} icon='home'/>\n    </Menu.Menu>\n    <Menu.Menu position='right'>\n        <Dropdown\n          text={user.email}\n          item\n          floating\n          pointing\n        >\n          <Dropdown.Menu>\n            <Dropdown.Item as={Link} to={ROUTES.ACCOUNT}>Profile</Dropdown.Item>\n            <Dropdown.Item as={Link} to={ROUTES.HOME}>Event Panel</Dropdown.Item>\n            <Dropdown.Item as={Link} to={ROUTES.USERPANEL}>User Panel</Dropdown.Item>\n            <Dropdown.Item>\n              <SignOutButton/>\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n    </Menu.Menu>\n</Menu>\n);\nconst NavigationNonAuth = () => (\n    <Menu\n      inverted\n      borderless\n      fluid\n    >\n        <Menu.Menu position='left'>\n            <Menu.Item as={Link} to={ROUTES.LANDING}>\n            <Icon name='home' size='big'/>\n            </Menu.Item>\n        </Menu.Menu>\n        <Menu.Menu position='right' >\n            <Menu.Item as={Link} to={ROUTES.SIGN_IN}>\n              <Icon name='user' size='big' />\n            </Menu.Item>\n        </Menu.Menu>\n    </Menu>\n);\n\nexport default Navigation;","import React, { Component } from 'react';\nimport {\n    BrowserRouter as Router, Link,\n    Route, Switch,\n} from 'react-router-dom';\nimport * as ROUTES from \"../../constants/routes\";\n\nimport {Container, Header, Responsive} from \"semantic-ui-react\";\n\n\nclass Landing extends Component {\n  render() {\n    return (\n        <div>\n            <Responsive minwidth={768}>\n                <div className=\"masthead masthead-home\">\n                    <div className=\"overlay-home\">\n                        <Container>\n                            <Header as ='h1' className=\"mastead-title\" >CARAS</Header>\n                        </Container>\n                    </div>\n                </div>\n            </Responsive>\n        </div>\n        // <div>\n        //     <div>\n        //         LANDING PAGE\n        //     </div>\n        //     <div>\n        //         <button>\n        //             <Link to={ROUTES.RECOGNIZER}>RECOGNIZER</Link>\n        //         </button>\n        //     </div>\n        // </div>\n    );\n  }\n}\nexport default Landing;","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nimport {Grid, Header, Form, Segment, Button, Container} from 'semantic-ui-react';\nconst SignUpPage = () => (\n    <Grid \n    textAlign='left'\n        centered\n  \t>\n\t\t<Grid.Column verticalAlign='middle' width='6'>\n\t\t\t<SignUpForm />\n\t\t</Grid.Column>\n  \t</Grid>\n);\n\nconst INITIAL_STATE = {\n    name: '',\n    lastName: '',\n    companyName: '',\n    email: '',\n    username: '',\n    passwordOne: '',\n    passwordTwo: '',\n    error: null,\n};\n\nclass SignUpFormBase extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { ...INITIAL_STATE };\n    }\n    onSubmit = (event) => {\n        const { name, lastName, companyName, email, username, passwordOne } = this.state;\n        this.props.firebase\n            .doCreateUserWithEmailAndPassword(email, passwordOne)\n            .then(authUser => {\n                // Create a user in your Firebase realtime database\n                return this.props.firebase\n                    .user(authUser.user.uid)\n                    .set({\n                        name,\n                        lastName,\n                        companyName,\n                        email,\n                        username,\n                    });\n            })\n\n            .then(() => {\n                this.setState({ ...INITIAL_STATE });\n                this.props.history.push(ROUTES.HOME);\n            })\n            .catch(error => {\n                this.setState({ error });\n            });\n        event.preventDefault();\n    }\n    onChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n\n    render() {\n        const {\n            name,\n            lastName,\n            companyName,\n            email,\n            username,\n            passwordOne,\n            passwordTwo,\n            error,\n        } = this.state;\n\n        const isInvalid =\n            passwordOne !== passwordTwo ||\n            passwordOne === '' ||\n            email === '' ||\n            username === '' ||\n            name === '' ||\n            lastName === '' ||\n            companyName === '';\n\n        return (\n            <>\n                <Header as ='h2' color ='teal' textAlign = 'center'>Sign Up</Header>\n                <Form size = \"large\" onSubmit={this.onSubmit} >\n                    <Segment fluid stacked>\n                        <Form.Group>\n                            <Form.Input\n                                name = 'name'\n                                label = 'First Name'\n                                value = {name}\n                                type = 'text'\n                                onChange = {this.onChange}\n                            />\n                            <Form.Input\n                                name = 'lastName'\n                                label = 'Last Name'\n                                value = {lastName}\n                                type = 'text'\n                                onChange = {this.onChange}\n                            />\n                        </Form.Group>  \n                        <Form.Input\n                            name = 'companyName'\n                            label = 'Company'\n                            icon = 'building'\n                            value = {companyName}\n                            type = 'text'\n                            onChange = {this.onChange}\n                            iconPosition = 'left'\n                        />\n                        <Form.Input\n                            name = 'username'\n                            label = 'Username'\n                            icon = 'user'\n                            value = {username}\n                            type = 'text'\n                            onChange = {this.onChange}\n                            iconPosition = 'left'\n                            placeholder = 'username'\n                        />\n                        <Form.Input\n                            label = 'Email'\n                            name = 'email'\n                            icon = 'mail'\n                            value = {email}\n                            type = 'text'\n                            onChange = {this.onChange}\n                            iconPosition = 'left'\n                            placeholder = 'email@host.com'\n                        />\n                        <Form.Input\n                            icon = 'lock'\n                            name = 'passwordOne'\n                            label = 'Password'\n                            value = {passwordOne}\n                            iconPosition = 'left'\n                            onChange = {this.onChange}\n                            placeholder  = 'Password'\n                            type = 'password'\n                        />\n                        <Form.Input\n                            icon = 'lock'\n                            name = 'passwordTwo'\n                            value = {passwordTwo}\n                            label = 'Confirm Password'\n                            iconPosition = 'left'\n                            onChange = {this.onChange}\n                            placeholder  = 'Confirm Password'\n                            type = 'password'\n                        />\n                    </Segment>\n                    <Button \n                        color = 'teal'\n                        fluid\n                        disabled = {isInvalid}\n                        type = 'submit'\n                        size = 'large'\n                    >Sign Up</Button>\n                    {error && <p>{error.message}</p>}\n                </Form>\n                </>\n        );\n    }\n}\nconst SignUpLink = () => (\n    <p>\n        Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n    </p>\n);\n\nconst SignUpForm = compose(\n    withRouter,\n    withFirebase,\n)(SignUpFormBase);\n\nexport default SignUpPage;\nexport { SignUpForm, SignUpLink };","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\n\nimport { \n\tGrid,\n\tHeader,\n\tForm,\n\tSegment,\n\tButton\n} from 'semantic-ui-react';\n\nconst PasswordForgetPage = () => (\n  <Grid \n    verticalAlign = 'middle'\n    textAlign = 'center'\n  >\n    <Grid.Column  \n    verticalAlign = 'middle'\n    style={{ maxWidth: 450 }}\n    >\n      <PasswordForgetForm />\n    </Grid.Column>\n  </Grid> \n);\nconst INITIAL_STATE = {\n  email: '',\n  error: null,\n};\nclass PasswordForgetFormBase extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n  onSubmit = event => {\n    const { email } = this.state;\n    this.props.firebase\n      .doPasswordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    event.preventDefault();\n  };\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  render() {\n    const { email, error } = this.state;\n    const isInvalid = email === '';\n\n    return (\n\t\t<>\n    \t\t<Header as ='h2' color ='teal' textAlign = 'center'>Password Reset</Header>\n    \t\t<Form size = 'small' onSubmit={this.onSubmit} >\n    \t\t    <Segment stacked>\n    \t\t      <Form.Input\n\t\t\t\t\t\t    fuid\n                name = 'email'\n                label = 'Email'\n\t\t\t\t\t\t    icon = 'user'\n\t\t\t\t\t\t    value = {email}\n    \t\t        type = 'text'\n    \t\t        onChange = {this.onChange}\n    \t\t        iconPosition = 'left'\n    \t\t        placeholder = 'email@host.com'\n    \t\t      />\n    \t\t    </Segment>\n            <Button \n    \t\t      color = 'teal'\n\t\t\t\t\t\t  fluid\n\t\t\t\t\t\t  disabled = {isInvalid}\n    \t\t      type = 'submit'\n    \t\t      size = 'large'\n    \t\t    >Reset My Password</Button>\n    \t\t    {error && <p>{error.message}</p>}\n    \t\t</Form>\n\t\t</>\n    );\n  }\n}\nconst PasswordForgetLink = () => (\n  <p>\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n  </p>\n);\nexport default PasswordForgetPage;\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\nexport { PasswordForgetForm, PasswordForgetLink };","import React from 'react';\nimport { \n    Button, \n    Form, \n    Header, \n    Segment, \n    Message\n} from 'semantic-ui-react';\n\nexport default function LoginForm({onChange, onSubmit, email, password, errors, isInvalid}) {\n    return (\n        <>\n        <Header as ='h2' color ='teal' textAlign = 'center'>Sign in</Header>\n        <Form size = 'small' onSubmit={onSubmit} >\n            <Segment stacked>\n                <Form.Input\n                    fuid\n                    icon = 'user'\n                    name = 'email'\n                    type = 'text'\n                    value = {email}\n                    onChange = {onChange}\n                    iconPosition = 'left'\n                    placeholder = 'email@host.com'\n                />\n                <Form.Input\n                    fluid = 'true'\n                    icon = 'lock'\n                    name = 'password'\n                    value = {password}\n                    iconPosition = 'left'\n                    onChange = {onChange}\n                    placeholder  = 'password'\n                    type = 'password'\n                />\n            </Segment>\n            <Button \n                color = 'teal'\n                fluid\n                disabled = {isInvalid}\n                type = 'submit'\n                size = 'large'\n            >Login</Button>\n            {/* {errors && <Message\n                            error\n                        >{errors.message}</Message>} */}\n            {errors && <p>{errors.message}</p>}\n        </Form>\n        </>\n    );\n};","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { SignUpLink } from '../SignUp';\nimport { PasswordForgetLink } from '../PasswordForget';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nimport LoginForm from '../../UIComponents/loginForm';\n\nimport { Grid, Message } from 'semantic-ui-react';\n\nconst SignInPage = () => (\n  <Grid \n    textAlign = 'center'\n    verticalAlign = 'middle'\n  >\n    <Grid.Column style={{ maxWidth: 450 }}>\n      <SignInForm />\n      <Message>\n        <PasswordForgetLink />\n        <SignUpLink />\n      </Message>\n    </Grid.Column>\n  </Grid>\n);\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null,\n};\n\nclass SignInFormBase extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n  onSubmit = event => {\n    console.log(\"On submit called\");\n    const { email, password } = this.state;\n    this.props.firebase\n      .doSignInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n        console.log(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    event.preventDefault();\n  };\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {    \n    const { email, password, error } = this.state;\n    const isInvalid = password === '' || email === '';\n\n    return (\n      <>\n      <LoginForm\n        onChange = {this.onChange}\n        onSubmit = {this.onSubmit}\n        email = {email}\n        password = {password}\n        errors = {error}\n        isInvalid = {isInvalid}\n      />\n      </>\n      // <SignInPage email = {this.state.email} password = {this.state.password} onSubmit = {this.onSubmit} onChange = {this.onChange}/>\n      // <form onSubmit={this.onSubmit}>\n      //   <input\n      //     name=\"email\"\n      //     value={email}\n      //     onChange={this.onChange}\n      //     type=\"text\"\n      //     placeholder=\"Email Address\"\n      //   />\n      //   <input\n      //     name=\"password\"\n      //     value={password}\n      //     onChange={this.onChange}\n      //     type=\"password\"\n      //     placeholder=\"Password\"\n      //   />\n      //   <button disabled={isInvalid} type=\"submit\">\n      //     Sign In\n      //   </button>\n      //   {error && <p>{error.message}</p>}\n      // </form>\n    //   <Container component=\"main\" maxWidth=\"xs\">\n    //   <CssBaseline />\n    //   <div >\n    //     {/* <Avatar className={classes.avatar}>\n    //       <LockOutlinedIcon />\n    //     </Avatar> */}\n    //     <Typography align=\"center\" component=\"h1\" variant=\"h5\">\n    //       Sign in\n    //     </Typography>\n    //     <form  noValidate onSubmit = {this.onSubmit}>\n    //       <TextField\n    //         variant=\"outlined\"\n    //         margin=\"normal\"\n    //         required\n    //         fullWidth\n    //         id=\"email\"\n    //         value={this.email}\n    //         onChange={this.onChange}\n    //         label=\"Email Address\"\n    //         name=\"email\"\n    //         autoComplete=\"email\"\n    //         autoFocus\n    //       />\n    //       <TextField\n    //         variant=\"outlined\"\n    //         margin=\"normal\"\n    //         required\n    //         fullWidth\n    //         name=\"password\"\n    //         label=\"Password\"\n    //         type=\"password\"\n    //         id=\"password\"\n    //         value={this.password}\n    //         onChange={this.onChange}\n    //         autoComplete=\"current-password\"\n    //       />\n    //       <FormControlLabel\n    //         control={<Checkbox value=\"remember\" color=\"primary\" />}\n    //         label=\"Remember me\"\n    //       />\n    //       <Button\n    //         type=\"submit\"\n    //         fullWidth\n    //         variant=\"contained\"\n    //         color=\"primary\"\n    //         // className={classes.submit}\n    //       >\n    //         Sign In\n    //       </Button>\n    //       <Grid container>\n    //         <Grid item xs>\n    //           <Link href=\"#\" variant=\"body2\">\n    //             Forgot password?\n    //           </Link>\n    //         </Grid>\n    //         <Grid item>\n    //           <Link href=\"#\" variant=\"body2\">\n    //             {\"Don't have an account? Sign Up\"}\n    //           </Link>\n    //         </Grid>\n    //       </Grid>\n    //     </form>\n    //   </div>\n    //   <Box mt={8}>\n    //   <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n    //   {'Copyright © '}\n    //   <Link color=\"inherit\" href=\"https://material-ui.com/\">\n    //     Your Website\n    //   </Link>{' '}\n    //   {new Date().getFullYear()}\n    //   {'.'}\n    // </Typography>\n    //   </Box>\n    // </Container>\n    );\n  }\n}\nconst SignInForm = compose(\n  withRouter,\n  withFirebase,\n)(SignInFormBase);\n\nexport default SignInPage;\nexport { SignInForm };","export const genderOptions = [\n    {\n      key: \"ma\",\n      value: \"male\",\n      text: \"Male\"\n    },\n    {\n      key: \"fe\",\n      value: \"female\",\n      text: \"Female\"\n    }\n  ];\n  \n  export const levelOptions = [\n    {\n      key: \"1\",\n      text: \"1\",\n      value: \"1\"\n    },\n    {\n      key: \"2\",\n      text: \"2\",\n      value: \"2\"\n    },\n    {\n      key: \"3\",\n      text: \"3\",\n      value: \"3\"\n    },\n    {\n      key: \"4\",\n      text: \"4\",\n      value: \"4\"\n    },\n    {\n      key: \"5\",\n      text: \"5\",\n      value: \"5\"\n    }\n  ];\n  ","import React from \"react\";\nimport { withFirebase } from '../components/Firebase';\nimport { AuthUserContext, withAuthorization } from '../components/Session';\n\nimport { Container, Grid, Form, Button } from \"semantic-ui-react\";\nimport { genderOptions, levelOptions } from \"../util/options\";\nimport SemanticDatepicker from 'react-semantic-ui-datepickers';\n\n\nclass EditEventForm extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tid: this.props.event.eventID,\n\t\t\tname: this.props.event.name,\n\t\t\tlevel: this.props.event.minimumLevel,\n\t\t\tallowedUsers: this.props.event.allowedUsers,\n\t\t\tnotAllowedUsers: this.props.event.notAllowedUsers,\n\t\t\tdescription: this.props.event.description,\n\t\t\tdate: this.props.event.eventDate,\n\t\t\tcode: this.props.event.passcode\n\t\t};\n\t\tconsole.log(this.props.event);\n\t}\n\n\tonChange = async (event, { name, value }) => {\n\t\tthis.setState({\n\t\t\t...this.state.values,\n\t\t\t[name]: value\n\t\t});\n\t};\n\n\tonSubmit = async (event) => {\n\t\tconst {\n\t\t\tid,\n\t\t\tname,\n\t\t\tlevel,\n\t\t\tallowedUsers,\n\t\t\tnotAllowedUsers,\n\t\t\tdescription,\n\t\t\tdate,\n\t\t\tcode\n\t\t} = this.state;\n\n\t\tconsole.log(this.state);\n\n\t\tconst {organization, updateEvents, closeModal, firebase} = this.props;\n\t\tconsole.log(organization);\n\t\tconst eventAdded = await firebase.updateEvent(\n\t\t\torganization,\n\t\t\tid,\n\t\t\tname,\n\t\t\tlevel,\n\t\t\tallowedUsers,\n\t\t\tnotAllowedUsers,\n\t\t\tdescription,\n\t\t\tdate,\n\t\t\tcode\n\t\t\t);\n\t\tif (!eventAdded) {\n\t\t\talert(\"Event could not be updated\");\n\t\t\treturn;\n\t\t}\n\t\tupdateEvents();\n\t\tcloseModal(\"Edit\");\n\t\t\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tname,\n\t\t\tlevel,\n\t\t\tallowedUsers,\n\t\t\tnotAllowedUsers,\n\t\t\tdescription,\n\t\t\tdate,\n\t\t\tcode\n\t\t} = this.state;\n\n\t\t\n\t\treturn (\n\t\t\t<Grid>\n\t\t\t\t<Grid.Row>\n\t\t\t\t\t<Grid.Column>\n\t\t\t\t\t\t\t<Form\n\t\t\t\t\t\t\t\tonSubmit={this.onSubmit}\n\t\t\t\t\t\t\t\tsize='large'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Form.Group width='equal'>\n\t\t\t\t\t\t\t\t\t<Form.Input\n\t\t\t\t\t\t\t\t\t\tfluid\n\t\t\t\t\t\t\t\t\t\tlabel=\"Event Name\"\n\t\t\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\twidth={8}\n\t\t\t\t\t\t\t\t\t\tmaxLength=\"25\"\n\t\t\t\t\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Form.Field\n\t\t\t\t\t\t\t\t\t\tcontent={\n\t\t\t\t\t\t\t\t\t\t\t<SemanticDatepicker \n\t\t\t\t\t\t\t\t\t\t\t\tname=\"date\" \n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Start Date\"\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder={date}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(param, data) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t/* Convert the date object to a string. Locale means that the format of the string will\n\t\t\t\t\t\t\t\t\t\t\t\t\t * be in accordance to the region using the application.\n\t\t\t\t\t\t\t\t\t\t\t\t\t * For the use it will be MM/DD/YYYY\n\t\t\t\t\t\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst tempData = {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: data.name,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: data.value.toLocaleDateString()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.onChange(param, tempData);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tcatch (e) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst tempData = {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: data.name,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: ''\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.onChange(param, tempData);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t\t\t<Form.Select\n\t\t\t\t\t\t\t\t\t\tfluid\n\t\t\t\t\t\t\t\t\t\tlabel=\"Level\"\n\t\t\t\t\t\t\t\t\t\tname=\"level\"\n\t\t\t\t\t\t\t\t\t\twidth={3}\n\t\t\t\t\t\t\t\t\t\tvalue={level}\n\t\t\t\t\t\t\t\t\t\toptions={levelOptions}\n\t\t\t\t\t\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Form.Input\n\t\t\t\t\t\t\t\t\t\tfluid\n\t\t\t\t\t\t\t\t\t\tlabel=\"Allowed Users\"\n\t\t\t\t\t\t\t\t\t\tname=\"allowedUsers\"\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\twidth={8}\n\t\t\t\t\t\t\t\t\t\tvalue={allowedUsers}\n\t\t\t\t\t\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Form.Input\n\t\t\t\t\t\t\t\t\t\tfluid\n\t\t\t\t\t\t\t\t\t\tlabel=\"Not Allowed Users\"\n\t\t\t\t\t\t\t\t\t\tname=\"notAllowedUsers\"\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\twidth={8}\n\t\t\t\t\t\t\t\t\t\tvalue={notAllowedUsers}\n\t\t\t\t\t\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t<Form.Group widths='equal'>\n\t\t\t\t\t\t\t\t\t<Form.TextArea\n\t\t\t\t\t\t\t\t\t\tlabel=\"Description\"\n\t\t\t\t\t\t\t\t\t\tname=\"description\"\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\twidth={8}\n\t\t\t\t\t\t\t\t\t\tvalue={description}\n\t\t\t\t\t\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tcontent=\"Cancel\"\n\t\t\t\t\t\t\t\t\tsize='large'\n\t\t\t\t\t\t\t\t\tcolor=\"red\"\n\t\t\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\t\t\ticon=\"cancel\"\n\t\t\t\t\t\t\t\t\tlabelPosition=\"left\"\n\t\t\t\t\t\t\t\t\tfloated=\"right\"\n\t\t\t\t\t\t\t\t\tonClick={()=>{\n\t\t\t\t\t\t\t\t\t\tthis.setState({});\n\t\t\t\t\t\t\t\t\t\tthis.props.closeModal(\"Edit\");\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\tcontent=\"Submit\"\n\t\t\t\t\t\t\t\t\tsize='large'\n\t\t\t\t\t\t\t\t\tcolor=\"green\"\n\t\t\t\t\t\t\t\t\ticon=\"check\"\n\t\t\t\t\t\t\t\t\tlabelPosition=\"left\"\n\t\t\t\t\t\t\t\t\tfloated=\"left\"\n\t\t\t\t\t\t\t\t/>            \n\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t</Grid.Column>\n\t\t\t\t</Grid.Row>\n\t\t\t</Grid>\n\t\t);\n\t}\n}\n\nconst condition = authUser => !!authUser;\nexport default withAuthorization(condition)(withFirebase(EditEventForm));\n","import React, { useState } from \"react\";\nimport { Button, Icon, Card, Modal} from \"semantic-ui-react\";\nimport EditEventForm from \"../UIComponents/EditEventForm\";\n\n\nexport default function EventCard({ event, organization, activateEvent, updateEvents, stopEvent , deleteEvent}) {\n    const [viewEditEventForm, setViewEditEventForm] = useState(false);\n\n    const attendance = (\n        <p>\n            <Icon name=\"user\" />\n            {/*{event.attendance}/{event.totalCount} Attendees*/}\n        </p>\n    );\n\n    const closeModal = (name) => {\n        switch(name) {\n            // case \"View\":\n            //     setViewEvent(false);\n            //     break;\n            case \"Edit\":\n                setViewEditEventForm(false);\n                break;               \n        }\n    }\n\n    const openModal = (name) => {\n        switch(name) {\n            // case \"View\":\n            //     setViewEvent(false);\n            //     break;\n            case \"Edit\":\n                setViewEditEventForm(true);\n                break;               \n        }\n    }\n\n    const editEventModal = (\n        <Modal\n            onClose={() =>{ closeModal(\"Create\")}}\n            open={viewEditEventForm}\n            size='tiny'\n            closeOnEscape={true}\n            closeOnDimmerClick={false}\n        >\n            <Modal.Header as=\"h1\">Edit Event</Modal.Header>\n            <Modal.Content>\n                <EditEventForm\n                    event={event}\n                    organization={organization}\n                    updateEvents={updateEvents}\n                    closeModal={closeModal}\n                />\n            </Modal.Content>\n        </Modal>\n    );\n\n    return (\n        <>\n            <Card fluid raised>\n                <Card.Content>\n                <Button\n                    stackable='true'\n                    color={(event.active ? \"red\" : \"blue\")}\n                    icon={(event.active ? \"stop\" : \"play\")}\n                    onClick={() => {\n                        event.active\n                            ? (stopEvent(organization,event.eventID))\n                            : (activateEvent(organization, event.eventID));\n                        updateEvents();\n                    }}\n                    size=\"medium\"\n                    floated=\"right\"\n                    />\n                    <Card.Header>{event.name}</Card.Header>\n                    <Card.Meta>Created on {event.eventDate} </Card.Meta>\n                    <Card.Description> {event.description} </Card.Description>\n                    {/* <i className=\"trash icon\" style={{'margin-left':'90%', 'cursor':'pointer'}}\n                        onClick={()=>{\n                            deleteEvent(organization,event.eventID);\n                            updateEvents();\n                        }}\n                    /> */}\n                </Card.Content>\n                <Card.Content \n                    extra \n                    textAlign='center'\n                >\n                    <div className='ui two buttons'>\n                      <Button  \n                        color='blue'\n                        content='View'\n                        icon='eye'\n                        labelPosition='left'\n                        onClick={()=>openModal(\"Edit\")}\n                    />\n                      <Button \n                        color='red'\n                        content='Delete'\n                        icon='trash'\n                        labelPosition='left'\n                        onClick={()=>{\n                            deleteEvent(organization,event.eventID);\n                            updateEvents();\n                        }}\n                        />\n                    </div>\n                </Card.Content>\n                {/*<Card.Content extra>{attendance}</Card.Content>*/}\n            </Card>\n            {editEventModal}\n        </>\n    );\n}\n","import React, { useState } from \"react\";\nimport { withFirebase } from '../components/Firebase';\n\nimport { Form, Grid, Button, Icon } from \"semantic-ui-react\";\nimport SemanticDatepicker from 'react-semantic-ui-datepickers';\n\nexport default function EventForm({organization, addEvent, updateEvents, closeModal}) {\n    const [code, setCode] = useState('');\n    \n    const [values, setValues] = useState({\n        id: \"\",\n        name: \"\",\n        code: \"\",\n        active: false,\n        minimum_level: \"\",\n        allowedUsers: '',\n        notAllowedUsers: '',\n        description: \"\",\n        date: \"\"\n    });\n\n    const [isValid, setIsValid] = useState(true);\n\n    const options = [\n        {\n            key: '1',\n            text:'1',\n            value:'1'\n        },\n        {\n            key: '2',\n            text:'2',\n            value:'2'\n        },\n        {\n            key: '3',\n            text:'3',\n            value:'3'\n        },\n        {\n            key: '4',\n            text:'4',\n            value:'4'\n        },\n        {\n            key: '5',\n            text:'5',\n            value:'5'\n        }\n    ]\n\n    var formValues = values;\n\n    var valid = isValid;\n\n    var onChange = (name, value) => {\n        formValues[name] = value;\n        setValues(formValues);\n        valid = values.name === \"\" || \n                values.code === \"\" ||\n                values.minimum_level === \"\" || \n                values.description === \"\" ||\n                values.date === \"\";\n        setIsValid(valid);\n    };\n\n    var onSubmit = async () => {\n        const eventAdded = await addEvent(\n            organization,\n            values.id,\n            values.name,\n            values.minimum_level,\n            values.allowedUsers,\n            values.notAllowedUsers,\n            values.description,\n            values.date,\n            values.code\n        );\n\n        if(!eventAdded) {\n            alert('Event ID already in use. Verify if the event was already entered.');\n        } else {\n            closeModal(\"Create\");\n            updateEvents();\n        }\n    };\n\n    return (\n        <Grid>\n            <Grid.Row>\n                <Grid.Column>\n                    <Form onSubmit={onSubmit}>\n                        <Form.Group>\n                            <Form.Input\n                                label=\"Event Name\"\n                                name=\"name\"\n                                type=\"text\"\n                                maxLength=\"15\"\n                                // value={values.name}\n                                onChange={(param, data) => {\n                                    onChange(data.name, data.value);\n                                }}\n                            />\n                            <Form.Input\n                                label=\"Event Code\"\n                                name=\"code\"\n                                type=\"text\"\n                                value={code}\n                                maxLength=\"5\"\n                                onChange={(param, data) => {\n                                    //only allow numeric values to be inputted\n                                    var regex = (/[0-9]|\\./);\n                                    if (regex.test(data.value)) {\n                                        setCode(data.value);\n                                        onChange(data.name, data.value);\n                                    }\n                                }}\n                            />\n                            <Form.Input\n                                label=\"Event ID\"\n                                name=\"id\"\n                                type=\"text\"\n                                // value={values.code}\n                                maxLength=\"10\"\n                                onChange={(param, data) => {\n                                    onChange(data.name, data.value);\n                                }}\n                            />\n                        </Form.Group>\n                        <Form.TextArea\n                            label=\"Description\"\n                            name=\"description\"\n                            type=\"text\"\n                            // value={values.description}\n                            onChange={(param, data) => {\n                                onChange(data.name, data.value);\n                            }}\n                        />\n                        <Form.Group>\n                            <Form.Input\n                                label=\"Allowed Users\"\n                                name=\"allowedUsers\"\n                                type=\"text\"\n                                // value={values.description}\n                                onChange={(param, data) => {\n                                    onChange(data.name, data.value);\n                                }}\n                            />\n                            <Form.Dropdown\n                                label = \"Minimum Level\"\n                                name = \"minimum_level\"\n                                placeholder = \"1 - 5\"\n                                fluid\n                                selection\n                                // value={checkInData.company}\n                                options = {options}\n                                onChange={(param, data) => {\n                                  onChange(data.name, data.value);\n                                }}\n                            />\n                            <Form.Field\n                                content={\n                                    <SemanticDatepicker \n                                        name=\"date\" \n                                        label=\"Start Date\"\n                                        onChange={(param, data) => {\n                                            /* Convert the date object to a string. Locale means that the format of the string will\n                                             * be in accordance to the region using the application.\n                                             * For the use it will be MM/DD/YYYY\n                                             */\n                                            try {\n                                                const dateString = data.value.toLocaleDateString();\n                                                onChange(data.name, dateString)\n                                            }\n                                            catch (e) {\n                                                onChange(data.name, '');\n                                            }\n                                        }\n                                        }\n                                    />\n                                }\n                            />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Input\n                                label=\"Not Allowed Users\"\n                                name=\"notAllowedUsers\"\n                                type=\"text\"\n                                // value={values.description}\n                                onChange={(param, data) => {\n                                    onChange(data.name, data.value);\n                                }}\n                            />\n                        </Form.Group>\n                        <Button\n                            content=\"Cancel\"\n                            size='large'\n                            type='button'\n                            color=\"red\"\n                            icon=\"cancel\"\n                            labelPosition=\"left\"\n                            floated=\"right\"\n                            onClick = {()=>{\n                                closeModal(\"Create\");\n                            }}\n                        />\n                        <Button\n                            type=\"submit\"\n                            disabled={isValid}\n                            content=\"Submit\"\n                            size='large'\n                            color=\"green\"\n                            icon=\"check\"\n                            labelPosition=\"left\"\n                            floated=\"right\"\n                        />\n                    </Form>\n                </Grid.Column>\n            </Grid.Row>\n        </Grid>\n    );\n}\n","import React, { useState } from \"react\";\nimport {\n    Grid,\n    Container,\n    Button,\n    Divider,\n    Header,\n    Card,\n    Modal\n} from \"semantic-ui-react\";\n\nimport EventCard from \"../UIComponents/EventCard\";\nimport CreateEventForm from \"../UIComponents/CreateEventForm\";\nimport EditEventForm from \"../UIComponents/EditEventForm\";\n\nexport default function EventPanel({organization, events, addEvent, updateEvents, activateEvent, stopEvent, deleteEvent}) {\n\n    const [viewCreateEventForm, setViewCreateEventForm] = useState(false);\n    const [viewEditEventForm, setViewEditEventForm] = useState(false);\n    const [viewEvent, setViewEvent] = useState(false);\n\n    const activeEvents = [];\n    const inactiveEvents = [];\n\n    if(events) {\n        events.forEach(event => {\n            if (event.active){\n                activeEvents.push(event);\n            }else {\n                inactiveEvents.push(event);}\n        });\n    }\n\n    const closeModal = (name) => {\n        switch(name) {\n            case \"View\":\n                setViewEvent(false);\n                break;\n            case \"Edit\":\n                setViewEditEventForm(false);\n                break;   \n            case \"Create\":\n                setViewCreateEventForm(false);\n                break;                \n        }\n    }\n\n\n    const createEventModal = (\n        <Modal\n            closeIcon\n            onClose={() =>{ closeModal(\"Create\")}}\n            open={viewCreateEventForm}\n            size='large'\n            closeOnEscape={true}\n            closeOnDimmerClick={false}\n        >\n            <Modal.Header as=\"h1\">New Event</Modal.Header>\n            <Modal.Content>\n                <CreateEventForm\n                    organization={organization}\n                    addEvent={addEvent}\n                    updateEvents={updateEvents}\n                    closeModal = {closeModal}\n                />\n            </Modal.Content>\n        </Modal>\n    );\n\n    const editEventModal = (\n        <>\n        </>\n    );\n\n\n    // const viewEventModal = (\n    //     <Modal\n    //         onClose={() =>{ closeModal(\"Create\")}}\n    //         open={viewEditEventForm}\n    //         size='large'\n    //         closeOnEscape={true}\n    //         closeOnDimmerClick={false}\n    //     >\n    //         <Modal.Header as=\"h1\">Edit Event</Modal.Header>\n    //         <Modal.Content>\n    //             <EditEventForm\n    //                 event={selectedEvent}\n    //                 organization={organization}\n    //                 updateEvents={updateEvents}\n    //                 closeModal={closeModal}\n    //             />\n    //         </Modal.Content>\n    //     </Modal>\n    // );\n\n    return (\n        <>\n        <Container>\n            <Grid>\n                <Grid.Row>\n                    <Grid.Column>\n                        <Button\n                            content=\"Add Event\"\n                            color='green'\n                            icon=\"add\"\n                            labelPosition=\"left\"\n                            floated=\"right\"\n                            onClick={() => {\n                                setViewCreateEventForm(true);\n                            }}\n                        />\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        </Container>\n\n            <Divider horizontal>\n                <Header as=\"h2\">Active Events</Header>\n            </Divider>\n\n            <Container>\n                <Grid stackable>\n                    <Grid.Row >\n                        <Grid.Column>\n                        <Card.Group centered itemsPerRow={3}>\n                            {activeEvents &&\n                                activeEvents.map((event, index) => (\n                                    <EventCard \n                                        event={event} \n                                        key={index}\n                                        organization={organization} \n                                        updateEvents={updateEvents} \n                                        activateEvent = {activateEvent}\n                                        stopEvent = {stopEvent}\n                                        deleteEvent = {deleteEvent}\n                                    />\n                                ))}\n                        </Card.Group>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </Container>\n\n            <Divider horizontal>\n                <Header as=\"h2\">Inactive Events</Header>\n            </Divider>\n            <Container>\n                <Grid stackable>\n                    <Grid.Row>\n                        <Grid.Column>\n                        <Card.Group centered itemsPerRow={3}>\n                            {inactiveEvents &&\n                                inactiveEvents.map((event, index) => (\n                                    <EventCard \n                                        event={event} \n                                        key={index} \n                                        organization={organization} \n                                        updateEvents={updateEvents} \n                                        activateEvent = {activateEvent}\n                                        deleteEvent = {deleteEvent}\n                                    />\n                                ))\n                            }\n                        </Card.Group>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </Container>\n            {createEventModal}\n            {/* {editEventModal} */}\n            {/* {viewEventModal} */}\n        </>\n    );\n}\n","import React, {Component} from 'react';\nimport { withAuthorization } from '../Session';\nimport { withFirebase } from '../Firebase';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\n\nimport EventPanel from '../../UIComponents/EventPanel'\n\nclass HomePage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            organization: '',\n            addEvent: null,\n            events: [],\n            updateEvents: null,\n            activateEvent: null,\n            stopEvent: null,\n            deleteEvent: null\n        }\n    }\n\n    async componentDidMount() {\n        const organization = await this.props.firebase.getOrganization();\n        const events = await this.props.firebase.getEventsPreview(organization);\n        const addEvent = this.props.firebase.addEvent;\n        const activateEvent = this.props.firebase.activateEvent;\n        const stopEvent = this.props.firebase.stopEvent;\n        const deleteEvent = this.props.firebase.deleteEvent;\n        const updateEvents  = async () => {\n            const events =  await this.props.firebase.getEventsPreview(this.state.organization);\n            this.setState({ events: events });\n        }\n        this.setState({\n            organization: organization,\n            events: events,\n            addEvent : addEvent,\n            updateEvents: updateEvents,\n            activateEvent: activateEvent,\n            stopEvent: stopEvent,\n            deleteEvent: deleteEvent\n        });\n    }\n\n    render() {\n        const {organization, events, addEvent, updateEvents, activateEvent, stopEvent, deleteEvent} = this.state;\n        return (\n            <>\n                <EventPanel\n                    events={events}\n                    organization={organization}\n                    addEvent={addEvent}\n                    updateEvents={ updateEvents }\n                    activateEvent={activateEvent}\n                    stopEvent={stopEvent}\n                    deleteEvent = {deleteEvent}\n                />\n            </>\n        )\n    }\n\n}\n\nconst condition = authUser => !!authUser;\nexport default withAuthorization(condition)(HomePage);\n\n","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n};\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n  onSubmit = event => {\n    const { passwordOne } = this.state;\n    this.props.firebase\n      .doPasswordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    event.preventDefault();\n  };\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n    const isInvalid =\n      passwordOne !== passwordTwo || passwordOne === '';\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"New Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm New Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\nexport default withFirebase(PasswordChangeForm);","import React, { Component } from \"react\";\nimport { PasswordForgetForm } from '../PasswordForget';\nimport PasswordChangeForm from '../PasswordChange';\nimport { AuthUserContext, withAuthorization } from '../Session';\n\nconst AccountPage = () => (\n  <AuthUserContext.Consumer>\n    {authUser => (\n      <div>\n        <h1>Account: {authUser.email}</h1>\n        <PasswordForgetForm />\n        <PasswordChangeForm />\n      </div>\n    )}\n  </AuthUserContext.Consumer>\n);\nconst condition = authUser => !!authUser;\nexport default withAuthorization(condition)(AccountPage);","import React, { Component } from 'react';\nimport * as faceapi from 'face-api.js';\nimport { withFirebase } from '../Firebase';\nimport 'react-html5-camera-photo/build/css/index.css';\nimport Camera from 'react-html5-camera-photo';\nimport { Grid, Segment, Icon, Label, Header, Loader, Dimmer } from 'semantic-ui-react';\n//import Webcam from \"react-webcam\";\n//\n\nclass CameraFaceDescriptor extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n            remainingPhotos: 5\n        }\n    }\n\n    handleTakePhoto = async (dataUri) => {\n        const {organization, userID} = this.props.children;\n        this.setState({loading: true});\n        if(this.state.remainingPhotos == 0) {\n            return;\n        }\n\n        //LOAD WEBCAM CAPTURED IMAGE AND BUILD THE DESCRIPTOR SET\n        let blob =  await fetch(dataUri).then(r => r.blob());    //Build Image\n        const image =  await faceapi.bufferToImage(blob);\n        const detection =  await faceapi.detectAllFaces(image).withFaceLandmarks().withFaceDescriptors();\n\n        if(detection.length === 0) {\n            alert(\"No face detected. Please try again.\");\n            return;\n        }\n\n        if(detection.length > 1) {\n            alert(\"Multiple faces detected. Please try again.\");\n            return;\n        }\n\n        //TAKEN FROM CHILDREN IN THE CONSTRUCTOR\n        // const organization = this.props.children.organization;\n        // const userID = this.props.children.userID;\n\n        await this.props.firebase.insertDescriptor(organization,userID,detection[0].descriptor);\n        this.setState({remainingPhotos:this.state.remainingPhotos-1});\n        this.setState({loading: false});\n    }\n\n\n    render() {\n        const {remainingPhotos, loading} = this.state;\n        const {updateUsers, closeModal} = this.props.children;\n\n        Promise.all([\n            faceapi.nets.faceRecognitionNet.loadFromUri('/models'),\n            faceapi.nets.faceLandmark68Net.loadFromUri('/models'),\n            faceapi.nets.ssdMobilenetv1.loadFromUri('/models'),\n        ])\n\n        if(remainingPhotos == 0) {\n            alert('Completed!');\n            closeModal();\n            updateUsers();\n        }\n\n        return (\n            <Grid\n                centered\n            >\n                <Grid.Row>\n                    <Header as='h1' icon ='camera'>\n                        Take Pictures\n                        <Header.Subheader>\n                            Remaining Photos: <Label icon ='picture' content={remainingPhotos}></Label>\n                        </Header.Subheader>\n                    </Header>\n                </Grid.Row>\n                <Grid.Row>\n                    <Grid.Column stretched>\n                        <Dimmer active={loading}>\n                            <Loader content='Processing Image...' size='huge'/>\n                        </Dimmer>\n                        <Camera\n                            onTakePhoto = { (dataUri) => { this.handleTakePhoto(dataUri); } }\n                        />\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n            // <div>\n            //     <WebcamCapture/>\n            //     <p>Remaining Photos: {this.state.remainingPhotos}</p>\n            // </div>\n        );\n    }\n}\nexport default withFirebase(CameraFaceDescriptor);","import React, { Component } from 'react';\nimport Camera from 'react-html5-camera-photo';\nimport * as faceapi from 'face-api.js';\nimport * as canvas from 'canvas';\nimport { withFirebase } from '../Firebase';\nimport 'react-html5-camera-photo/build/css/index.css';\nimport { Divider, Grid, Header, Form, Button, Icon } from 'semantic-ui-react';\n\n\nvar constructorImages = new Array();\n\nclass FileFaceDescriptor extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            images: []\n        }\n    }\n\n    onSubmit = async() => {\n        var count = 0;\n        const {images} = this.state;\n\n        // const images = [\n        //     document.getElementById('file0').files,\n        //     document.getElementById('file1').files,\n        //     document.getElementById('file2').files,\n        //     document.getElementById('file3').files,\n        //     document.getElementById('file4').files,\n        // ];\n\n        for (var i = 0; i< images.length; i++) {\n            const response = await this.handlePhoto(images[i])\n            if (response) {\n                count++;\n            }\n        }\n\n        if(count === 0) {\n            alert('You need to upload at least one valid picture');\n        }\n        else {\n            alert('Images processed correctly');\n            this.props.children.closeModal();\n            this.props.children.updateUsers();\n        }\n    }\n\n    handlePhoto = async (imgRaw) => {\n        const image =  await faceapi.bufferToImage(imgRaw);\n        const detection =  await faceapi.detectAllFaces(image).withFaceLandmarks().withFaceDescriptors();\n        const {organization, userID} = this.props.children;\n        const fb = this.props.firebase;\n\n        if(detection.length === 0) {\n            alert(\"No face detected on the image \" + imgRaw.name);\n            return false;\n        }\n        if(detection.length > 1) {\n            alert(\"More than one face detected on the image \" + imgRaw.name);\n            return false;\n        }\n        await fb.insertDescriptor(organization,userID,detection[0].descriptor);\n        return true;\n    }\n\n    \n\n    render() {\n        var isValid = (this.state.images.length == 5) ? true : false;\n\n        Promise.all([\n            faceapi.nets.faceRecognitionNet.loadFromUri('/models'),\n            faceapi.nets.faceLandmark68Net.loadFromUri('/models'),\n            faceapi.nets.ssdMobilenetv1.loadFromUri('/models'),\n        ])\n\n        //TAKEN FROM CHILDREN IN THE CONSTRUCTOR\n        // const {organization, userID} = this.props.children;\n        // // const organization = this.props.children.organization;\n        // // const userID = this.props.children.userID;\n        // const fb = this.props.firebase;\n\n        return (\n            // <div>\n            //     <p>Select your files</p>\n            //     <br/>\n            //     <input type=\"file\" id=\"file0\" accept={\"image/jpeg, image/png\"}/>\n            //     <input type=\"file\" id=\"file1\" accept={\"image/jpeg, image/png\"}/>\n            //     <input type=\"file\" id=\"file2\" accept={\"image/jpeg, image/png\"}/>\n            //     <input type=\"file\" id=\"file3\" accept={\"image/jpeg, image/png\"}/>\n            //     <input type=\"file\" id=\"file4\" accept={\"image/jpeg, image/png\"}/>\n            //     <br/>\n            //     <p>You can upload up to 5 pictures.</p>\n            //     <button onClick={()=> processPhotos()}>Process</button>\n            // </div>\n\n            <Grid>\n                <Grid.Row>\n                    <Header textAlign='center' as='h1' icon>\n                        <Icon name='image file'/>\n                        Upload Your Pictures\n                    </Header>\n                </Grid.Row>\n                <Divider/>\n                <Grid.Row centered>\n                    <Form\n                        onSubmit={this.onSubmit}\n                    >\n                        <Form.Input\n                            type='file'\n                            name='0'\n                            multiple\n                            accept={'image/jpeg, image/png'}\n                            onChange={(param, data)=>{\n                                // console.log(param.target.files);\n                                constructorImages[data.name] = param.target.files[0];\n                                this.setState({images: constructorImages});\n                            }}\n                        />\n                        <Form.Input\n                            type='file'\n                            name='1'\n                            accept={'image/jpeg, image/png'}\n                            onChange={(param, data)=>{\n                                constructorImages[1] = param.target.files[0];\n                                this.setState({images: constructorImages});\n                            }}\n                        />\n                        <Form.Input\n                            type='file'\n                            name='2'\n                            accept={'image/jpeg, image/png'}\n                            onChange={(param, data)=>{\n                                constructorImages[2] = param.target.files[0];\n                                this.setState({images: constructorImages});\n                            }}\n                        />\n                        <Form.Input\n                            type='file'\n                            name='3'\n                            accept={'image/jpeg, image/png'}\n                            onChange={(param, data)=>{\n                                constructorImages[3] = param.target.files[0];\n                                this.setState({images: constructorImages});\n                            }}\n                        />\n                        <Form.Input\n                            type='file'\n                            name='4'\n                            accept={'image/jpeg, image/png'}\n                            onChange={(param, data)=>{\n                                constructorImages[4] = param.target.files[0];\n                                this.setState({images: constructorImages});\n                            }}\n                        />\n                        <Button\n                            type='submit'\n                            icon='upload'\n                            labelPosition='right'\n                            content='Upload'\n                            primary\n                            disabled={!isValid}\n                        />                        \n                    </Form>\n                </Grid.Row>\n            </Grid>\n        );\n    }\n}\nexport default withFirebase(FileFaceDescriptor);","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport CameraFaceDescriptor from \"./CameraFaceDescriptor\";\nimport FileFaceDescriptor from \"./FileFaceDescriptor\";\nimport CustomUploadButton from 'react-firebase-file-uploader/lib/CustomUploadButton';\nimport { AuthUserContext, withAuthorization } from '../Session';\n\nimport {Form, Button, Grid, Modal, Icon} from 'semantic-ui-react';\n\nimport { genderOptions, levelOptions } from \"../../util/options\";\n\nvar user = {\n    userID: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    level: '',\n    gender: '',\n    age: ''\n}\n\nvar answer;\nvar imageModal;\nvar confirmationImageModal;\n\nclass NewUser extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewImageModal: false,\n            viewConfirmationImageModal: false,\n            answer: false,\n            recognizer: '',\n            organization: this.props.children.organization,\n            user: {\n                userID: '',\n                firstName: '',\n                lastName: '',\n                email: '',\n                level: '',\n                gender: '',\n                age: ''\n            },\n            errors: {\n                userID: null,\n                email: null\n            }\n        }\n    }\n\n    onSubmit = async (event) => {\n        const {\n            userID,\n            firstName,\n            lastName,\n            email,\n            level,\n            gender,\n            age\n        } = this.state.user;\n\n        const {organization} = this.state;\n\n        // console.log(this.state);\n        // const userID = document.getElementById('userID').value;\n        // const firstName = document.getElementById('firstName').value;\n        // const lastName = document.getElementById('lastName').value;\n        // const email = document.getElementById('email').value;\n        // const level = document.getElementById('level').value;\n        // const gender = document.getElementById('gender').value;\n        // const age = document.getElementById('age').value;\n\n        // var error = 'All fields must be filled. Please enter a value for: ';\n        // if(userID === '') { error+=' UserID'; }\n        // if(firstName === '') { error+=' FirstName'; }\n        // if(lastName === '') { error+=' LastName'; }\n        // if(email === '') { error+=' Email'; }\n        // if(level === '') { error+=' Level'; }\n        // if(gender === '') { error+=' Gender'; }\n        // if(age === '') { error+=' Age'; }\n\n        // if(error != 'All fields must be filled. Please enter a value for: ') {\n        //     alert(error);\n        //     return;\n        // }\n        const userAdded = await this.props.firebase.addUser(organization,userID,firstName,lastName,email,level,gender,age);\n        if(!userAdded) {\n            alert('User ID already in use. Verify if the user was already entered.')\n            return;\n        }\n\n        // document.getElementById('userID').disabled = true;\n        // document.getElementById('firstName').disabled = true;\n        // document.getElementById('lastName').disabled = true;\n        // document.getElementById('email').disabled = true;\n        // document.getElementById('level').disabled = true;\n        // document.getElementById('gender').disabled = true;\n        // document.getElementById('age').disabled = true;\n        // document.getElementById('addUser').disabled = true;\n\n        // this.props.userUpdate();\n\n        // const answer =  window.confirm(\"Do you want to use you camera to take user face descriptions? \\n If you want to upload the images files press Cancel\");\n        // if(answer) {\n        //     this.setState({\n        //         recognizer: <CameraFaceDescriptor children={{'organization':organization,'userID':userID}} />,\n        //     });\n        // }\n        // else {\n        //     this.setState({\n        //         recognizer: <FileFaceDescriptor children={{'organization':organization,'userID':userID}} />,\n        //     });\n        // }\n\n        // imageModal = (\n        //     <Modal\n        //         open={this.state.viewImageModal}\n        //         size='large'\n        //         closeOnDimmerClick={false}\n        //     >\n        //         <Modal.Header as='h1' content={answer ? 'Take Pictures' : 'Choose Your Pictures'}/>\n        //         <Modal.Content content={\n        //             answer\n        //                 ? (<CameraFaceDescriptor children={{'organization':organization,'userID':userID}} />)\n        //                 : (<FileFaceDescriptor children={{'organization':organization,'userID':userID}} />)\n        //             }\n        //         />\n        //     </Modal>\n        // )\n        this.setState({viewConfirmationImageModal: true});\n    }\n\n    onChange = (event, {name, value}) => {\n        user[name] = value\n        this.setState({user});\n    }\n\n    closeModal = async() => {\n        await this.setState({viewImageModal: false});\n        await this.props.closeModal(\"Create\");\n    }\n\n    render() {\n        const {\n            userID,\n            firstName,\n            lastName,\n            email,\n            age,\n            gender,\n            level\n        } = this.state.user;\n        \n        const {\n            organization,\n            viewConfirmationImageModal,\n            viewImageModal,\n            recognizer,\n        } = this.state\n        \n\n\n        const {closeModal} = this.props;\n                \n        const isInvalid =   userID === '' ||\n                            firstName === '' ||\n                            lastName === '' ||\n                            email === '' ||\n                            gender === '' ||\n                            level === '' ||\n                            age === '';\n\n        return (\n            <>\n                {/* <h1>NEW USERS</h1>\n                <div id={'InputControls'}>\n                    <p>User ID:</p>\n                    <input id={'userID'}/>\n                    <p>First Name:</p>\n                    <input id={'firstName'}/>\n                    <p>Last Name:</p>\n                    <input id={'lastName'}/>\n                    <p>Email:</p>\n                    <input id={'email'}/>\n                    <p>Level:</p>\n                    <input id={'level'}/>\n                    <p>Gender:</p>\n                    <input id={'gender'}/>\n                    <p>Age:</p>\n                    <input id={'age'}/>\n                    <br/>\n                    <button id={'addUser'} onClick={() => this.addUserClick() }>Insert User</button>\n                </div> */}\n                <Grid>\n                    <Grid.Row>\n                        <Grid.Column>\n                            <Form\n                                noValidate\n                                onSubmit={this.onSubmit}\n                                size='large'\n                            >\n                                <Form.Group width='equal'>\n                                    <Form.Input\n                                        fluid\n                                        label=\"First Name\"\n                                        name=\"firstName\"\n                                        type=\"text\"\n                                        width={8}\n                                        maxLength=\"25\"\n                                        value={firstName}\n                                        onChange={this.onChange}\n                                    />\n                                    <Form.Input\n                                        fluid\n                                        label=\"Last Name\"\n                                        name=\"lastName\"\n                                        type=\"text\"\n                                        width={8}\n                                        maxLength=\"25\"\n                                        value={lastName}\n                                        onChange={this.onChange}\n                                    />}\n                                    <Form.Select\n                                        fluid\n                                        label=\"Level\"\n                                        name=\"level\"\n                                        width={3}\n                                        options={levelOptions}\n                                        onChange={this.onChange}\n                                    />\n                                </Form.Group>\n                                <Form.Group widths='equal'>\n                                    <Form.Input\n                                        fluid\n                                        label=\"User ID\"\n                                        name=\"userID\"\n                                        type=\"text\"\n                                        width={4}\n                                        maxLength=\"15\"\n                                        value={userID}\n                                        onChange={({param: event}, data) => {\n                                            //only allow alphanumeric values to be inputted\n                                            var regex = (/^[A-Za-z0-9]+/);\n                                            if (regex.test(data.value)) {\n                                                this.onChange(event, data)\n                                            }\n                                        }}\n                                    />\n                                    <Form.Select\n                                        fluid\n                                        label=\"Gender\"\n                                        name=\"gender\"\n                                        width={2}\n                                        options={genderOptions}\n                                        onChange={this.onChange}\n                                    />\n                                    <Form.Input\n                                        fluid\n                                        label=\"Age\"\n                                        name=\"age\"\n                                        type=\"text\"\n                                        value={age}\n                                        maxLength=\"2\"\n                                        width={2}\n                                        onChange={({param: event}, data) => {\n                                            //only allow numeric values to be inputted\n                                            var regex = (/^[\\d]*$/);\n                                            if (regex.test(data.value)) {\n                                                this.onChange(event, data)\n                                            }\n                                        }}\n                                    />\n                                </Form.Group>\n                                <Form.Group widths='equal'>\n                                    <Form.Input\n                                        fluid\n                                        label=\"Email\"\n                                        name=\"email\"\n                                        type=\"text\"\n                                        width={8}\n                                        maxLength='40'\n                                        value={email}\n                                        onChange={this.onChange}\n                                    />\n                                </Form.Group>\n                                <Button\n                                    content=\"Cancel\"\n                                    size='large'\n                                    color=\"red\"\n                                    type='button'\n                                    icon=\"cancel\"\n                                    labelPosition=\"left\"\n                                    floated=\"right\"\n                                    onClick={()=>{\n                                        user = {\n                                            userID: '',\n                                            firstName: '',\n                                            lastName: '',\n                                            email: '',\n                                            level: '',\n                                            gender: '',\n                                            age: ''\n                                        }\n                                        this.setState(user);\n                                        this.props.closeModal(\"Create\");\n                                    }}\n                                />\n                                <Button\n                                    type=\"submit\"\n                                    content=\"Submit\"\n                                    disabled={isInvalid}\n                                    size='large'\n                                    color=\"green\"\n                                    icon=\"check\"\n                                    labelPosition=\"left\"\n                                    floated=\"left\"\n                                />            \n                            </Form>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            \n                <Modal \n                    size='tiny'\n                    closeOnDimmerClick={false}\n                    open={viewConfirmationImageModal}\n                >\n                    <Modal.Header>Required Images</Modal.Header>\n                    <Modal.Content>\n                        <Modal.Description>\n                            <p> To complete this user's profile, we need a set of pictures for our AI to\n                                identify this user upon check in. These pictures are securely stored in our database\n                                and will not be shared.\n                            </p>\n                            <p> How would you like to provide these pictures?</p>\n                        </Modal.Description>\n                    </Modal.Content>\n                    <Modal.Actions>\n                        <Grid\n                        stackable={false}\n                        >\n                            <Grid.Row columns={1}>\n                                <Grid.Column>\n                                    <Button\n                                        primary\n                                        icon='camera'\n                                        labelPosition='left'\n                                        floated='left'\n                                        content='Take Pictures'\n                                        onClick={()=>{\n                                            this.setState({answer: true});\n                                            this.setState({recognizer:<CameraFaceDescriptor children={{'updateUsers': this.props.userUpdate,'organization':organization,'userID':userID, 'closeModal': this.closeModal}} />})\n                                            this.setState({viewConfirmationImageModal: false});\n                                            this.setState({viewImageModal: true});\n\n                                        }}\n                                    />\n                                    <Button\n                                        primary\n                                        icon='image file'\n                                        labelPosition='left'\n                                        floated='right'\n                                        content='Upload Files'\n                                        onClick={()=>{\n                                            this.setState({answer: false});\n                                        this.setState({recognizer:<FileFaceDescriptor children={{'updateUsers': this.props.userUpdate,'organization':organization,'userID':userID, 'closeModal': this.closeModal}}/>})\n                                            this.setState({viewConfirmationImageModal: false});\n                                            this.setState({viewImageModal: true});\n                                        }}\n                                    />\n                                </Grid.Column>\n                            </Grid.Row>\n                        </Grid>\n                    </Modal.Actions>\n                </Modal>\n        \n                <Modal\n                    size={answer ? 'large' : 'small'}\n                    open={viewImageModal}\n                    onClose={()=>closeModal(\"Create\")}\n                    closeOnDimmerClick={false}\n                >\n                    <Modal.Content content={recognizer}></Modal.Content>\n                </Modal>\n\n                {/* <br/>\n                <div id={'FaceDescriptorArea'}>\n                    {this.state.recognizer}\n                </div> */}\n            </>\n        );\n    }\n}\nconst condition = authUser => !!authUser;\nexport default withAuthorization(condition)(withFirebase(NewUser));","import React, { Component } from 'react';\r\nimport { withFirebase } from '../Firebase';\r\nimport { AuthUserContext, withAuthorization } from '../Session';\r\n\r\nclass NewEvent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recognizer: ''\r\n        }\r\n    }\r\n\r\n    async addEventClick() {\r\n        const eventID = document.getElementById('eventID').value;\r\n        const eventName = document.getElementById('eventName').value;\r\n        const minimumLevel = document.getElementById('minimumLevel').value;\r\n        const allowedUsers = document.getElementById('allowedUsers').value;\r\n        const notAllowedUsers = document.getElementById('notAllowedUsers').value;\r\n        const description = document.getElementById('description').value;\r\n        const eventDate = document.getElementById('eventDate').value;\r\n        const passCode = document.getElementById('passcode').value;\r\n\r\n        var error = 'All fields must be filled. Please enter a value for: ';\r\n        if(eventID === '') { error+=' eventID'; }\r\n        if(eventName === '') { error+=' Event Name'; }\r\n        if(minimumLevel === '') { error+=' Minimum Level'; }\r\n        if(description === '') { error+=' Description'; }\r\n        if(eventDate === '') { error+=' Event Date'; }\r\n        if(passCode === '') {error+=' Pass Code'}\r\n\r\n        if(error !== 'All fields must be filled. Please enter a value for: ') {\r\n            alert(error);\r\n            return;\r\n        }\r\n        const organization = this.props.children.organization;\r\n        const eventAdded = await this.props.firebase.addEvent(organization, eventID, eventName, minimumLevel, allowedUsers, notAllowedUsers, description, eventDate, passCode);\r\n        if(!eventAdded) {\r\n            alert('Event ID already in use. Verify if the event was already entered.');\r\n        }\r\n\r\n        this.props.eventUpdate();\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>NEW EVENT</h1>\r\n                <div>\r\n                    <p>Event ID:</p>\r\n                    <input id={'eventID'}/>\r\n                    <p>Event Name:</p>\r\n                    <input id={'eventName'}/>\r\n                    <p>Minimum Level:</p>\r\n                    <input id={'minimumLevel'}/>\r\n                    <p>Allowed Employees ID:</p>\r\n                    <input id={'allowedUsers'}/>\r\n                    <p>Not Allowed Employees ID:</p>\r\n                    <input id={'notAllowedUsers'}/>\r\n                    <p>Description:</p>\r\n                    <input id={'description'}/>\r\n                    <p>Pass Code:</p>\r\n                    <input id={'passcode'}/>\r\n                    <p>Event Date:</p>\r\n                    <input id={'eventDate'}/>\r\n                    <br/>\r\n                    <button onClick={() => this.addEventClick() }>Insert Event</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst condition = authUser => !!authUser;\r\nexport default withAuthorization(condition)(withFirebase(NewEvent));","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport CustomUploadButton from 'react-firebase-file-uploader/lib/CustomUploadButton';\nimport { AuthUserContext, withAuthorization } from '../Session';\nimport NewUser from \"../NewUser\";\nimport NewEvent from \"../NewEvent\";\n\nclass AdminPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        organization: '',\n        users: [],\n        events: []\n    }\n  }\n\n  async componentDidMount() {\n    const organization = await this.props.firebase.getOrganization();\n    const users = await this.props.firebase.getUsersPreview(organization);\n    const events = await this.props.firebase.getEventsPreview(organization);\n    this.setState({\n        organization: organization,\n        users: users,\n        events: events\n    });\n  }\n\n  async updateEvent() {\n      const events = await this.props.firebase.getEventsPreview(this.state.organization);\n      this.setState({ events: events });\n  }\n\n    async updateUser() {\n        const users = await this.props.firebase.getUsersPreview(this.state.organization);\n        this.setState({ users: users });\n    }\n\n  render() {\n      const {organization, users, events} = this.state;\n\n      return (\n          <div>\n              <h1>Admin</h1>\n              <p>Upload file</p>\n              <p>Add User</p>\n              <NewUser children={{'organization': organization}} userUpdate={ this.updateUser.bind(this) }/>\n\n              <p>Add Event</p>\n              <NewEvent children={{'organization': organization}} eventUpdate={ this.updateEvent.bind(this) }/>\n              <br/>\n              <h2>USER LIST</h2>\n              <UserList users={users}/>\n              <br/>\n              <h2>EVENT LIST</h2>\n              <EventList events={events}/>\n\n          </div>\n      );\n  }\n}\n\nconst UserList = ({users}) => (\n    <ul>\n        {\n            users.map(\n                user => (\n                    <div >\n                        <h3> { user.email } </h3>\n                        <p> { user.firstName } { user.lastName } </p>\n                        <p> Level: { user.level } </p>\n                    </div>\n                )\n            )\n        }\n    </ul>\n);\n\nconst EventList = ({events}) => (\n    <ul>\n        {\n            events.map(\n                event => (\n                    <div>\n                        <h3> { event.eventID } </h3>\n                        <p> Name: { event.name } </p>\n                        <p> Date: { event.eventDate } </p>\n                        <p> Min Level: { event.minimumLevel } </p>\n                        <p> Status: { event.active } </p>\n                    </div>\n                )\n            )\n        }\n    </ul>\n);\n\nconst condition = authUser => !!authUser;\nexport default withAuthorization(condition)(AdminPage);","import React, { Component } from 'react';\nimport Camera from 'react-html5-camera-photo';\nimport * as faceapi from 'face-api.js';\nimport * as canvas from 'canvas';\nimport { withFirebase } from '../Firebase';\nimport 'react-html5-camera-photo/build/css/index.css';\n\n//\nclass Face_Recognition extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        //INPUTS FROM CHILDREN IN THE CONSTRUCTOR\n        const organization = this.props.children.organization;\n        const eventID = this.props.children.event;\n\n        //INSTANCE OF FIREBASE\n        const fb = this.props.firebase;\n\n        /**\n         * @param userID\n         * @returns {Promise<null|LabeledFaceDescriptors>}\n         * LOADS USER DESCRIPTORS FORM DATABASE AND CREATE LABELEDFACEDESCRIPTOR\n         * INSTANCE. INSTANCE USED TO COMPARE USER IMAGE\n         */\n        async function loadUserDescriptor(userID) {\n            let descriptionSet = await fb.getDescriptors(organization,userID);\n            if(descriptionSet.length == 0) { return null; }\n            return new faceapi.LabeledFaceDescriptors(userID, descriptionSet);\n        }\n\n        /**\n         * @param dataUri: TAKEN IMAGE DATA\n         * @returns {Promise<void>}\n         * VERIFIES IF THE IMAGE IS VALID AND GET USER INFORMATION\n         */\n        async function handleTakePhoto (dataUri) {\n\n            //LOAD WEBCAM CAPTURED IMAGE AND BUILD THE DESCRIPTOR SET\n            let blob =  await fetch(dataUri).then(r => r.blob());    //Build Image\n            const image =  await faceapi.bufferToImage(blob);\n            const detection =  await faceapi.detectAllFaces(image).withFaceLandmarks().withFaceDescriptors();\n            if(detection.length === 0) {\n                alert(\"No face detected. Please try again.\");\n                return;\n            }\n\n            if(detection.length > 1) {\n                alert(\"Multiple faces detected. Please try again.\");\n                return;\n            }\n\n            //CHECK IF ELEMENT ID WAS ENTERED\n            const userID = document.getElementById(\"userId\").value;\n            if(userID == '') {\n                alert(\"No user ID detected. Process will take longer to detect user\");\n                await handleTakePhotoNoUserID(image, detection);\n                return;\n            }\n\n            //GET USER INFO, EVENT INFO AND VERIFY IF IT IS ALLOWED\n            const userInfo = await fb.getUserInformation(organization,userID);\n            if(userInfo == null) {\n                alert(\"Invalid user id\");\n                return;\n            }\n\n            const eventInfo = await fb.getEventInformation(organization,eventID);\n            if(eventInfo.notAllowedUsers.includes(userID)) {\n                alert('USER NOT ALLOWED');\n                return\n            }\n            if(eventInfo.minimumLevel > userInfo.level && !eventInfo.allowedUsers.includes(userID)) {\n                alert('USER NOT ALLOWED');\n                return\n            }\n\n            //LOAD DESCRIPTOR SET AND VERIFY IF IT IS VALID\n            const descriptorSet =  await (loadUserDescriptor(userID));\n            if(descriptorSet == null || descriptorSet.length == 0) {\n                alert(\"Unable to process. Invalid user ID or user has no face descriptors stored\");\n                return;\n            }\n\n            //CREATE THE FACE MATCHER AND MATH THE DESCRIPTORS\n            const faceMatcher = await new faceapi.FaceMatcher(descriptorSet, 0.6);\n            const displaySize = { width: image.width, height: image.height };\n            const resizedDetections = await faceapi.resizeResults(detection, displaySize);\n            const results = resizedDetections.map(d => faceMatcher.findBestMatch(d.descriptor));\n\n            // RECOGNIZE AGE AND GENDER\n            const detectionsWithAgeAndGender =  await faceapi.detectAllFaces(image).withAgeAndGender()\n\n            //#region MANAGE RESULT\n            const faceAccuracy = (1 - results[0].distance)*100;\n            const ageAccuracy = Math.abs(userInfo.age-detectionsWithAgeAndGender[0].age);\n            const sexDetection = (detectionsWithAgeAndGender[0].gender == userInfo.sex);\n\n            await evaluateResult(faceAccuracy,ageAccuracy,sexDetection,userID,userInfo);\n\n        }\n\n        async function handleTakePhotoNoUserID(image, detection) {\n\n            //GET ALL USERS DESCRIPTORS\n            const usersDescriptors = await fb.getAllUsersDescriptions(organization);\n            var bestValue = 0;\n            var index = -1;\n\n            var bestFaceAccuracy =0;\n            var bestAgeAccuracy =0;\n            var bestSexDetection =0;\n\n            for (var i =0; i < usersDescriptors.length; i++) {\n                const current = usersDescriptors[i];\n                if (current.descriptors === null || current.descriptors.length <= 0) {\n                    continue;\n                }\n                const descriptorSet = new faceapi.LabeledFaceDescriptors(current.userID, current.descriptors);\n\n                //CREATE THE FACE MATCHER AND MATH THE DESCRIPTORS\n                const faceMatcher = await new faceapi.FaceMatcher(descriptorSet, 0.6);\n                const displaySize = {width: image.width, height: image.height};\n                const resizedDetections = await faceapi.resizeResults(detection, displaySize);\n                const results = resizedDetections.map(d => faceMatcher.findBestMatch(d.descriptor));\n                // RECOGNIZE AGE AND GENDER\n                const detectionsWithAgeAndGender = await faceapi.detectAllFaces(image).withAgeAndGender();\n\n                const faceAccuracy = (1 - results[0].distance) * 100;\n                const ageAccuracy = Math.abs(current.userInfo.age - detectionsWithAgeAndGender[0].age);\n                const sexDetection = (detectionsWithAgeAndGender[0].gender == current.userInfo.sex);\n\n                if (faceAccuracy > bestFaceAccuracy) {\n                    bestFaceAccuracy = faceAccuracy;\n                    bestAgeAccuracy = ageAccuracy;\n                    bestSexDetection = sexDetection;\n                    index = i;\n                }\n            }\n\n            if(index < 0) {\n                alert('Unable to locate user.');\n                return;\n            }\n\n            const userID = usersDescriptors[index].userID;\n\n            //GET USER INFO, EVENT INFO AND VERIFY IF IT IS ALLOWED\n            const userInfo = usersDescriptors[index].userInfo;\n\n            const eventInfo = await fb.getEventInformation(organization,eventID);\n            if(eventInfo.notAllowedUsers.includes(userID)) {\n                alert('USER NOT ALLOWED');\n                return\n            }\n            if(eventInfo.minimumLevel > userInfo.level && !eventInfo.allowedUsers.includes(userID)) {\n                alert('USER NOT ALLOWED');\n                return\n            }\n\n            await evaluateResult(bestFaceAccuracy,bestAgeAccuracy,bestSexDetection,userID,userInfo);\n\n        }\n\n        async function evaluateResult (faceAccuracy, ageAccuracy, sexDetection, userID, userInfo) {\n\n            console.log('FACE ACCURACY: '+faceAccuracy+' %')\n            console.log('AGE DIFFERENCE: '+ageAccuracy+' years')\n            console.log('SEX DETECTED: '+sexDetection)\n\n            var result = '';\n\n            if(ageAccuracy < 7 && sexDetection) {\n                if(faceAccuracy > 55) {\n                    console.log('AUTHENTICATION CORRECT')\n                    result = 'AUTHENTICATION CORRECT';\n                }\n                else if (faceAccuracy > 50) {\n                    console.log('PLEASE TRY AGAIN')\n                    result = 'PLEASE TRY AGAIN';\n                }\n                else {\n                    console.log('AUTHENTICATION FAILED')\n                    result = 'AUTHENTICATION FAILED';\n                }\n            }\n            else {\n                console.log('AUTHENTICATION FAILED')\n                result = 'AUTHENTICATION FAILED';\n            }\n            document.getElementById(\"ResultText\").innerHTML = 'RESULT: '+result;\n            //#endregion\n\n            if(result != 'AUTHENTICATION CORRECT') {\n                console.log('NO RECORDING ATTENDANCE');\n                return;\n            }\n\n            const respAttendance = await fb.markUserAttendance(organization,eventID,userID);\n            console.log(respAttendance);\n            if(respAttendance != null) {\n                alert('User '+userInfo.firstName+' '+userInfo.lastName+' '+\n                    'was registered already at '+ new Date(respAttendance).toLocaleString());\n            }\n        }\n\n        /**\n         * LOADS ALL MODULES FO THE FACEAPI\n         */\n        Promise.all([\n            faceapi.nets.faceRecognitionNet.loadFromUri('/models'),\n            faceapi.nets.faceLandmark68Net.loadFromUri('/models'),\n            faceapi.nets.ssdMobilenetv1.loadFromUri('/models'),\n            faceapi.nets.ageGenderNet.loadFromUri('/models'),\n\n            faceapi.nets.tinyFaceDetector.loadFromUri('/models'),\n            faceapi.nets.faceLandmark68TinyNet.loadFromUri('/models'),\n        ])\n\n        return (\n            <div id={'MainControl'}>\n                <Camera\n                    onTakePhoto = { (dataUri) => { handleTakePhoto(dataUri); } }\n                />\n                <div style={{marginLeft:\"50%\"}}>\n                    <div>\n                        <p>User ID</p>\n                        <input accept={'text'} id={'userId'} />\n                    </div>\n                    <p id={'ResultText'}>RESULT:</p>\n                </div>\n            </div>\n        );\n    }\n}\nexport default withFirebase(Face_Recognition);","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport Face_Recognition from \"../FaceRecognition\";\nimport CustomUploadButton from 'react-firebase-file-uploader/lib/CustomUploadButton';\n\nclass Recognizer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            facerecogition: ''\n        }\n\n    }\n\n    async getAccess() {\n        const organization = document.getElementById('organization').value;\n        const event = document.getElementById('event').value;\n        const eventPasscode = document.getElementById('passcode').value;\n\n        this.props.firebase.getAllUsersDescriptions('marcoINC');\n\n        if(organization.length == 0 || event.length == 0 || eventPasscode.length == 0) {\n            alert('Please fill out all the fields.')\n            return;\n        }\n        if(await this.props.firebase.checkIfEventExist(organization,event)) {\n            if(await this.props.firebase.loginIntoEvent(organization,event,eventPasscode)) {\n                this.setState({\n                    facerecogition: <Face_Recognition children={{'organization': organization, 'event': event}}/>\n                });\n                document.getElementById('Controls').hidden = true;\n\n            }\n            else {\n              alert('Incorrect event id or passcode')\n                return;\n            }\n        }\n        else {\n            alert('Unable to locate event');\n            return;\n        }\n\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>RECOGNIZER</h1>\n                <div id={'Controls'}>\n                    <p>Company</p>\n                    <input id={'organization'}/>\n                    <p>Event ID</p>\n                    <input id={'event'}/>\n                    <p>Event Passcode</p>\n                    <input id={'passcode'}/>\n                    <button onClick={()=>this.getAccess()}>Access the Event</button>\n                </div>\n                <div id={'FaceRecognition'}>\n                    { this.state.facerecogition }\n                </div>\n            </div>\n        );\n    }\n}\nexport default withFirebase(Recognizer);","import React from \"react\";\nimport { withFirebase } from '../components/Firebase';\nimport { AuthUserContext, withAuthorization } from '../components/Session';\n\nimport { Container, Grid, Form, Button } from \"semantic-ui-react\";\n\nimport { genderOptions, levelOptions } from \"../util/options\";\n\nclass UserEditForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        userID: props.user.userID,\n        firstName: props.user.firstName,\n        lastName: props.user.lastName,\n        email: props.user.email,\n        gender: props.user.sex,\n        age: props.user.age,\n        level: props.user.level\n    };\n  }\n\n  onChange = async (event, { name, value }) => {\n    this.setState({\n      ...this.state.values,\n      [name]: value\n    });\n  };\n\n  onSubmit = async (event) => {\n    const {\n        userID,\n        firstName,\n        lastName,\n        email,\n        level,\n        gender,\n        age\n    } = this.state;\n\n    console.log(this.state);\n\n    const {organization, updateUsers, closeModal, firebase} = this.props;\n    console.log(organization);\n    const userAdded = await firebase.updateUser(organization,userID,firstName,lastName,email,level,gender,age);\n    if (!userAdded) {\n        alert(\"User could not be added\");\n        return;\n    }\n    updateUsers();\n    closeModal(\"Edit\");\n  }\n\n  render() {\n    const { firstName, lastName, email, gender, age, level } = this.state;\n    return (\n        <Grid>\n            <Grid.Row>\n                <Grid.Column>\n                    <Form\n                        noValidate\n                        onSubmit={this.onSubmit}\n                        size='large'\n                    >\n                        <Form.Group width='equal'>\n                            <Form.Input\n                                fluid\n                                label=\"First Name\"\n                                name=\"firstName\"\n                                type=\"text\"\n                                width={8}\n                                maxLength=\"25\"\n                                value={firstName}\n                                onChange={this.onChange}\n                            />\n                            <Form.Input\n                                fluid\n                                label=\"Last Name\"\n                                name=\"lastName\"\n                                type=\"text\"\n                                width={8}\n                                maxLength=\"25\"\n                                value={lastName}\n                                onChange={this.onChange}\n                            />\n                            <Form.Select\n                                fluid\n                                label=\"Level\"\n                                name=\"level\"\n                                width={3}\n                                value={level}\n                                options={levelOptions}\n                                onChange={this.onChange}\n                            />\n                        </Form.Group>\n                        <Form.Group widths='equal'>\n                            <Form.Input\n                                fluid\n                                label=\"Email\"\n                                name=\"email\"\n                                type=\"text\"\n                                width={8}\n                                maxLength='40'\n                                value={email}\n                                onChange={this.onChange}\n                            />\n                            <Form.Select\n                                fluid\n                                label=\"Gender\"\n                                name=\"gender\"\n                                width={2}\n                                value={gender}\n                                options={genderOptions}\n                                onChange={this.onChange}\n                            />\n                            <Form.Input\n                                fluid\n                                label=\"Age\"\n                                name=\"age\"\n                                type=\"text\"\n                                value={age}\n                                maxLength=\"2\"\n                                width={2}\n                                onChange={({param: event}, data) => {\n                                    //only allow numeric values to be inputted\n                                    var regex = (/^[\\d]*$/);\n                                    if (regex.test(data.value)) {\n                                        this.onChange(event, data)\n                                    }\n                                }}\n                            />\n                        </Form.Group>\n                            <Button\n                                content=\"Cancel\"\n                                size='large'\n                                color=\"red\"\n                                type='button'\n                                icon=\"cancel\"\n                                labelPosition=\"left\"\n                                floated=\"right\"\n                                onClick={()=>{\n                                    this.setState({});\n                                    this.props.closeModal(\"Edit\");\n                                }}\n                            />\n                            <Button\n                                type=\"submit\"\n                                content=\"Submit\"\n                                size='large'\n                                color=\"green\"\n                                icon=\"check\"\n                                labelPosition=\"left\"\n                                floated=\"left\"\n                            />            \n                    </Form>\n                </Grid.Column>\n            </Grid.Row>\n        </Grid>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\nexport default withAuthorization(condition)(withFirebase(UserEditForm));\n","import React, {Component} from 'react';\nimport { withAuthorization } from '../Session';\nimport { withFirebase } from '../Firebase';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\n\nimport NewUser from '../NewUser/index';\nimport UserEditForm from '../../UIComponents/UserEditForm';\n\nimport { \n    Table, \n    Grid, \n    Container,\n    Header, \n    Dimmer, \n    Divider, \n    Icon, \n    Loader, \n    Segment, \n    Modal,\n    Button} from 'semantic-ui-react';\n\nclass UserPanel extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            organization: '',\n            users: [],\n            // addUser: null,\n            deleteUser: null,\n            updateUsers: null,\n            viewCreateUserModal: false,\n            viewUserModal: false,\n            viewEditUserModal: false,\n            selectedUser: {}\n        }\n    }\n\n    async componentDidMount() {\n        const organization = await this.props.firebase.getOrganization();\n        const users = await this.props.firebase.getUsersPreview(organization);\n        const addUser = this.props.firebase.addUser;\n        const deleteUser = this.props.firebase.deleteUser;\n        const updateUsers  = async () => {\n            const users =  await this.props.firebase.getUsersPreview(this.state.organization);\n            this.setState({ users: users });\n        }\n        this.setState({\n            organization: organization,\n            users: users,\n            // addUser : addUser,\n            deleteUser: deleteUser,\n            updateUsers: updateUsers,\n            createUserModal: false\n        });\n    }\n\n    closeModal = (name) => {\n        switch(name){\n            case \"View\":\n                this.setState({viewUserModal: false});\n                break;\n            case \"Create\":\n                this.setState({viewCreateUserModal: false});\n                break;\n            case \"Edit\":\n                this.setState({viewEditUserModal: false});\n                break;\n        }\n    }\n\n    openModal = (name) => {\n        switch(name){\n            case \"View\":\n                this.setState({viewUserModal: true});\n                break;\n            case \"Create\":\n                this.setState({viewCreateUserModal: true});\n                break;\n            case \"Edit\":\n                this.setState({viewEditUserModal: true});\n                break;\n        }\n    }\n\n    render() {\n        const {organization, users, deleteUser, updateUsers,viewEditUserModal, viewCreateUserModal: createUserModal, viewUserModal, selectedUser: user} = this.state;\n\n        const userFormModal = (\n            <Modal\n                closeIcon\n                onClose={() => this.closeModal(\"Create\")}\n                open={createUserModal}\n                size='small'\n                closeOnEscape={true}\n                closeOnDimmerClick={false}\n            >\n                <Modal.Header as='h1' content='New User'/>\n                <Modal.Content content={<NewUser children={{'organization': organization}} closeModal={this.closeModal} userUpdate={updateUsers} />}/>\n            </Modal>\n        );\n\n        const userEditModal = (\n            <Modal\n                closeIcon\n                onClose={() => this.closeModal(\"Edit\")}\n                open={viewEditUserModal}\n                size='tiny'\n                closeOnEscape={true}\n                closeOnDimmerClick={false}                \n            >\n                <Modal.Header as='h1'>Edit User</Modal.Header>\n                <Modal.Content>\n                    <UserEditForm\n                        user={user} \n                        organization={organization} \n                        closeModal={this.closeModal}\n                        updateUsers={updateUsers} />\n                </Modal.Content>\n            </Modal>\n        );\n\n        const userModal = (\n            <Modal\n                open={viewUserModal}\n                onClose={() => this.closeModal(\"View\")}\n                size='tiny'\n                closeOnEscape={true}\n                closeOnDimmerClick={true}\n            >\n                <Modal.Header as='h1' content='User Profile' />\n                <Modal.Content>\n                    <Container>\n                        <Grid>\n                            <Grid.Row>\n                                <Grid.Column>\n                                    <Header textAlign='center' as='h1' icon>\n                                        <Icon name='user circle'/>\n                                        {user.firstName} {user.lastName}\n                                    </Header>\n                                    <Table\n                                        unstackable\n                                        celled\n                                        singleLine\n                                        striped\n                                        definition\n                                    >\n                                        <Table.Body>\n                                            <Table.Row>\n                                                <Table.Cell width={4}>User ID:</Table.Cell>\n                                                <Table.Cell>{user.userID}</Table.Cell>\n                                            </Table.Row>\n                                            <Table.Row>\n                                                <Table.Cell>Level:</Table.Cell>\n                                                <Table.Cell>{user.level}</Table.Cell>\n                                            </Table.Row>\n                                            <Table.Row>\n                                                <Table.Cell>Gender:</Table.Cell>\n                                                <Table.Cell>{user.sex}</Table.Cell>\n                                            </Table.Row>\n                                            <Table.Row>\n                                                <Table.Cell>Age:</Table.Cell>\n                                                <Table.Cell>{user.age}</Table.Cell>\n                                            </Table.Row>\n                                            <Table.Row>\n                                                <Table.Cell>Email:</Table.Cell>\n                                                <Table.Cell>{user.email}</Table.Cell>\n                                            </Table.Row>\n                                        </Table.Body>\n                                    </Table>\n                                </Grid.Column>\n                            </Grid.Row>\n                        </Grid>\n                    </Container>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Grid>\n                        <Grid.Row>\n                            <Grid.Column>\n                            <Button \n                                content='Close'\n                                color='grey'\n                                size='large'\n                                floated='left'\n                                onClick={()=>this.closeModal(\"View\")}\n                            />\n                            <Button \n                                icon='edit'\n                                labelPosition='left'\n                                content='Edit'\n                                size='large'\n                                floated='right'\n                                positive\n                                onClick={()=>{\n                                    this.openModal(\"Edit\");\n                                    this.closeModal(\"View\");\n                                }}\n                            />\n                            </Grid.Column>\n\n                        </Grid.Row>\n                    </Grid>\n\n                </Modal.Actions>\n            </Modal>\n        )\n        \n        \n        return (\n            <>\n                <Container>\n                    <Grid columns={1} >\n                        <Grid.Row>\n                            <Header as='h1'>User Panel</Header>\n                        </Grid.Row>\n                        <Grid.Row>\n                            <Grid.Column>\n                                <Button\n                                    content=\"Add User\"\n                                    icon=\"add\"\n                                    color=\"green\"\n                                    labelPosition=\"left\"\n                                    floated=\"right\"\n                                    onClick={()=>{\n                                        this.openModal(\"Create\");\n                                    }}\n                                />\n                            </Grid.Column>\n                        </Grid.Row>\n                    </Grid>\n                </Container>\n\n                <Divider horizontal>\n                <Header as=\"h2\">{organization} Users </Header>\n                </Divider>\n                    <Dimmer active={users ? false : true} inverted>\n                    <Loader/>\n                </Dimmer>\n                {users === undefined || users.length === 0 \n                ?(\n                    <Segment placeholder>\n                        <Header icon>\n                          <Icon name='inbox' size='large'/>\n                          <p>There are currently no users registered</p>\n                        </Header>\n                    </Segment>\n                    )\n                :(\n                    <Container>\n                    <Grid>\n                        <Grid.Row>\n                            <Grid.Column>\n                            <Table \n                                // size='large' \n                                // verticalAlign='middle' \n                                celled \n                                unstackable\n                                // sortable\n                                // singleLine\n                                // striped\n\n                            >\n                                <Table.Header>\n                                    <Table.Row >\n                                        <Table.HeaderCell>First Name </Table.HeaderCell>\n                                        <Table.HeaderCell>Last Name  </Table.HeaderCell>\n                                        <Table.HeaderCell>Level      </Table.HeaderCell>\n                                        <Table.HeaderCell>View      </Table.HeaderCell>\n                                        <Table.HeaderCell>Delete      </Table.HeaderCell>\n                                    </Table.Row>\n                                </Table.Header>\n                                <Table.Body>\n                                    {users.map((user, index) => (\n                                         <Table.Row key={index}>\n                                            <Table.Cell>{user.firstName}</Table.Cell>\n                                            <Table.Cell>{user.lastName}</Table.Cell>\n                                            <Table.Cell>{user.level}</Table.Cell>\n                                            <Table.Cell collapsing textAlign='center'>\n                                                <Button\n                                                    color='blue'\n                                                    icon = \"info\"\n                                                    onClick = { () => {\n                                                        console.log(user);\n                                                        this.setState({selectedUser: user});\n                                                        this.setState({viewUserModal: true});\n                                                    }}\n                                                />\n                                            </Table.Cell>\n                                            <Table.Cell collapsing textAlign='center' >\n                                                <Button\n                                                    color='red'\n                                                    negative\n                                                    icon = \"delete\"\n                                                    onClick={async () =>{\n                                                        deleteUser(organization, user.userID).then(()=>{\n                                                            updateUsers();\n                                                        })\n                                                    }}\n                                                />\n                                            </Table.Cell>\n                                        </Table.Row>\n                                    ))}\n                                </Table.Body>\n                             </Table>\n                             </Grid.Column>\n                        </Grid.Row>\n                    </Grid>\n                </Container>\n                    )\n                }\n                {userFormModal}\n                {userModal}\n                {userEditModal}\n            </>\n        )\n    }\n\n}\n\nconst condition = authUser => !!authUser;\nexport default withAuthorization(condition)(UserPanel);\n\n","\nimport React, { Component } from 'react';\nimport {\n    BrowserRouter as Router,\n    Route,Switch,\n} from 'react-router-dom';\nimport Navigation from '../Navigation';\nimport LandingPage from '../Landing';\nimport SignUpPage from '../SignUp';\nimport SignInPage from '../SignIn';\nimport PasswordForgetPage from '../PasswordForget';\nimport HomePage from '../Home';\nimport AccountPage from '../Account';\nimport AdminPage from '../Admin';\nimport { AuthUserContext } from '../Session';\nimport * as ROUTES from '../../constants/routes';\nimport { withFirebase } from '../Firebase';\nimport FaceRecognition from '../FaceRecognition';\nimport Recognizer from '../Recognizer';\nimport NewUser from \"../NewUser\";\nimport UserPanel from \"../UserPanel\";\n\nclass App extends Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n          authUser: null,\n      };\n  }\n  componentDidMount() {\n\n      this.props.firebase.auth.onAuthStateChanged(authUser => {\n              authUser\n                  ? this.setState({ authUser })\n                  : this.setState({ authUser: null });\n          },\n      );\n  }\n\n  componentWillUnmount() {\n      this.listener();\n  }\n\n  render() {\n      return (\n          <AuthUserContext.Provider value={this.state.authUser}>\n              <Router>\n                  <div>\n                      <Navigation authUser={this.state.authUser} />\n                      <Switch>\n                          <Route exact path={ROUTES.LANDING} component={LandingPage} />\n                          <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\n                          <Route path={ROUTES.SIGN_IN} component={SignInPage} />\n                          <Route path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage} />\n                          <Route path={ROUTES.HOME} component={HomePage} />\n                          <Route path={ROUTES.ACCOUNT} component={AccountPage} />\n                          <Route path={ROUTES.RECOGNIZER} component={Recognizer} />\n                          <Route path={ROUTES.NEWUSER} component={NewUser} />\n                          <Route path={ROUTES.USERPANEL} component={UserPanel} />\n                      </Switch>\n                  </div>\n              </Router>\n          </AuthUserContext.Provider>\n      );\n  }\n\n}\n\nexport default withFirebase(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'react-semantic-ui-datepickers/dist/react-semantic-ui-datepickers.css';\n\n\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './components/App';\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nReactDOM.render(\n    <FirebaseContext.Provider value={new Firebase()}>\n      <App />\n    </FirebaseContext.Provider>,\n    document.getElementById('root'),\n  );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["../node_modules/react-semantic-ui-datepickers/dist/locales sync /^/.*/.json$","serviceWorker.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/SignOut/index.js","constants/routes.js","components/Session/context.js","components/Session/withAuthorization.js","components/Navigation/index.js","components/Landing/index.js","components/SignUp/index.js","components/PasswordForget/index.js","UIComponents/loginForm.js","components/SignIn/index.js","util/options.js","util/validators.js","UIComponents/EditEventForm.js","UIComponents/ViewEvent.js","UIComponents/EventCard.js","UIComponents/CreateEventForm.js","UIComponents/EventPanel.js","components/Home/index.js","components/PasswordChange/index.js","components/Account/index.js","components/NewUser/CameraFaceDescriptor.js","components/NewUser/FileFaceDescriptor.js","components/NewUser/index.js","components/NewEvent/index.js","components/Admin/index.js","components/FaceRecognition/index.js","components/Recognizer/index.js","UIComponents/UserEditForm.js","components/UserPanel/index.js","components/App/index.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Boolean","window","location","hostname","match","FirebaseContext","React","createContext","withFirebase","Component","props","Consumer","firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","doDeleteUser","user","console","log","delete","then","catch","error","getElementsInPath","path","a","async","filter","data","ref","db","once","snapshot","forEach","s","includes","key","push","uid","value","val","childSnapshot","getAllUsersDescriptions","organization","tempElement","userDesciptors","i","length","getUserInformation","getDescriptors","element","userID","userInfo","descriptors","addUser","firstName","lastName","level","gender","age","checkIfUserExist","setUserDatabaseInformation","updateUser","set","userInformation","sex","markUserAttendance","eventID","timeStampIfRegistered","u","Date","now","deleteUser","remove","getUsersPreview","userResults","deleteUsersDescriptors","getDescriptorsAVG","avg","iAVG","j","tempDescriptors","d","Float32Array","from","insertDescriptor","descriptor","date","found","getUserAttendaceReport","addEvent","eventName","minimumLevel","allowedusers","notAllowedUsers","description","eventDate","passcode","checkIfEventExist","setEventDatabaseInformation","updateEvent","loginIntoEvent","login","active","getEventInformation","eventInformation","allowedUsers","deleteEvent","activateEvent","stopEvent","getEventsPreview","eventResult","name","getOrganization","admin","companyName","getOrganizationInformation","deleteOrganizationData","changeOrganizationPasscode","verifyOrganizationPasscode","users","app","initializeApp","this","database","storage","child","listAll","res","items","itemRef","getDownloadURL","imageBlob","storageRef","file","fileName","uploadTask","put","contentType","on","TaskEvent","STATE_CHANGED","progress","bytesTransferred","totalBytes","state","TaskState","PAUSED","RUNNING","downloadURL","onClick","HOME","AuthUserContext","withAuthorization","condition","WithAuthorization","listener","onAuthStateChanged","authUser","history","compose","withRouter","NavigationAuth","Menu","inverted","borderless","fluid","position","Item","as","Link","to","ROUTES","icon","Dropdown","text","item","floating","pointing","SignOut","NavigationNonAuth","Icon","size","Navigation","Landing","Responsive","minwidth","className","Container","Header","INITIAL_STATE","username","passwordOne","passwordTwo","SignUpFormBase","onSubmit","event","respose","alert","setState","preventDefault","onChange","target","isInvalid","color","textAlign","Form","Segment","stacked","Group","Input","label","type","iconPosition","placeholder","Button","disabled","message","SignUpLink","SignUpForm","SignUpPage","Grid","centered","Column","verticalAlign","width","PasswordForgetFormBase","fuid","PasswordForgetLink","PasswordForgetPage","style","maxWidth","PasswordForgetForm","LoginForm","errors","SignInFormBase","SignInForm","SignInPage","Message","genderOptions","levelOptions","onlyNumericValues","test","validEmail","EditEventForm","values","updateEvents","closeModal","Row","widths","maxLength","Field","content","param","tempData","toLocaleDateString","Select","options","TextArea","labelPosition","floated","ViewEvent","columns","Label","Divider","EventCard","openModal","Card","raised","Content","stackable","Meta","Description","extra","EventForm","useState","setCode","minimum_level","setValues","isValid","setIsValid","formValues","valid","selection","dateString","EventPanel","events","viewEditEventForm","setViewEditEventForm","viewEventModal","setViewEventModal","viewCreateEventForm","setViewCreateEventForm","selectedEvent","setSelectedEvent","activeEvents","inactiveEvents","createEventModal","Modal","onClose","open","closeOnEscape","closeOnDimmerClick","editEventModal","eventModal","Actions","positive","horizontal","Dimmer","Loader","itemsPerRow","index","HomePage","PasswordChangeForm","AccountPage","registeredUser","userName","organizationPasscode","organizationInfo","userFirstName","userLastName","deleteModal","passcodeModal","passwordModal","passcodeChanged","showDeleteModal","document","getElementById","circular","negative","deleteOrganization","trigger","changePasscodeModal","changePasscode","image","PasswordChange","CameraFaceDescriptor","handleTakePhoto","dataUri","children","loading","remainingPhotos","fetch","r","blob","faceapi","withFaceLandmarks","withFaceDescriptors","detection","updateUsers","undefined","Promise","all","faceRecognitionNet","loadFromUri","faceLandmark68Net","ssdMobilenetv1","container","hidden","header","list","detail","stretched","onTakePhoto","isSilentMode","constructorImages","Array","currentErrors","FileFaceDescriptor","count","images","handlePhoto","response","imgRaw","fb","sucessful","multiple","accept","files","primary","NewUser","viewConfirmationImageModal","viewImageModal","answer","recognizer","noValidate","onlyAlphaNumValues","userUpdate","NewEvent","passCode","eventUpdate","addEventClick","AdminPage","bind","UserList","EventList","Face_Recognition","stopLoading","hideFeedback","feedbackHide","showFeedback","result","feedbackColor","feedbackHeader","self","setInterval","stopLoadingFunction","loadUserDescriptor","descriptionSet","handleTakePhotoNoUserID","usersDescriptors","bestFaceAccuracy","bestAgeAccuracy","bestSexDetection","current","descriptorSet","faceMatcher","displaySize","height","resizedDetections","results","findBestMatch","withAgeAndGender","detectionsWithAgeAndGender","faceAccuracy","distance","ageAccuracy","Math","abs","sexDetection","eventInfo","evaluateResult","respAttendance","toLocaleString","ageGenderNet","tinyFaceDetector","faceLandmark68TinyNet","class","Recognizer","facerecogition","showModal","eventPasscode","getAccess","hideModal","UserEditForm","viewDescriptorModal","CameraComponent","FileComponent","descriptorModal","compact","Or","UserPanel","viewUserModal","viewCreateUserModal","viewEditUserModal","selectedUser","createUserModal","userFormModal","closeIcon","userEditModal","userModal","Table","unstackable","celled","singleLine","striped","definition","Body","Cell","HeaderCell","collapsing","App","Provider","exact","component","LandingPage","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yKAAA,IAAIA,EAAM,CACT,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAChB,eAAgB,KAIjB,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,K,8JCzBAY,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,4DCjBAC,EAAkBC,IAAMC,cAAc,MAE/BC,EAAe,SAAAC,GAAS,OAAI,SAAAC,GAAK,OAC1C,kBAACL,EAAgBM,SAAjB,MACG,SAAAC,GAAQ,OAAI,kBAACH,EAAD,iBAAeC,EAAf,CAAsBE,SAAUA,UAIpCP,I,iCCHTQ,G,4BAAS,CACXC,OAAQ,0CACRC,WAAY,gCACZC,YAAa,uCACbC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBCZJC,E,WDiBT,aAAe,IAAD,gCAQdC,iCAAmC,SAACC,EAAOC,GAAR,OAC/B,EAAKC,KAAKC,+BAA+BH,EAAOC,IATtC,KAWdG,6BAA+B,SAACJ,EAAOC,GAAR,OAC3B,EAAKC,KAAKG,2BAA2BL,EAAOC,IAZlC,KAcdK,UAAY,kBAAM,EAAKJ,KAAKK,WAdd,KAgBdC,gBAAkB,SAAAR,GAAK,OAAI,EAAKE,KAAKO,uBAAuBT,IAhB9C,KAkBdU,iBAAmB,SAAAT,GAAQ,OACvB,EAAKC,KAAKS,YAAYC,eAAeX,IAnB3B,KAqBdY,aAAe,WACX,IAAIC,EAAO,EAAKZ,KAAKS,YACrBI,QAAQC,IAAIF,GACZ,EAAKZ,KAAKK,UAEVO,EAAKG,SAASC,MAAK,WACfH,QAAQC,IAAI,oBACbG,OAAM,SAAUC,GACfL,QAAQC,IAAI,4BA7BN,KA0CdK,kBAAoB,SAAOC,GAAP,iCAAAC,EAAAC,OAAA,uDAAaC,EAAb,+BAAsB,KAClCC,EAAO,GACPC,EAAM,EAAKC,GAAGD,IAAIL,GAFN,WAAAC,EAAA,MAGKI,EAAIE,KAAK,UAHd,cAGZC,EAHY,OAKH,MAAVL,EACCK,EAASC,SAAQ,SAAAC,GACVP,EAAOQ,SAASD,EAAEE,MACjBR,EAAKS,KAAK,CACNC,IAAKJ,EAAEE,IACPG,MAAOL,EAAEM,WAMrBR,EAASC,SAAQ,SAAUQ,GACvBb,EAAKS,KAAK,CACNC,IAAKG,EAAcL,IACnBG,MAAOE,EAAcD,WAnBjB,kBAuBTZ,GAvBS,sCA1CN,KAyIdc,wBAA0B,SAAOC,GAAP,yBAAAlB,EAAAC,OAAA,uDAChBF,EAAO,iBAAmBmB,EAAe,UADzB,WAAAlB,EAAA,MAEI,EAAKF,kBAAkBC,IAF3B,OAEhBoB,EAFgB,OAGlBC,EAAiB,GACbC,EAAE,EAJY,YAITA,EAAIF,EAAYG,QAJP,wBAKZ/B,EAAO4B,EAAYE,GALP,KAON9B,EAAKsB,IAPC,YAAAb,EAAA,MAQE,EAAKuB,mBAAmBL,EAAc3B,EAAKsB,MAR7C,uCAAAb,EAAA,MASK,EAAKwB,eAAeN,EAAc3B,EAAKsB,MAT5C,oBAMZY,EANY,CAOdC,OAPc,KAQdC,SARc,KASdC,YATc,MAWlBR,EAAeR,KAAKa,GAXF,QAIeJ,IAJf,gDAafD,GAbe,uCAzIZ,KAyJdS,QAAU,SAAOX,EAAcQ,EAAQI,EAAWC,EAAUtD,EAAOuD,EAAOC,EAAQC,GAAxE,eAAAlC,EAAAC,OAAA,uDACAF,EAAO,iBAAmBmB,EAAe,UAAYQ,EAAQ,IAD7D,WAAA1B,EAAA,MAEI,EAAKmC,iBAAiBjB,EAAaQ,IAFvC,4DAGK,GAHL,yBAAA1B,EAAA,MAMI,EAAKoC,2BAA2BrC,EAAM+B,EAAWC,EAAUtD,EAAOuD,EAAOC,EAAQC,IANrF,iCAOK,GAPL,uCAzJI,KAoKdG,WAAa,SAAOnB,EAAcQ,EAAQI,EAAWC,EAAUtD,EAAOuD,EAAOC,EAAQC,GAAxE,eAAAlC,EAAAC,OAAA,uDACHF,EAAO,iBAAmBmB,EAAe,UAAYQ,EAAQ,IAD1D,WAAA1B,EAAA,MAEH,EAAKoC,2BAA2BrC,EAAM+B,EAAWC,EAAUtD,EAAOuD,EAAOC,EAAQC,IAF9E,iCAGF,GAHE,sCApKC,KA0KdE,2BAA6B,SAAOrC,EAAM+B,EAAWC,EAAUtD,EAAOuD,EAAOC,EAAQC,GAAxD,SAAAlC,EAAAC,OAAA,kEAAAD,EAAA,MACnB,EAAKK,GAAGD,IAAIL,EAAK,OAAOuC,IAAIJ,IADT,yBAAAlC,EAAA,MAEnB,EAAKK,GAAGD,IAAIL,EAAK,SAASuC,IAAI7D,IAFX,yBAAAuB,EAAA,MAGnB,EAAKK,GAAGD,IAAIL,EAAK,aAAauC,IAAIR,IAHf,yBAAA9B,EAAA,MAInB,EAAKK,GAAGD,IAAIL,EAAK,YAAYuC,IAAIP,IAJd,0BAAA/B,EAAA,MAKnB,EAAKK,GAAGD,IAAIL,EAAK,SAASuC,IAAIN,IALX,2BAAAhC,EAAA,MAMnB,EAAKK,GAAGD,IAAIL,EAAK,OAAOuC,IAAIL,IANT,uCA1Kf,KAmLdV,mBAAqB,SAAOL,EAAcQ,GAArB,qBAAA1B,EAAAC,OAAA,uDACXF,EAAO,iBAAmBmB,EAAe,UAAYQ,EAAS,IAChEa,EAAkB,CAClB,MAAQ,GACR,UAAY,GACZ,SAAW,GACX,IAAM,EACN,MAAQ,EACR,IAAM,IAEJrC,EAAS,CAAC,QAAQ,YAAY,WAAW,MAAM,QAAQ,OAV5C,WAAAF,EAAA,MAWS,EAAKF,kBAAkBC,EAAMG,IAXtC,UAYC,OADZiB,EAXW,SAY+B,GAAtBA,EAAYG,OAZrB,yCAY2C,MAZ3C,cAajBiB,EAAgBL,IAAMf,EAAY,GAAGL,MACrCyB,EAAgB9D,MAAQ0C,EAAY,GAAGL,MACvCyB,EAAgBT,UAAYX,EAAY,GAAGL,MAC3CyB,EAAgBR,SAAWZ,EAAY,GAAGL,MAC1CyB,EAAgBP,MAAQb,EAAY,GAAGL,MACvCyB,EAAgBC,IAAMrB,EAAY,GAAGL,MAlBpB,kBAoBVyB,GApBU,uCAnLP,KA0MdE,mBAAqB,SAAOvB,EAAcwB,EAAShB,GAA9B,uBAAA1B,EAAAC,OAAA,uDACXF,EAAO,iBAAmBmB,EAAe,WAAawB,EAAU,kBADrD,WAAA1C,EAAA,MAES,EAAKF,kBAAkBC,IAFhC,OAEXoB,EAFW,OAGbwB,EAAwB,KACpBtB,EAAI,EAJK,YAIFA,EAAIF,EAAYG,QAJd,qBAKTsB,EAAIzB,EAAYE,IACfR,MAAQa,EANA,wBAOTiB,EAAwBC,EAAE9B,MAPjB,6BAIsBO,IAJtB,0BAWW,MAAzBsB,EAXc,0CAYNA,GAZM,QAeb,EAAKtC,GAAGD,IAAIL,EAAK2B,GAAQY,IAAIO,KAAKC,OAfrB,uCA1MP,KA6NdC,WAAa,SAAO7B,EAAcQ,GAArB,eAAA1B,EAAAC,OAAA,gDACHF,EAAO,iBAAmBmB,EAAe,UAAYQ,EAAS,IACpE,EAAKrB,GAAGD,IAAIL,GAAMiD,SAFT,sCA7NC,KAkOdC,gBAAkB,SAAO/B,GAAP,uBAAAlB,EAAAC,OAAA,uDACViD,EAAc,GACZnD,EAAO,iBAAmBmB,EAAe,UAFjC,WAAAlB,EAAA,MAGY,EAAKF,kBAAkBC,IAHnC,OAKd,IAFMoB,EAHQ,OAKNE,EAAE,EAAGA,EAAIF,EAAYG,OAAQD,KAC7BkB,EAAkB,CAClB,UAAY,GACZ,SAAW,GACX,MAAQ,GACR,MAAQ,GACR,OAAS,GACT,IAAM,GACN,IAAM,KAEMT,UAAYX,EAAYE,GAAGP,MAAMgB,UACjDS,EAAgBR,SAAWZ,EAAYE,GAAGP,MAAMiB,SAChDQ,EAAgBP,MAAQb,EAAYE,GAAGP,MAAMkB,MAC7CO,EAAgB9D,MAAQ0C,EAAYE,GAAGP,MAAMrC,MAC7C8D,EAAgBb,OAASP,EAAYE,GAAGR,IACxC0B,EAAgBL,IAAMf,EAAYE,GAAGP,MAAMoB,IAC3CK,EAAgBC,IAAMrB,EAAYE,GAAGP,MAAM0B,IAC3CU,EAAYtC,KAAK2B,GAtBP,yBAwBPW,GAxBO,sCAlOJ,KA6PdC,uBAAyB,SAAOjC,EAAcQ,GAArB,eAAA1B,EAAAC,OAAA,gDACfF,EAAO,iBAAmBmB,EAAe,UAAYQ,EAAS,gBACpE,EAAKrB,GAAGD,IAAIL,GAAMiD,SAFG,sCA7PX,KAkQdI,kBAAoB,SAAOxB,GAAP,qBAAA5B,EAAAC,OAAA,gDAEhB,IADIoD,EAAM,GACFhC,EAAI,EAAGA,EAAIO,EAAY,GAAGN,OAAQD,IAAK,CAE3C,IADIiC,EAAO,EACHC,EAAI,EAAGA,EAAI3B,EAAYN,OAAQiC,IACnCD,GAAQ1B,EAAY2B,GAAGlC,GAE3BiC,GAAQ1B,EAAYN,OACpB+B,EAAIzC,KAAK0C,GARG,yBAUTD,GAVS,sCAlQN,KA+Qd7B,eAAiB,SAAON,EAAcQ,GAArB,uBAAA1B,EAAAC,OAAA,uDACPF,EAAO,iBAAmBmB,EAAe,UAAYQ,EAAS,gBADvD,WAAA1B,EAAA,MAEiB,EAAKF,kBAAkBC,IAFxC,OAIb,IAFMyD,EAFO,OAGT5B,EAAc,GACTP,EAAI,EAAGA,EAAImC,EAAgBlC,OAAQD,IACpCoC,EAAID,EAAgBnC,GACxBO,EAAYhB,KAAK6C,EAAE3C,MAAMA,OANhB,GASa,IAAvBc,EAAYN,OATF,yCAUFM,GAVE,mBAaE8B,aAbF,YAAA1D,EAAA,MAa0B,EAAKoD,kBAAkBxB,IAbjD,qCAae+B,KAbf,gBAab/B,EAba,yBAcNA,GAdM,uCA/QH,KAgSdgC,iBAAmB,SAAC1C,EAAcQ,EAAQmC,GACtC,EAAKxD,GAAGD,IAAI,iBAAmBc,EAAe,UAAYQ,EAAS,iBAAiBd,KAAK,CACrFkD,KAAMjB,KAAKC,MACXhC,MAAO+C,KAnSD,KAuSd1B,iBAAmB,SAAOjB,EAAcQ,GAArB,qBAAA1B,EAAAC,OAAA,uDACTF,EAAO,iBAAiBmB,EAAa,UAD5B,WAAAlB,EAAA,MAEW,EAAKF,kBAAkBC,IAFlC,OAEToB,EAFS,OAGX4C,GAAQ,EACJ1C,EAAI,EAJG,YAIAA,EAAIF,EAAYG,QAJhB,oBAKRH,EAAYE,GAAGR,MAAQa,EALf,wBAMPqC,GAAQ,EAND,6BAIwB1C,IAJxB,gDAUR0C,GAVQ,uCAvSL,KAoTdC,uBAAyB,SAAO9C,EAAcwB,GAArB,iBAAA1C,EAAAC,OAAA,uDACfF,EAAO,iBAAmBmB,EAAe,WAAawB,EAAU,kBADjD,WAAA1C,EAAA,MAEK,EAAKF,kBAAkBC,IAF5B,cAEfoB,EAFe,yBAGdA,GAHc,sCApTX,KA8Td8C,SAAW,SAAO/C,EAAcwB,EAASwB,EAAWC,EAAcC,EAAcC,EAAiBC,EAAaC,EAAWC,GAA9G,eAAAxE,EAAAC,OAAA,uDACDF,EAAO,iBAAmBmB,EAAe,WAAawB,EAAS,IAD9D,WAAA1C,EAAA,MAEG,EAAKyE,kBAAkBvD,EAAawB,IAFvC,4DAGI,GAHJ,yBAAA1C,EAAA,MAMG,EAAK0E,4BAA4B3E,EAAMmE,EAAWC,EAAcC,EAAcC,EAAiBC,EAAaC,EAAWC,IAN1H,iCAQI,GARJ,uCA9TG,KA0UdG,YAAc,SAAOzD,EAAcwB,EAASwB,EAAWC,EAAcC,EAAcC,EAAiBC,EAAaC,EAAWC,GAA9G,eAAAxE,EAAAC,OAAA,uDACJF,EAAO,iBAAmBmB,EAAe,WAAawB,EAAS,IAD3D,WAAA1C,EAAA,MAEJ,EAAK0E,4BAA4B3E,EAAMmE,EAAWC,EAAcC,EAAcC,EAAiBC,EAAaC,EAAWC,IAFnH,iCAGH,GAHG,sCA1UA,KAgVdE,4BAA8B,SAAO3E,EAAMmE,EAAWC,EAAcC,EAAcC,EAAiBC,EAAaC,EAAWC,GAA7F,SAAAxE,EAAAC,OAAA,kEAAAD,EAAA,MACpB,EAAKK,GAAGD,IAAIL,EAAK,QAAQuC,IAAI4B,IADT,yBAAAlE,EAAA,MAEpB,EAAKK,GAAGD,IAAIL,EAAK,gBAAgBuC,IAAI6B,IAFjB,yBAAAnE,EAAA,MAGpB,EAAKK,GAAGD,IAAIL,EAAK,gBAAgBuC,IAAI8B,IAHjB,yBAAApE,EAAA,MAIpB,EAAKK,GAAGD,IAAIL,EAAK,mBAAmBuC,IAAI+B,IAJpB,0BAAArE,EAAA,MAKpB,EAAKK,GAAGD,IAAIL,EAAK,eAAeuC,IAAIgC,IALhB,2BAAAtE,EAAA,MAMpB,EAAKK,GAAGD,IAAIL,EAAK,aAAauC,IAAIiC,IANd,2BAAAvE,EAAA,MAOpB,EAAKK,GAAGD,IAAIL,EAAK,YAAYuC,IAAIkC,IAPb,2BAAAxE,EAAA,MAQpB,EAAKK,GAAGD,IAAIL,EAAK,UAAUuC,KAAI,IARX,uCAhVhB,KA2VdsC,eAAiB,SAAO1D,EAAcwB,EAAS8B,GAA9B,qBAAAxE,EAAAC,OAAA,uDACPF,EAAO,iBAAiBmB,EAAa,WAD9B,WAAAlB,EAAA,MAEa,EAAKF,kBAAkBC,IAFpC,OAEPoB,EAFO,OAGT0D,GAAQ,EACJxD,EAAI,EAJC,YAIEA,EAAIF,EAAYG,QAJlB,oBAKNH,EAAYE,GAAGR,MAAQ6B,EALjB,wBAODmC,EADD1D,EAAYE,GAAGP,MAAM0D,WAAaA,IAA4C,IAAhCrD,EAAYE,GAAGP,MAAMgE,OANjE,6BAI0BzD,IAJ1B,gDAeNwD,GAfM,uCA3VH,KA6WdE,oBAAsB,SAAO7D,EAAcwB,GAArB,qBAAA1C,EAAAC,OAAA,uDACZF,EAAO,iBAAmBmB,EAAe,WAAawB,EAAU,IAClEsC,EAAmB,CACnB,aAAe,GACf,aAAe,GACf,gBAAkB,IAEhB9E,EAAS,CAAC,eAAe,eAAe,mBAP5B,WAAAF,EAAA,MAQQ,EAAKF,kBAAkBC,EAAMG,IARrC,cAQZiB,EARY,OASlB6D,EAAiBC,aAAe9D,EAAY,GAAGL,MAC/CkE,EAAiBb,aAAehD,EAAY,GAAGL,MAC/CkE,EAAiBX,gBAAkBlD,EAAY,GAAGL,MAXhC,kBAaXkE,GAbW,uCA7WR,KA6XdE,YAAc,SAAOhE,EAAcwB,GAArB,eAAA1C,EAAAC,OAAA,gDACJF,EAAO,iBAAmBmB,EAAe,WAAawB,EAAU,IACtE,EAAKrC,GAAGD,IAAIL,GAAMiD,SAFR,sCA7XA,KAkYdmC,cAAgB,SAAOjE,EAAcwB,GAArB,eAAA1C,EAAAC,OAAA,gDACNF,EAAO,iBAAmBmB,EAAe,WAAawB,EAAU,WACtE,EAAKrC,GAAGD,IAAIL,GAAMuC,KAAI,GAFV,sCAlYF,KAuYd8C,UAAY,SAAOlE,EAAcwB,GAArB,eAAA1C,EAAAC,OAAA,gDACFF,EAAO,iBAAmBmB,EAAe,WAAawB,EAAU,WACtE,EAAKrC,GAAGD,IAAIL,GAAMuC,KAAI,GAFd,sCAvYE,KA4Yd+C,iBAAmB,SAAOnE,GAAP,uBAAAlB,EAAAC,OAAA,uDACXqF,EAAc,GACZvF,EAAO,iBAAmBmB,EAAe,WAFhC,WAAAlB,EAAA,MAGW,EAAKF,kBAAkBC,IAHlC,OAKf,IAFMoB,EAHS,OAKPE,EAAE,EAAGA,EAAIF,EAAYG,OAAQD,KAC7B2D,EAAmB,CACnB,OAAS,GACT,UAAY,GACZ,aAAe,GACf,KAAO,GACP,QAAU,GACV,YAAc,KAEDF,OAAS3D,EAAYE,GAAGP,MAAMgE,OAC/CE,EAAiBT,UAAYpD,EAAYE,GAAGP,MAAMyD,UAClDS,EAAiBb,aAAehD,EAAYE,GAAGP,MAAMqD,aACrDa,EAAiBO,KAAOpE,EAAYE,GAAGP,MAAMyE,KAC7CP,EAAiBtC,QAAUvB,EAAYE,GAAGR,IAC1CmE,EAAiBV,YAAcnD,EAAYE,GAAGP,MAAMwD,YACpDU,EAAiBC,aAAe9D,EAAYE,GAAGP,MAAMmE,aACrDD,EAAiBX,gBAAkBlD,EAAYE,GAAGP,MAAMuD,gBACxDW,EAAiBR,SAAWrD,EAAYE,GAAGP,MAAM0D,SACjDc,EAAY1E,KAAKoE,GAvBN,yBAyBRM,GAzBQ,sCA5YL,KAwadb,kBAAoB,SAAOvD,EAAcwB,GAArB,qBAAA1C,EAAAC,OAAA,uDACVF,EAAO,iBAAiBmB,EAAa,WAD3B,WAAAlB,EAAA,MAEU,EAAKF,kBAAkBC,IAFjC,OAEVoB,EAFU,OAGZ4C,GAAQ,EACJ1C,EAAI,EAJI,YAIDA,EAAIF,EAAYG,QAJf,oBAKTH,EAAYE,GAAGR,MAAQ6B,EALd,wBAMRqB,GAAQ,EANA,6BAIuB1C,IAJvB,gDAUT0C,GAVS,uCAxaN,KAybdyB,gBAAkB,4BAAAxF,EAAAC,OAAA,uDACVyB,EAAS,EAAK/C,KAAKS,YAAYyB,IADrB,WAAAb,EAAA,MAEI,EAAKF,kBAAkB,SAAU4B,IAFrC,UAGF,OADR+D,EAFU,iDAIHA,EAAM,GAAG3E,MAAM4E,aAJZ,gCAOH,MAPG,sCAzbJ,KAocdC,2BAA6B,4BAAA3F,EAAAC,OAAA,uDACrByB,EAAS,EAAK/C,KAAKS,YAAYyB,IADV,WAAAb,EAAA,MAEP,EAAKF,kBAAkB,SAAU4B,IAF1B,UAGb,OADR+D,EAFqB,iDAIdA,EAAM,GAAG3E,OAJK,gCAOd,MAPc,sCApcf,KA+cd8E,uBAAyB,SAAO1E,GAAP,eAAAlB,EAAAC,OAAA,gDACfF,EAAO,iBAAmBmB,EAAe,IAC/C,EAAKb,GAAGD,IAAIL,GAAMiD,SAFG,sCA/cX,KAodd6C,2BAA6B,SAAO3E,EAAcsD,GAArB,SAAAxE,EAAAC,OAAA,kEAAAD,EAAA,MACnB,EAAKK,GAAGD,IAAI,iBAAiBc,EAAa,aAAaoB,IAAIkC,IADxC,sCApdf,KA6ddsB,2BAA6B,SAAO5E,EAAcsD,GAArB,iBAAAxE,EAAAC,OAAA,uDACnBF,EAAO,iBAAmBmB,EAAe,IADtB,WAAAlB,EAAA,MAEC,EAAKF,kBAAkBC,IAFxB,UAGP,OADZoB,EAFmB,SAGwB,IAAvBA,EAAYG,OAHb,yCAGoC,GAHpC,UAItBH,EAAY,GAAGL,OAAS0D,EAJF,0CAKd,GALc,kCAQb,GARa,uCA7df,KA8edjF,KAAO,SAAAsB,GAAG,OAAI,EAAKR,GAAGD,IAAR,gBAAqBS,KA9erB,KA+edkF,MAAQ,kBAAM,EAAK1F,GAAGD,IAAI,UA9etB4F,IAAIC,cAAcnI,GAClBoI,KAAKvH,KAAOqH,IAAIrH,OAChBuH,KAAK7F,GAAK2F,IAAIG,W,sDAmERjF,EAAcQ,GAEpB,IAAIvB,EAAO,GAaX,OAZc6F,IAAII,UAAUhG,MAAMiG,MAAM,UAAYnF,EAAe,IAAMQ,EAAS,KAG1E4E,UAAU3G,MAAK,SAAU4G,GAC7BA,EAAIC,MAAMhG,SAAQ,SAAUiG,GAExBtG,EAAKS,KAAK6F,EAAQC,wBAGvB9G,OAAM,SAAUC,GACfL,QAAQC,IAAI,+BAETU,I,kCAGCe,EAAcQ,EAAQiF,GAC9B,IAAIC,EAAaZ,IAAII,UAAUhG,MAE3ByG,EAAOF,EAKPG,EAAWjE,KAAKC,MAAQ,QACxBiE,EAAaH,EAAWP,MAAM,UAAYnF,EAAe,IAAMQ,EAAS,IAAMoF,GAAUE,IAAIH,EALjF,CACXI,YAAa,eAOjBF,EAAWG,GAAGlB,IAAII,QAAQe,UAAUC,eAChC,SAAU7G,GAEN,IAAI8G,EAAY9G,EAAS+G,iBAAmB/G,EAASgH,WAAc,IAEnE,OADA/H,QAAQC,IAAI,aAAe4H,EAAW,UAC9B9G,EAASiH,OACb,KAAKxB,IAAII,QAAQqB,UAAUC,OACvBlI,QAAQC,IAAI,oBACZ,MACJ,KAAKuG,IAAII,QAAQqB,UAAUE,QACvBnI,QAAQC,IAAI,yBAGrB,SAAUI,GAET,OAAQA,EAAMlD,MACV,IAAK,uBACD6C,QAAQC,IAAI,kCACZ,MACJ,IAAK,mBACDD,QAAQC,IAAI,8BACZ,MACJ,IAAK,kBACDD,QAAQC,IAAI,gCAGrB,WACCsH,EAAWxG,SAASH,IAAIsG,iBAAiB/G,MAAK,SAAUiI,GACpDpI,QAAQC,IAAI,oBAAqBmI,a,KE5IxCnK,KALO,SAAC,GAAD,IAAGI,EAAH,EAAGA,SAAH,OACpB,0BAAMgK,QAAShK,EAASkB,WAAxB,eCAW+I,EAAO,QCDLC,EADSxK,IAAMC,cAAc,M,QCgC7BwK,EA3BW,SAAAC,GAAS,OAAI,SAAAvK,GAAc,IAC7CwK,EAD4C,4LAE3B,IAAD,OAClBhC,KAAKiC,SAAWjC,KAAKvI,MAAME,SAASc,KAAKyJ,oBAAmB,SAAAC,GACrDJ,EAAUI,IACb,EAAK1K,MAAM2K,QAAQ1H,KFTN,gBEI6B,6CAU9CsF,KAAKiC,aAVyC,+BAYtC,IAAD,OACP,OACE,kBAAC,EAAgBvK,SAAjB,MACG,SAAAyK,GAAQ,OACPJ,EAAUI,GAAY,kBAAC3K,EAAc,EAAKC,OAAY,YAhBd,GAClBJ,IAAMG,WAqBtC,OAAO6K,YACLC,IACA/K,EAFK8K,CAGLL,K,0BCREO,EAAiB,SAAC,GAAD,IAAElJ,EAAF,EAAEA,KAAF,OACrB,kBAACmJ,EAAA,EAAD,CACAC,UAAQ,EACRC,YAAU,EACVC,OAAK,GAEH,kBAACH,EAAA,EAAKA,KAAN,CAAWI,SAAS,QAChB,kBAACJ,EAAA,EAAKK,KAAN,CAAWC,GAAIC,IAAMC,GAAIC,EAAaC,KAAK,UAE/C,kBAACV,EAAA,EAAKA,KAAN,CAAWI,SAAS,SAChB,kBAACO,EAAA,EAAD,CACEC,KAAM/J,EAAKd,MACX8K,MAAI,EACJC,UAAQ,EACRC,UAAQ,GAER,kBAACJ,EAAA,EAASX,KAAV,KACE,kBAACW,EAAA,EAASN,KAAV,CAAeC,GAAIC,IAAMC,GHpCd,YGoCX,WACA,kBAACG,EAAA,EAASN,KAAV,CAAeC,GAAIC,IAAMC,GAAIC,GAA7B,eACA,kBAACE,EAAA,EAASN,KAAV,CAAeC,GAAIC,IAAMC,GHlCZ,cGkCb,cACA,kBAACG,EAAA,EAASN,KAAV,KACE,kBAACW,EAAD,YAORC,EAAoB,kBACtB,kBAACjB,EAAA,EAAD,CACEC,UAAQ,EACRC,YAAU,EACVC,OAAK,GAEH,kBAACH,EAAA,EAAKA,KAAN,CAAWI,SAAS,QAChB,kBAACJ,EAAA,EAAKK,KAAN,CAAWC,GAAIC,IAAMC,GH1DV,KG2DX,kBAACU,EAAA,EAAD,CAAMrE,KAAK,OAAOsE,KAAK,UAG3B,kBAACnB,EAAA,EAAKA,KAAN,CAAWI,SAAS,SAChB,kBAACJ,EAAA,EAAKK,KAAN,CAAWC,GAAIC,IAAMC,GH7DV,WG8DT,kBAACU,EAAA,EAAD,CAAMrE,KAAK,OAAOsE,KAAK,YAMtBC,EAzDI,kBACjB,oCACE,kBAAC,EAAgBlM,SAAjB,MACG,SAAAyK,GAAQ,OACPA,EAAW,kBAAC,EAAD,CAAgB9I,KAAM8I,IAAe,kBAAC,EAAD,W,2BCoBzC0B,E,iLAzBX,OACI,6BACI,kBAACC,EAAA,EAAD,CAAYC,SAAU,KAClB,yBAAKC,UAAU,0BACX,yBAAKA,UAAU,gBACX,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQpB,GAAI,KAAKkB,UAAU,iBAA3B,kB,GARNxM,a,oDCShB2M,EAAgB,CAClB9E,KAAM,GACNxD,SAAU,GACV2D,YAAa,GACbjH,MAAO,GACP6L,SAAU,GACVC,YAAa,GACbC,YAAa,GACbhG,SAAU,GACV3E,MAAO,MAGL4K,E,YACF,WAAY9M,GAAQ,IAAD,8BACf,4CAAMA,KAIV+M,SAAW,SAACC,GAAW,IAAD,EAC8D,EAAKnD,MAA7EjC,EADU,EACVA,KAAMxD,EADI,EACJA,SAAU2D,EADN,EACMA,YAAajH,EADnB,EACmBA,MAAO6L,EAD1B,EAC0BA,SAAUC,EADpC,EACoCA,YAAa/F,EADjD,EACiDA,SAEnE,EAAK7G,MAAME,SACNiI,2BAA2BJ,EAAYlB,GACvC7E,MAAK,SAAAiL,IACa,GAAZA,EACCC,MAAM,qFAGN,EAAKlN,MAAME,SAASgI,2BAA2BH,EAAYlB,GACtD7E,MAAK,WACF,EAAKhC,MAAME,SACNW,iCAAiCC,EAAO8L,GACxC5K,MAAK,SAAA0I,GAEF,OAAO,EAAK1K,MAAME,SACb0B,KAAK8I,EAAS9I,KAAKsB,KACnByB,IAAI,CACDiD,OACAxD,WACA2D,cACAjH,QACA6L,gBAIX3K,MAAK,WACF,EAAKmL,SAAL,eAAmBT,IACnB,EAAK1M,MAAM2K,QAAQ1H,KAAKuI,MAE3BvJ,OAAM,SAAAC,GACH,EAAKiL,SAAS,CAAEjL,mBA+B5C8K,EAAMI,kBApES,EAsEnBC,SAAW,SAAAL,GACP,EAAKG,SAAL,eAAiBH,EAAMM,OAAO1F,KAAOoF,EAAMM,OAAOnK,SApElD,EAAK0G,MAAL,eAAkB6C,GAHH,E,sEA0ET,IAAD,EAWDnE,KAAKsB,MATLjC,EAFC,EAEDA,KACAxD,EAHC,EAGDA,SACA2D,EAJC,EAIDA,YACAjH,EALC,EAKDA,MACA6L,EANC,EAMDA,SACA9F,EAPC,EAODA,SACA+F,EARC,EAQDA,YACAC,EATC,EASDA,YACA3K,EAVC,EAUDA,MAGEqL,EACFX,IAAgBC,GACA,KAAhBD,GACU,KAAV9L,GACa,KAAb6L,GACa,KAAb9F,GACS,KAATe,GACa,KAAbxD,GACgB,KAAhB2D,EAEJ,OACI,oCACI,kBAAC0E,EAAA,EAAD,CAAQpB,GAAI,KAAKmC,MAAO,OAAOC,UAAY,UAA3C,WACA,kBAACC,EAAA,EAAD,CAAMxB,KAAO,QAAQa,SAAUxE,KAAKwE,UAChC,kBAACY,EAAA,EAAD,CAASzC,OAAK,EAAC0C,SAAO,GAClB,kBAACF,EAAA,EAAKG,MAAN,KACI,kBAACH,EAAA,EAAKI,MAAN,CACIlG,KAAO,OACPmG,MAAQ,aACR5K,MAASyE,EACToG,KAAO,OACPX,SAAY9E,KAAK8E,WAErB,kBAACK,EAAA,EAAKI,MAAN,CACIlG,KAAO,WACPmG,MAAQ,YACR5K,MAASiB,EACT4J,KAAO,OACPX,SAAY9E,KAAK8E,YAGzB,kBAACK,EAAA,EAAKI,MAAN,CACIlG,KAAO,cACPmG,MAAQ,UACRtC,KAAO,WACPtI,MAAS4E,EACTiG,KAAO,OACPX,SAAY9E,KAAK8E,SACjBY,aAAe,SAEnB,kBAACP,EAAA,EAAKI,MAAN,CACIlG,KAAO,WACPmG,MAAQ,WACRtC,KAAO,OACPtI,MAASwJ,EACTqB,KAAO,OACPX,SAAY9E,KAAK8E,SACjBY,aAAe,OACfC,YAAc,aAElB,kBAACR,EAAA,EAAKI,MAAN,CACIC,MAAQ,QACRnG,KAAO,QACP6D,KAAO,OACPtI,MAASrC,EACTkN,KAAO,OACPX,SAAY9E,KAAK8E,SACjBY,aAAe,OACfC,YAAc,mBAElB,kBAACR,EAAA,EAAKI,MAAN,CACIrC,KAAO,OACP7D,KAAO,WACPmG,MAAQ,WACR5K,MAAS0D,EACToH,aAAe,OACfZ,SAAY9E,KAAK8E,SACjBa,YAAe,WACfF,KAAO,aAEX,kBAACN,EAAA,EAAKI,MAAN,CACIrC,KAAO,OACP7D,KAAO,cACPmG,MAAQ,WACR5K,MAASyJ,EACTqB,aAAe,OACfZ,SAAY9E,KAAK8E,SACjBa,YAAe,WACfF,KAAO,aAEX,kBAACN,EAAA,EAAKI,MAAN,CACIrC,KAAO,OACP7D,KAAO,cACPzE,MAAS0J,EACTkB,MAAQ,mBACRE,aAAe,OACfZ,SAAY9E,KAAK8E,SACjBa,YAAe,mBACfF,KAAO,cAGf,kBAACG,EAAA,EAAD,CACIX,MAAQ,OACRtC,OAAK,EACLkD,SAAYb,EACZS,KAAO,SACP9B,KAAO,SALX,WAOChK,GAAS,2BAAIA,EAAMmM,e,GA1LXtO,aAgMvBuO,EAAa,kBACf,qDAC2B,kBAAC,IAAD,CAAM/C,GLhOd,WKgOQ,aAIzBgD,EAAa3D,YACfC,IACA/K,EAFe8K,CAGjBkC,GAEa0B,EAlOI,kBACf,kBAACC,EAAA,EAAD,CACAhB,UAAU,OACNiB,UAAQ,GAEd,kBAACD,EAAA,EAAKE,OAAN,CAAaC,cAAc,SAASC,MAAM,KACzC,kBAACN,EAAD,SCaG7B,EAAgB,CACpB5L,MAAO,GACPoB,MAAO,MAEH4M,E,YACJ,WAAY9O,GAAQ,IAAD,8BACjB,4CAAMA,KAGR+M,SAAW,SAAAC,GAAU,IACXlM,EAAU,EAAK+I,MAAf/I,MACR,EAAKd,MAAME,SACRoB,gBAAgBR,GAChBkB,MAAK,WACJ,EAAKmL,SAAL,eAAmBT,OAEpBzK,OAAM,SAAAC,GACL,EAAKiL,SAAS,CAAEjL,aAEpB8K,EAAMI,kBAdW,EAgBnBC,SAAW,SAAAL,GACT,EAAKG,SAAL,eAAiBH,EAAMM,OAAO1F,KAAOoF,EAAMM,OAAOnK,SAflD,EAAK0G,MAAL,eAAkB6C,GAFD,E,sEAmBT,IAAD,EACkBnE,KAAKsB,MAAtB/I,EADD,EACCA,MAAOoB,EADR,EACQA,MACTqL,EAAsB,KAAVzM,EAElB,OACF,oCACI,kBAAC2L,EAAA,EAAD,CAAQpB,GAAI,KAAKmC,MAAO,OAAOC,UAAY,UAA3C,kBACA,kBAACC,EAAA,EAAD,CAAMxB,KAAO,QAAQa,SAAUxE,KAAKwE,UAChC,kBAACY,EAAA,EAAD,CAASC,SAAO,GACd,kBAACF,EAAA,EAAKI,MAAN,CACFiB,MAAI,EACEnH,KAAO,QACPmG,MAAQ,QACdtC,KAAO,OACPtI,MAASrC,EACLkN,KAAO,OACPX,SAAY9E,KAAK8E,SACjBY,aAAe,OACfC,YAAc,oBAGhB,kBAACC,EAAA,EAAD,CACAX,MAAQ,OACZtC,OAAK,EACLkD,SAAYb,EACRS,KAAO,SACP9B,KAAO,SALP,qBAODhK,GAAS,2BAAIA,EAAMmM,e,GAhDOtO,aAsD/BiP,EAAqB,kBACzB,2BACE,kBAAC,IAAD,CAAMzD,GNlFqB,cMkF3B,sBAGW0D,EA5EY,kBACzB,kBAACR,EAAA,EAAD,CACEG,cAAgB,SAChBnB,UAAY,UAEZ,kBAACgB,EAAA,EAAKE,OAAN,CACAC,cAAgB,SAChBM,MAAO,CAAEC,SAAU,MAEjB,kBAACC,EAAD,SAoEAA,EAAqBtP,EAAagP,GClFzB,SAASO,GAAT,GAA8E,IAA1DhC,EAAyD,EAAzDA,SAAUN,EAA+C,EAA/CA,SAAUjM,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,SAAUuO,EAAoB,EAApBA,OAAQ/B,EAAY,EAAZA,UAC5E,OACI,oCACA,kBAACd,EAAA,EAAD,CAAQpB,GAAI,KAAKmC,MAAO,OAAOC,UAAY,UAA3C,WACA,kBAACC,EAAA,EAAD,CAAMxB,KAAO,QAAQa,SAAUA,GAC3B,kBAACY,EAAA,EAAD,CAASC,SAAO,GACZ,kBAACF,EAAA,EAAKI,MAAN,CACIiB,MAAI,EACJtD,KAAO,OACP7D,KAAO,QACPoG,KAAO,OACP7K,MAASrC,EACTuM,SAAYA,EACZY,aAAe,OACfC,YAAc,mBAElB,kBAACR,EAAA,EAAKI,MAAN,CACI5C,MAAQ,OACRO,KAAO,OACP7D,KAAO,WACPzE,MAASpC,EACTkN,aAAe,OACfZ,SAAYA,EACZa,YAAe,WACfF,KAAO,cAGf,kBAACG,EAAA,EAAD,CACIX,MAAQ,OACRtC,OAAK,EACLkD,SAAYb,EACZS,KAAO,SACP9B,KAAO,SALX,SAUCoD,GAAU,2BAAIA,EAAOjB,W,cCnB5B3B,GAAgB,CACpB5L,MAAO,GACPC,SAAU,GACVmB,MAAO,MAGHqN,G,YACJ,WAAYvP,GAAQ,IAAD,8BACjB,4CAAMA,KAGR+M,SAAW,SAAAC,GACTnL,QAAQC,IAAI,oBADM,MAEU,EAAK+H,MAAzB/I,EAFU,EAEVA,MAAOC,EAFG,EAEHA,SACf,EAAKf,MAAME,SACRgB,6BAA6BJ,EAAOC,GACpCiB,MAAK,WACJ,EAAKmL,SAAL,eAAmBT,KACnB,EAAK1M,MAAM2K,QAAQ1H,KAAKuI,GACxB3J,QAAQC,IAAI0J,MAEbvJ,OAAM,SAAAC,GACL,EAAKiL,SAAS,CAAEjL,aAEpB8K,EAAMI,kBAjBW,EAmBnBC,SAAW,SAAAL,GACT,EAAKG,SAAL,eAAiBH,EAAMM,OAAO1F,KAAOoF,EAAMM,OAAOnK,SAlBlD,EAAK0G,MAAL,eAAkB6C,IAFD,E,sEAuBT,IAAD,EAC4BnE,KAAKsB,MAAhC/I,EADD,EACCA,MAAOC,EADR,EACQA,SAAUmB,EADlB,EACkBA,MACnBqL,EAAyB,KAAbxM,GAA6B,KAAVD,EAErC,OACE,oCACA,kBAACuO,GAAD,CACEhC,SAAY9E,KAAK8E,SACjBN,SAAYxE,KAAKwE,SACjBjM,MAASA,EACTC,SAAYA,EACZuO,OAAUpN,EACVqL,UAAaA,S,GApCQxN,aAyIvByP,GAAa5E,YACjBC,IACA/K,EAFiB8K,CAGjB2E,IAEaE,GAnKI,kBACjB,kBAAChB,EAAA,EAAD,CACEhB,UAAY,SACZmB,cAAgB,UAEhB,kBAACH,EAAA,EAAKE,OAAN,CAAaO,MAAO,CAAEC,SAAU,MAC9B,kBAACK,GAAD,MACA,kBAACE,GAAA,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,U,2DCrBKC,GAAgB,CACzB,CACE3M,IAAK,KACLG,MAAO,OACPwI,KAAM,QAER,CACE3I,IAAK,KACLG,MAAO,SACPwI,KAAM,WAIGiE,GAAe,CAC1B,CACE5M,IAAK,IACL2I,KAAM,IACNxI,MAAO,KAET,CACEH,IAAK,IACL2I,KAAM,IACNxI,MAAO,KAET,CACEH,IAAK,IACL2I,KAAM,IACNxI,MAAO,KAET,CACEH,IAAK,IACL2I,KAAM,IACNxI,MAAO,KAET,CACEH,IAAK,IACL2I,KAAM,IACNxI,MAAO,M,UChCA0M,GAAoB,SAACrN,GAE9B,MADa,UACCsN,KAAKtN,IAGVuN,GAAa,SAACvN,GAEvB,MADa,6BACCsN,KAAKtN,ICFjBwN,G,YACL,WAAYhQ,GAAQ,IAAD,8BAClB,4CAAMA,KAcPqN,SAAW,SAAOL,EAAP,oBAAA3K,EAAAC,OAAA,gDAAgBsF,EAAhB,EAAgBA,KAAMzE,EAAtB,EAAsBA,MAChC,EAAKgK,SAAL,eACI,EAAKtD,MAAMoG,OADf,eAEErI,EAAOzE,KAHC,sCAfQ,EAsBnB4J,SAAW,SAAOC,GAAP,yCAAA3K,EAAAC,OAAA,yDAUN,EAAKuH,MARRnL,EAFS,EAETA,GACAkJ,EAHS,EAGTA,KACAvD,EAJS,EAITA,MACAiD,EALS,EAKTA,aACAZ,EANS,EAMTA,gBACAC,EAPS,EAOTA,YACAR,EARS,EAQTA,KACAnH,EATS,EASTA,KATS,EAYiD,EAAKgB,MAAzDuD,EAZG,EAYHA,aAAc2M,EAZX,EAYWA,aAAcC,EAZzB,EAYyBA,WAAYjQ,EAZrC,EAYqCA,SAZrC,WAAAmC,EAAA,MAaenC,EAAS8G,YACjCzD,EACA7E,EACAkJ,EACAvD,EACAiD,EACAZ,EACAC,EACAR,EACAnH,IAtBS,wCAyBTkO,MAAM,8BAzBG,0BA4BVgD,IACAC,IA7BU,uCApBV,EAAKtG,MAAQ,CACZnL,GAAI,EAAKsB,MAAMgN,MAAMjI,QACrB6C,KAAM,EAAK5H,MAAMgN,MAAMpF,KACvBvD,MAAO,EAAKrE,MAAMgN,MAAMxG,aACxBc,aAAc,EAAKtH,MAAMgN,MAAM1F,aAC/BZ,gBAAiB,EAAK1G,MAAMgN,MAAMtG,gBAClCC,YAAa,EAAK3G,MAAMgN,MAAMrG,YAC9BR,KAAM,EAAKnG,MAAMgN,MAAMpG,UACvB5H,KAAM,EAAKgB,MAAMgN,MAAMnG,UAExBhF,QAAQC,IAAI,EAAK9B,MAAMgN,OAZL,E,sEAuDT,IAAD,SASJzE,KAAKsB,MAPRjC,EAFO,EAEPA,KACAvD,EAHO,EAGPA,MACAiD,EAJO,EAIPA,aACAZ,EALO,EAKPA,gBACAC,EANO,EAMPA,YACAR,EAPO,EAOPA,KACAnH,EARO,EAQPA,KAGMmR,EAAc5H,KAAKvI,MAAnBmQ,WAEP,OACC,kBAAC1B,EAAA,EAAD,KACC,kBAACA,EAAA,EAAK2B,IAAN,KACC,kBAAC3B,EAAA,EAAKE,OAAN,KACE,kBAACjB,EAAA,EAAD,CACCX,SAAUxE,KAAKwE,SACfb,KAAK,SAEL,kBAACwB,EAAA,EAAKG,MAAN,CAAYwC,OAAO,SAClB,kBAAC3C,EAAA,EAAKI,MAAN,CACC5C,OAAK,EACL6C,MAAM,aACNnG,KAAK,OACLoG,KAAK,OACLa,MAAO,GACPyB,UAAU,KACVnN,MAAOyE,EACPyF,SAAU9E,KAAK8E,WAEhB,kBAACK,EAAA,EAAK6C,MAAN,CACCC,QACC,kBAAC,KAAD,CACC5I,KAAK,OACLmG,MAAM,aACNG,YAAa/H,EACbkH,SAAU,SAACoD,EAAOjO,GAKjB,IACC,IAAMkO,EAAW,CAChB9I,KAAMpF,EAAKoF,KACXzE,MAAOX,EAAKW,MAAMwN,sBAEnB,EAAKtD,SAASoD,EAAOC,GAEtB,MAAO5R,GACN,IAAM4R,EAAW,CAChB9I,KAAMpF,EAAKoF,KACXzE,MAAO,IAER,EAAKkK,SAASoD,EAAOC,UAQ3B,kBAAChD,EAAA,EAAKG,MAAN,KACC,kBAACH,EAAA,EAAKkD,OAAN,CACC1F,OAAK,EACL6C,MAAM,QACNnG,KAAK,QACLiH,MAAO,EACP1L,MAAOkB,EACPwM,QAASjB,GACTvC,SAAU9E,KAAK8E,WAEhB,kBAACK,EAAA,EAAKI,MAAN,CACC5C,OAAK,EACL6C,MAAM,gBACNnG,KAAK,eACLoG,KAAK,OACLa,MAAO,EACP1L,MAAOmE,EACP+F,SAAU9E,KAAK8E,WAEhB,kBAACK,EAAA,EAAKI,MAAN,CACC5C,OAAK,EACL6C,MAAM,oBACNnG,KAAK,kBACLoG,KAAK,OACLa,MAAO,EACP1L,MAAOuD,EACP2G,SAAU9E,KAAK8E,YAGjB,kBAACK,EAAA,EAAKG,MAAN,CAAYwC,OAAO,SAClB,kBAAC3C,EAAA,EAAKoD,SAAN,CACC/C,MAAM,cACNnG,KAAK,cACLoG,KAAK,OACLa,MAAO,EACP1L,MAAOwD,EACP0G,SAAU9E,KAAK8E,YAGjB,kBAACK,EAAA,EAAKG,MAAN,KACC,kBAACH,EAAA,EAAKI,MAAN,CACyBC,MAAM,aACNnG,KAAK,OACLoG,KAAK,OAC7B7K,MAAOnE,EACP6P,MAAO,EACiByB,UAAU,IACVjD,SAAU,SAACoD,EAAOjO,GAEVqN,GAAkBrN,EAAKW,QACvB,EAAKkK,SAASoD,EAAOjO,OAKvD,kBAAC2L,EAAA,EAAD,CACCqC,QAAQ,SACRtE,KAAK,QACLsB,MAAM,MACNQ,KAAK,SACLvC,KAAK,SACLsF,cAAc,OACdC,QAAQ,QACR9G,QAASiG,IAEV,kBAAChC,EAAA,EAAD,CACCH,KAAK,SACLwC,QAAQ,SACRtE,KAAK,QACLsB,MAAM,QACN/B,KAAK,QACLsF,cAAc,OACdC,QAAQ,iB,GA/LWpR,IAAMG,WA0MnBsK,MADG,SAAAK,GAAQ,QAAMA,IACjBL,CAA6BvK,EAAakQ,K,UChN1C,SAASiB,GAAT,GAA8B,IAATjE,EAAQ,EAARA,MAChCnL,QAAQC,IAAIkL,GAD4B,IAEtB7G,EAAkD6G,EAA7DpG,UAAiBD,EAA4CqG,EAA5CrG,YAAaiB,EAA+BoF,EAA/BpF,KAAMf,EAAyBmG,EAAzBnG,SAAmBnI,EAAMsO,EAAfjI,QAErD,OACI,oCACA,kBAACyH,EAAA,EAAD,CAAWiB,UAAU,SACjB,kBAACgB,EAAA,EAAD,KACI,kBAACA,EAAA,EAAK2B,IAAN,CAAUc,QAAS,GACf,kBAACzC,EAAA,EAAKE,OAAN,CAAaE,MAAO,EAAGpB,UAAU,OAAOuD,QAAQ,QAC5C,kBAACvE,EAAA,EAAD,CAAQpB,GAAG,KAAKmF,QAAS5I,KAE7B,kBAAC6G,EAAA,EAAKE,OAAN,CAAaE,MAAO,GAAImC,QAAQ,QAAQvD,UAAU,SAC9C,kBAAC0D,GAAA,EAAD,CAAO1F,KAAK,UAAU+B,MAAM,OAAOtB,KAAK,QAAQsE,QAAS3J,IACzD,kBAACsK,GAAA,EAAD,CAAO1F,KAAK,WAAW+B,MAAM,OAAOtB,KAAK,QAAQsE,QAASrK,OAItE,kBAACiL,GAAA,EAAD,OAMJ,kBAAC5E,EAAA,EAAD,KACI,0CACA,2BAAI7F,IAER,kBAAC6F,EAAA,EAAD,KACI,kBAACiC,EAAA,EAAD,KACI,kBAACA,EAAA,EAAK2B,IAAN,KACI,kBAAC3B,EAAA,EAAKE,OAAN,CAAaqC,QAAQ,QAAQvD,UAAU,SACnC,kBAAC0D,GAAA,EAAD,CAAO1F,KAAK,WAAY+B,MAAM,OAAOtB,KAAK,QAAQsE,QAAS9R,SC9BpE,SAAS2S,GAAT,GAA4G,IAAvFrE,EAAsF,EAAtFA,MAAOzJ,EAA+E,EAA/EA,aAAciE,EAAiE,EAAjEA,cAAe0I,EAAkD,EAAlDA,aAAczI,EAAoC,EAApCA,UAAWF,EAAyB,EAAzBA,YAAa+J,EAAY,EAAZA,UAC1GzP,QAAQC,IAAI,iBAER,2BACI,kBAACmK,EAAA,EAAD,CAAMrE,KAAK,UAmEnB,OACI,oCACI,kBAAC2J,GAAA,EAAD,CAAMrG,OAAK,EAACsG,QAAM,GACd,kBAACD,GAAA,EAAKE,QAAN,KACA,kBAACtD,EAAA,EAAD,CACIuD,UAAU,OACVlE,MAAQR,EAAM7F,OAAS,MAAQ,OAC/BsE,KAAOuB,EAAM7F,OAAS,OAAS,OAC/B+C,QAAS,WACL8C,EAAM7F,OACCM,EAAUlE,EAAayJ,EAAMjI,SAC7ByC,EAAcjE,EAAcyJ,EAAMjI,SACzCmL,KAEJhE,KAAK,SACL8E,QAAQ,UAER,kBAACO,GAAA,EAAK9E,OAAN,KAAcO,EAAMpF,MACpB,kBAAC2J,GAAA,EAAKI,KAAN,mBAAuB3E,EAAMpG,UAA7B,KACA,kBAAC2K,GAAA,EAAKK,YAAN,SAAoB5E,EAAMrG,YAA1B,MAQJ,kBAAC4K,GAAA,EAAKE,QAAN,CACII,OAAK,EACLpE,UAAU,UAEV,yBAAKlB,UAAU,kBACb,kBAAC4B,EAAA,EAAD,CACEX,MAAM,OACNgD,QAAQ,OACR/E,KAAK,MACLsF,cAAc,OACd7G,QAASoH,IAEX,kBAACnD,EAAA,EAAD,CACEX,MAAM,MACNgD,QAAQ,SACR/E,KAAK,QACLsF,cAAc,OACd7G,QAAS,WACL3C,EAAYhE,EAAayJ,EAAMjI,SAC/BmL,WCpHb,SAAS4B,GAAT,GAAwE,IAApDvO,EAAmD,EAAnDA,aAAc+C,EAAqC,EAArCA,SAAU4J,EAA2B,EAA3BA,aAAcC,EAAa,EAAbA,WAAa,EAC1D4B,mBAAS,IADiD,oBAC3E/S,EAD2E,KACrEgT,EADqE,OAGtDD,mBAAS,CACjCrT,GAAI,GACJkJ,KAAM,GACN5I,KAAM,GACNmI,QAAQ,EACR8K,cAAe,GACf3K,aAAc,GACdZ,gBAAiB,GACjBC,YAAa,GACbR,KAAM,KAZwE,oBAG3E8J,EAH2E,KAGnEiC,EAHmE,OAepDH,oBAAS,GAf2C,oBAe3EI,EAf2E,KAelEC,EAfkE,KA6C9EC,EAAapC,EAEbqC,EAAQH,EAER9E,EAAW,SAACzF,EAAMzE,GAClBkP,EAAWzK,GAAQzE,EACnB+O,EAAUG,GACVC,EAAwB,KAAhBrC,EAAOrI,MACS,KAAhBqI,EAAOjR,MACkB,KAAzBiR,EAAOgC,eACgB,KAAvBhC,EAAOtJ,aACS,KAAhBsJ,EAAO9J,KACfiM,EAAWE,IAwBf,OACI,kBAAC7D,EAAA,EAAD,KACI,kBAACA,EAAA,EAAK2B,IAAN,KACI,kBAAC3B,EAAA,EAAKE,OAAN,KACI,kBAACjB,EAAA,EAAD,CAAMX,SAzBP,oBAAA1K,EAAAC,OAAA,kEAAAD,EAAA,MACciE,EACrB/C,EACA0M,EAAOvR,GACPuR,EAAOrI,KACPqI,EAAOgC,cACPhC,EAAO3I,aACP2I,EAAOvJ,gBACPuJ,EAAOtJ,YACPsJ,EAAO9J,KACP8J,EAAOjR,OAVA,eAgBPmR,EAAW,UACXD,KAHAhD,MAAM,qEAdC,uCA0BK,kBAACQ,EAAA,EAAKG,MAAN,CAAYwC,OAAO,SACf,kBAAC3C,EAAA,EAAKI,MAAN,CACIC,MAAM,aACNnG,KAAK,OACLoG,KAAK,OACLa,MAAO,EACPyB,UAAU,KACVjD,SAAU,SAACoD,EAAOjO,GACd6K,EAAS7K,EAAKoF,KAAMpF,EAAKW,UAGjC,kBAACuK,EAAA,EAAKI,MAAN,CACIC,MAAM,aACNnG,KAAK,OACLoG,KAAK,OACLa,MAAO,EACP1L,MAAOnE,EACPsR,UAAU,IACVjD,SAAU,SAACoD,EAAOjO,GAEVqN,GAAkBrN,EAAKW,SACvB6O,EAAQxP,EAAKW,OACbkK,EAAS7K,EAAKoF,KAAMpF,EAAKW,WAIrC,kBAACuK,EAAA,EAAKI,MAAN,CACIC,MAAM,WACNnG,KAAK,KACLoG,KAAK,OACLa,MAAO,EAEPyB,UAAU,KACVjD,SAAU,SAACoD,EAAOjO,GACd6K,EAAS7K,EAAKoF,KAAMpF,EAAKW,WAIrC,kBAACuK,EAAA,EAAKG,MAAN,CAAYwC,OAAO,SACf,kBAAC3C,EAAA,EAAKoD,SAAN,CACI/C,MAAM,cACNnG,KAAK,cACLoG,KAAK,OACLa,MAAO,EAEPxB,SAAU,SAACoD,EAAOjO,GACd6K,EAAS7K,EAAKoF,KAAMpF,EAAKW,WAIrC,kBAACuK,EAAA,EAAKG,MAAN,CAAYwC,OAAO,SACf,kBAAC3C,EAAA,EAAKhC,SAAN,CACIqC,MAAQ,gBACRnG,KAAO,gBACPsG,YAAc,QACdhD,OAAK,EACLqH,WAAS,EAET1B,QA/HZ,CACZ,CACI7N,IAAK,IACL2I,KAAK,IACLxI,MAAM,KAEV,CACIH,IAAK,IACL2I,KAAK,IACLxI,MAAM,KAEV,CACIH,IAAK,IACL2I,KAAK,IACLxI,MAAM,KAEV,CACIH,IAAK,IACL2I,KAAK,IACLxI,MAAM,KAEV,CACIH,IAAK,IACL2I,KAAK,IACLxI,MAAM,MAwGckK,SAAU,SAACoD,EAAOjO,GAChB6K,EAAS7K,EAAKoF,KAAMpF,EAAKW,UAG/B,kBAACuK,EAAA,EAAK6C,MAAN,CACIC,QACI,kBAAC,KAAD,CACI5I,KAAK,OACLmG,MAAM,aACNV,SAAU,SAACoD,EAAOjO,GAKd,IACI,IAAMgQ,EAAahQ,EAAKW,MAAMwN,qBAC9BtD,EAAS7K,EAAKoF,KAAM4K,GAExB,MAAO1T,GACHuO,EAAS7K,EAAKoF,KAAM,WAQ5C,kBAAC8F,EAAA,EAAKG,MAAN,CAAYwC,OAAO,SACf,kBAAC3C,EAAA,EAAKI,MAAN,CACIC,MAAM,gBACNnG,KAAK,eACLoG,KAAK,OAELX,SAAU,SAACoD,EAAOjO,GACd6K,EAAS7K,EAAKoF,KAAMpF,EAAKW,UAGjC,kBAACuK,EAAA,EAAKI,MAAN,CACIC,MAAM,oBACNnG,KAAK,kBACLoG,KAAK,OAELX,SAAU,SAACoD,EAAOjO,GACd6K,EAAS7K,EAAKoF,KAAMpF,EAAKW,WAIrC,kBAACgL,EAAA,EAAD,CACIqC,QAAQ,SACRtE,KAAK,QACL8B,KAAK,SACLR,MAAM,MACN/B,KAAK,SACLsF,cAAc,OACdC,QAAQ,QACR9G,QAAW,WACPiG,EAAW,aAGnB,kBAAChC,EAAA,EAAD,CACIH,KAAK,SACLI,SAAU+D,EACV3B,QAAQ,SACRtE,KAAK,QACLsB,MAAM,QACN/B,KAAK,QACLsF,cAAc,OACdC,QAAQ,aCvMrB,SAASyB,GAAT,GAA4G,IAAvFlP,EAAsF,EAAtFA,aAAcmP,EAAwE,EAAxEA,OAAQpM,EAAgE,EAAhEA,SAAU4J,EAAsD,EAAtDA,aAAc1I,EAAwC,EAAxCA,cAAeC,EAAyB,EAAzBA,UAAWF,EAAc,EAAdA,YAAc,EACpEwK,oBAAS,GAD2D,oBAC/GY,EAD+G,KAC5FC,EAD4F,OAE1Eb,oBAAS,GAFiE,oBAE/Gc,EAF+G,KAE/FC,EAF+F,OAGhEf,oBAAS,GAHuD,oBAG/GgB,EAH+G,KAG1FC,EAH0F,OAI5EjB,mBAAS,IAJmE,oBAI/GkB,EAJ+G,KAIhGC,EAJgG,KAMhHC,EAAe,GACfC,EAAiB,GAEpBV,GACCA,EAAO7P,SAAQ,SAAAmK,GACPA,EAAM7F,OACNgM,EAAalQ,KAAK+J,GAElBoG,EAAenQ,KAAK+J,MAIhC,IAAMmD,EAAa,SAACvI,GAChB,OAAOA,GACH,IAAK,OACDkL,GAAkB,GAClB,MACJ,IAAK,OACDF,GAAqB,GACrB,MACJ,IAAK,SACDI,GAAuB,KAK7B1B,EAAY,SAAC1J,EAAMpF,GACrB,OAAOoF,GACH,IAAK,OACDsL,EAAiB1Q,GACjBsQ,GAAkB,GAClB,MACJ,IAAK,OACDI,EAAiB1Q,GACjBoQ,GAAqB,GACrB,MACJ,IAAK,SACDI,GAAuB,KAM7BK,EACF,kBAACC,GAAA,EAAD,CACIC,QAAS,WAAOpD,EAAW,WAC3BqD,KAAMT,EACN7G,KAAK,OACLuH,eAAe,EACfC,oBAAoB,GAEpB,kBAACJ,GAAA,EAAM7G,OAAP,CAAcpB,GAAG,MAAjB,aACA,kBAACiI,GAAA,EAAM7B,QAAP,KACI,kBAAC,GAAD,CACIlO,aAAcA,EACd+C,SAAUA,EACV4J,aAAcA,EACdC,WAAc,WACVA,EAAW,eAOzBwD,EACF,kBAACL,GAAA,EAAD,CACIC,QAAS,WAAOpD,EAAW,SAC3BqD,KAAMb,EACNzG,KAAK,OACLuH,eAAe,EACfC,oBAAoB,GAEpB,kBAACJ,GAAA,EAAM7G,OAAP,CAAcpB,GAAG,MAAjB,cACA,kBAACiI,GAAA,EAAM7B,QAAP,KACI,kBAAC,GAAD,CACIzE,MAAOiG,EACP1P,aAAcA,EACd2M,aAAcA,EACdC,WAAc,WACVA,EAAW,aAMzByD,EACF,kBAACN,GAAA,EAAD,CACIE,KAAMX,EACNU,QAAS,kBAAKpD,EAAW,SACzBjE,KAAK,OACLuH,eAAe,EACfC,oBAAoB,GAEpB,kBAACJ,GAAA,EAAM7G,OAAP,CAAcpB,GAAG,KAAKmF,QAAQ,sBAC9B,kBAAC8C,GAAA,EAAM7B,QAAP,KACI,kBAACR,GAAD,CAAWjE,MAAOiG,KAEtB,kBAACK,GAAA,EAAMO,QAAP,KACI,kBAACpF,EAAA,EAAD,KACI,kBAACA,EAAA,EAAK2B,IAAN,KACI,kBAAC3B,EAAA,EAAKE,OAAN,KACI,kBAACR,EAAA,EAAD,CACIqC,QAAQ,QACRhD,MAAM,OACNtB,KAAK,QACL8E,QAAQ,OACR9G,QAAS,kBAAIiG,EAAW,WAE5B,kBAAChC,EAAA,EAAD,CACI1C,KAAK,OACLsF,cAAc,OACdP,QAAQ,OACRtE,KAAK,QACL8E,QAAQ,QACR8C,UAAQ,EACR5J,QAAS,WACLoH,EAAU,OAAQ2B,GAClB9C,EAAW,gBAU3C,OACI,oCACA,kBAAC3D,EAAA,EAAD,KACI,kBAACiC,EAAA,EAAD,KACI,kBAACA,EAAA,EAAK2B,IAAN,KACK,kBAAC3D,EAAA,EAAD,CAAQpB,GAAG,MAAX,gBAEL,kBAACoD,EAAA,EAAK2B,IAAN,KACI,kBAAC3B,EAAA,EAAKE,OAAN,KACI,kBAACR,EAAA,EAAD,CACIqC,QAAQ,YACRhD,MAAM,QACN/B,KAAK,MACLsF,cAAc,OACdC,QAAQ,QACR9G,QAAS,WACL8I,GAAuB,UAQ3C,kBAAC5B,GAAA,EAAD,CAAS2C,YAAU,GACf,kBAACtH,EAAA,EAAD,CAAQpB,GAAG,MAAX,kBAEJ,kBAACmB,EAAA,EAAD,KACI,kBAACiC,EAAA,EAAD,CAAMiD,WAAS,GACX,kBAACjD,EAAA,EAAK2B,IAAN,KACI,kBAAC3B,EAAA,EAAKE,OAAN,KACA,kBAACqF,GAAA,EAAD,CAAQhJ,UAAQ,EAAC7D,OAA0B,IAAlBuL,EAAO/O,QAC5B,kBAACsQ,GAAA,EAAD,CAAQzD,QAAQ,aAAatE,KAAK,UAEd,IAAxBiH,EAAaxP,OACb,kBAACgK,EAAA,EAAD,CAASO,aAAW,GAChB,kBAACzB,EAAA,EAAD,CAAQhB,MAAI,GACV,kBAACQ,EAAA,EAAD,CAAMrE,KAAK,WAAWsE,KAAK,UAC3B,qEAKN,kBAACqF,GAAA,EAAK1D,MAAN,CAAYa,UAAQ,EAACwF,YAAa,GAC7Bf,GACGA,EAAa5U,KAAI,SAACyO,EAAOmH,GAAR,OACb,kBAAC9C,GAAD,CACIrE,MAAOA,EACPhK,IAAKmR,EACL5Q,aAAcA,EACd2M,aAAcA,EACd1I,cAAiBA,EACjBC,UAAaA,EACbF,YAAeA,EACf+J,UAAW,kBAAIA,EAAU,OAAQtE,cAU7D,kBAACoE,GAAA,EAAD,CAAS2C,YAAU,GACf,kBAACtH,EAAA,EAAD,CAAQpB,GAAG,MAAX,oBAGJ,kBAACmB,EAAA,EAAD,KACI,kBAACiC,EAAA,EAAD,CAAMiD,WAAS,GACX,kBAACjD,EAAA,EAAK2B,IAAN,KACI,kBAAC3B,EAAA,EAAKE,OAAN,KACA,kBAACqF,GAAA,EAAD,CAAQ7M,OAA0B,IAAlBuL,EAAO/O,OAAcqH,UAAQ,GACzC,kBAACiJ,GAAA,EAAD,CAAQzD,QAAQ,aAAatE,KAAK,UAEX,IAA1BkH,EAAezP,OAChB,kBAACgK,EAAA,EAAD,CAASO,aAAW,GAChB,kBAACzB,EAAA,EAAD,CAAQhB,MAAI,GACV,kBAACQ,EAAA,EAAD,CAAMrE,KAAK,WAAWsE,KAAK,UAC3B,qEAIJ,kBAACqF,GAAA,EAAK1D,MAAN,CAAYa,UAAQ,EAACwF,YAAa,GAC/Bd,GACGA,EAAe7U,KAAI,SAACyO,EAAOmH,GAAR,OACf,kBAAC9C,GAAD,CACIrE,MAAOA,EACPhK,IAAKmR,EACL5Q,aAAcA,EACd2M,aAAcA,EACd1I,cAAiBA,EACjBD,YAAeA,EACf+J,UAAW,kBAAIA,EAAU,OAAQtE,cAY5DqG,EACAM,EACAC,G,IC7PPQ,G,YACF,WAAYpU,GAAQ,IAAD,8BACf,4CAAMA,KACD6J,MAAQ,CACTtG,aAAc,GACd+C,SAAU,KACVoM,OAAQ,GACRxC,aAAc,KACd1I,cAAe,KACfC,UAAW,KACXF,YAAa,MATF,E,sMAcYgB,KAAKvI,MAAME,SAAS2H,mB,cAAzCtE,E,0BACegF,KAAKvI,MAAME,SAASwH,iBAAiBnE,I,OAApDmP,E,OACApM,EAAWiC,KAAKvI,MAAME,SAASoG,SAC/BkB,EAAgBe,KAAKvI,MAAME,SAASsH,cACpCC,EAAYc,KAAKvI,MAAME,SAASuH,UAChCF,EAAcgB,KAAKvI,MAAME,SAASqH,YAClC2I,EAAgB,0BAAA7N,EAAAC,OAAA,kEAAAD,EAAA,MACI,EAAKrC,MAAME,SAASwH,iBAAiB,EAAKmC,MAAMtG,eADpD,OACZmP,EADY,OAElB,EAAKvF,SAAS,CAAEuF,OAAQA,IAFN,sCAItBnK,KAAK4E,SAAS,CACV5J,aAAcA,EACdmP,OAAQA,EACRpM,SAAWA,EACX4J,aAAcA,EACd1I,cAAeA,EACfC,UAAWA,EACXF,YAAaA,I,iFAIX,IAAD,EACyFgB,KAAKsB,MAA5FtG,EADF,EACEA,aAAcmP,EADhB,EACgBA,OAAQpM,EADxB,EACwBA,SAAU4J,EADlC,EACkCA,aAAc1I,EADhD,EACgDA,cAAeC,EAD/D,EAC+DA,UAAWF,EAD1E,EAC0EA,YAC/E,OACI,oCACI,kBAACkL,GAAD,CACIC,OAAQA,EACRnP,aAAcA,EACd+C,SAAUA,EACV4J,aAAeA,EACf1I,cAAeA,EACfC,UAAWA,EACXF,YAAeA,S,GA/CZxH,aAwDRsK,MADG,SAAAK,GAAQ,QAAMA,IACjBL,CAA6B+J,I,UC7DtC1H,GAAgB,CACpBE,YAAa,GACbC,YAAa,GACb3K,MAAO,MAGHmS,G,YACJ,WAAYrU,GAAQ,IAAD,8BACjB,4CAAMA,KAGR+M,SAAW,SAAAC,GAAU,IACXJ,EAAgB,EAAK/C,MAArB+C,YACR,EAAK5M,MAAME,SACRsB,iBAAiBoL,GACjB5K,MAAK,WACJ,EAAKmL,SAAL,eAAmBT,QAEpBzK,OAAM,SAAAC,GACL,EAAKiL,SAAS,CAAEjL,aAEpB8K,EAAMI,kBAdW,EAgBnBC,SAAW,SAAAL,GACT,EAAKG,SAAL,eAAiBH,EAAMM,OAAO1F,KAAOoF,EAAMM,OAAOnK,SAflD,EAAK0G,MAAL,eAAkB6C,IAFD,E,sEAmBT,IAAD,IACqCnE,KAAKsB,MAAzC+C,EADD,EACCA,YAAaC,EADd,EACcA,YAAa3K,EAD3B,EAC2BA,MAC5BqL,EACJX,IAAgBC,GAA+B,KAAhBD,EACjC,OACE,0BAAMG,SAAUxE,KAAKwE,UACnB,kBAACe,GAAA,GAAD,GAAOI,YAAY,YACZtG,KAAK,cACLzE,MAAOyJ,EACPS,SAAU9E,KAAK8E,SACfW,KAAK,YAJZ,4BAKmB,gBALnB,sBAMc,CAAC,MAAQ,SANvB,IAQA,6BACA,6BACA,kBAACF,GAAA,EAAD,CACElG,KAAK,cACLzE,MAAO0J,EACPQ,SAAU9E,KAAK8E,SACfW,KAAK,WACLE,YAAY,uBACZgB,MAAO,CAAC,MAAQ,UAEhB,6BACA,6BACF,kBAACf,EAAA,EAAD,CAAQ2F,UAAQ,EAAC1F,SAAUb,EAAWS,KAAK,SACnCkB,MAAO,CAAC,MAAQ,SADxB,qBAIChN,GACD,yBAAMqK,UAAU,uBACZ,yBAAKA,UAAU,UAAf,SAGA,2BAAIrK,EAAMmM,e,GAvDWtO,aA6DlBD,KAAauU,IC9DtBC,G,YACJ,WAAYtU,GAAQ,IAAD,8BACjB,4CAAMA,KACD6J,MAAQ,CACXtG,aAAc,GACdzC,MAAO,GACPyT,eAAgB,GAChBC,SAAU,GACVC,qBAAsB,IAPP,E,mLAYclM,KAAKvI,MAAME,SAAS8H,8B,OAA7C0M,E,OACNnM,KAAK4E,SAAS,CACZ5J,aAAcmR,EAAiB3M,YAC/BjH,MAAO4T,EAAiB5T,MACxB6T,cAAeD,EAAiB9M,KAChCgN,aAAcF,EAAiBtQ,SAC/BoQ,SAAUE,EAAiB/H,SAC3BkI,aAAa,EACbC,eAAe,EACfC,eAAe,EACfC,iBAAiB,I,uFAKL7R,GACdoF,KAAK4E,SAAS,CACZ0H,YAAa1R,M,2CAKfoF,KAAK0M,iBAAgB,GACrB1M,KAAKvI,MAAME,SAAS+H,uBAAuBM,KAAKsB,MAAMtG,cACtD2J,MAAM,a,uCAKN,IAAMrG,EAAWqO,SAASC,eAAe,gBAAgBhS,MAC3C,MAAX0D,GAAsC,GAAnBA,EAASlD,QAI/B4E,KAAKvI,MAAME,SAASgI,2BAA2BK,KAAKsB,MAAMtG,aAAcsD,GACxEqG,MAAM,qBAENgI,SAASC,eAAe,gBAAgBhS,MAAQ,IAN9C+J,MAAM,mC,4CAUR3E,KAAK4E,SAAS,M,+BAMN,IAAD,SAC0H5E,KAAKsB,MAA/HtG,EADA,EACAA,aAAczC,EADd,EACcA,MAAO6T,EADrB,EACqBA,cAAeC,EADpC,EACoCA,aAAcJ,EADlD,EACkDA,SAAUK,EAD5D,EAC4DA,YAA2CG,GADvG,EACyEF,cADzE,EACwFC,cADxF,EACuGC,iBAC9G,OACI,kBAAC,EAAgB/U,SAAjB,MACG,SAAAyK,GAAQ,OACL,oCACE,kBAAC0G,GAAA,EAAD,CAAS2C,YAAU,EAAC7H,KAAK,QACvB,gCAAM3I,EAAN,MAGF,6BACE,kBAACkJ,EAAA,EAAD,CAAQpB,GAAG,KAAKI,MAAI,EAACgC,UAAU,UAC7B,kBAACxB,EAAA,EAAD,CAAMrE,KAAK,QAAQwN,UAAQ,IAC3B,kBAAC3I,EAAA,EAAOgF,QAAR,KAAiB+C,GACjB,kBAAC/H,EAAA,EAAOgF,QAAR,KAAiB3Q,GACjB,kBAAC2L,EAAA,EAAOgF,QAAR,KAAiBmD,EAAe,KAAOD,KAG3C,6BAEA,kBAACnI,EAAA,EAAD,KACE,kBAACiC,EAAA,EAAD,CAAMiD,WAAS,GACb,kBAACjD,EAAA,EAAK2B,IAAN,KACE,kBAAC3B,EAAA,EAAKE,OAAN,KACE,kBAAC4C,GAAA,EAAK1D,MAAN,CAAYa,UAAQ,EAACwF,YAAa,GAChC,kBAAC3C,GAAA,EAAK1D,MAAN,KAEE,kBAAC0D,GAAA,EAAD,KACE,kBAACA,GAAA,EAAKE,QAAN,KACE,kBAACF,GAAA,EAAK9E,OAAN,oBAGA,6BACA,kBAAC8E,GAAA,EAAKK,YAAN,4DAIF,kBAAC0B,GAAA,EAAD,CAAOpH,KAAM,QAASsH,KAAMqB,GAC1B,kBAACvB,GAAA,EAAM7G,OAAP,iCACA,kBAAC6G,GAAA,EAAM7B,QAAP,KACE,0EAA+C,gCAASlO,GAAxD,0DAGF,kBAAC+P,GAAA,EAAMO,QAAP,KACE,kBAAC1F,EAAA,EAAD,CAAQkH,UAAQ,EAACnL,QAAS,kBAAM,EAAK+K,iBAAgB,KAArD,MACA,kBAAC9G,EAAA,EAAD,CACIjE,QAAS,kBAAM,EAAKoL,sBACpBxB,UAAQ,EACRrI,KAAK,YACLsF,cAAc,QACdP,QAAQ,UAIhB,kBAACrC,EAAA,EAAD,CAAQkH,UAAQ,EAACnL,QAAS,kBAAM,EAAK+K,iBAAgB,KACnD,kBAAChJ,EAAA,EAAD,CAAMrE,KAAK,4BADb,WAMF,kBAAC2J,GAAA,EAAD,KACE,kBAACA,GAAA,EAAKE,QAAN,KACE,kBAACF,GAAA,EAAK9E,OAAN,wBAGA,6BACA,kBAAC8E,GAAA,EAAKK,YAAN,4EAIF,kBAAC0B,GAAA,EAAD,CAAOpH,KAAM,OACNqJ,QAAS,kBAACpH,EAAA,EAAD,CAAQX,MAAM,OAAOtD,QAAS,kBAAI,EAAKsL,wBAC9C,kBAACvJ,EAAA,EAAD,CAAMrE,KAAK,OADJ,oBAId,kBAAC0L,GAAA,EAAM7G,OAAP,eAAsBlJ,EAAtB,aACA,kBAAC+P,GAAA,EAAM7B,QAAP,KACE,kBAAC6B,GAAA,EAAM1B,YAAP,KACE,yBAAKrF,UAAU,oDACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,oBACb,2BAAOyB,KAAK,WAAWtP,GAAG,iBAC1B,4BAAQ6N,UAAU,yBAAyBrC,QAAS,kBAAI,EAAKuL,mBAA7D,oBAIAT,GACA,yBAAMzI,UAAU,uBACd,yBAAKA,UAAU,WAGf,gEAYhB,kBAACgF,GAAA,EAAD,KACE,kBAACA,GAAA,EAAKE,QAAN,KACE,kBAACF,GAAA,EAAK9E,OAAN,6BAGA,6BACA,kBAAC8E,GAAA,EAAKK,YAAN,kCAC4B,gCAAS4C,KAGvC,kBAAClB,GAAA,EAAD,CAAOpH,KAAM,OACNqJ,QAAS,kBAACpH,EAAA,EAAD,CAAQX,MAAM,QACrB,kBAACvB,EAAA,EAAD,CAAMrE,KAAK,aADJ,oBAId,kBAAC0L,GAAA,EAAM7G,OAAP,eAAsB3L,EAAtB,aACA,kBAACwS,GAAA,EAAM7B,QAAP,CAAeiE,OAAK,GAClB,kBAACpC,GAAA,EAAM1B,YAAP,CAAmB1C,MAAO,CAAC,MAAQ,UACjC,kBAACyG,GAAD,wB,GArLV5V,aAwMXsK,MADG,SAAAK,GAAQ,QAAMA,IACjBL,CAA6BiK,I,gDCjMtCsB,G,YAEF,WAAY5V,GAAQ,IAAD,8BACf,4CAAMA,KAQV6V,gBAAkB,SAAOC,GAAP,2BAAAzT,EAAAC,OAAA,qDACiB,EAAKtC,MAAM+V,SAAnCxS,EADO,EACPA,aAAcQ,EADP,EACOA,OACjBuL,EAAS,GACb,EAAKnC,SAAS,CAAC6I,SAAS,IACU,IAA/B,EAAKnM,MAAMoM,gBAJA,mEAAA5T,EAAA,MAUI6T,MAAMJ,GAAS9T,MAAK,SAAAmU,GAAC,OAAIA,EAAEC,WAV/B,cAUVA,EAVU,mBAAA/T,EAAA,MAWOgU,KAAsBD,IAX7B,eAWRV,EAXQ,mBAAArT,EAAA,MAYWgU,KAAuBX,GAAOY,oBAAoBC,uBAZ7D,WAcU,KAFlBC,EAZQ,QAcD7S,OACT2L,EAAOrM,KAAK,uCACPuT,EAAU7S,OAAS,GACxB2L,EAAOrM,KAAK,8CAMM,IAAlBqM,EAAO3L,OAvBG,oCAAAtB,EAAA,MAwBJ,EAAKrC,MAAME,SAAS+F,iBAAiB1C,EAAaQ,EAAOyS,EAAU,GAAGtQ,aAxBlE,QAyBV,EAAKiH,SAAS,CAAC8I,gBAAgB,EAAKpM,MAAMoM,gBAAgB,IAzBhD,QA2Bd,EAAK9I,SAAS,CAACmC,OAAQA,IACvB,EAAKnC,SAAS,CAAC6I,SAAS,IA5BV,uCATC,EAwCnB9L,QAAU,SAAO8C,GAAP,mBAAA3K,EAAAC,OAAA,kDAC4B,EAAKtC,MAAM+V,SAAtC5F,EADD,EACCA,WAAYsG,EADb,EACaA,YACnBtG,SAEoBuG,IAAhBD,GACAA,IALE,sCAtCN,EAAK5M,MAAQ,CACTmM,SAAS,EACTC,gBAAiB,EACjB3G,OAAO,IALI,E,sEAiDT,IAAD,SACsC/G,KAAKsB,MAAzCoM,EADF,EACEA,gBAAiBD,EADnB,EACmBA,QAAS1G,EAD5B,EAC4BA,OAejC,OAdAqH,QAAQC,IAAI,CACRP,KAAaQ,mBAAmBC,YAAY,WAC5CT,KAAaU,kBAAkBD,YAAY,WAC3CT,KAAaW,eAAeF,YAAY,aAYxC,kBAACrI,EAAA,EAAD,CACIC,UAAQ,EACRuI,WAAS,GAET,kBAACxI,EAAA,EAAK2B,IAAN,CAAU1B,UAAQ,EAACjB,UAAU,UACzB,kBAACgB,EAAA,EAAKE,OAAN,CAAaC,cAAc,SAASnB,UAAU,QAC1C,kBAAChB,EAAA,EAAD,CAAQpB,GAAG,MACP,8BAAM,kBAACY,EAAA,EAAD,CAAMrE,KAAK,SAASsE,KAAK,UAA/B,KADJ,iBAGA,kBAACkF,GAAA,EAAD,MACA,kBAAC1B,GAAA,EAAD,CACIlC,MAAM,MACN0J,OAA0B,IAAlB5H,EAAO3L,OACfwT,OAAO,mBACPC,KAAM9H,IAEW,IAApB2G,EACC,GAEE,kBAACzJ,EAAA,EAAD,CAAWiB,UAAU,UACjB,kBAAC0D,GAAA,EAAD,CAAO3D,MAAM,OAAOtB,KAAK,OAAOT,KAAM,UAAU4L,OAAO,qBAAqB7G,QAASyF,OAKrG,kBAACxH,EAAA,EAAK2B,IAAN,CAAU1B,UAAQ,GACd,kBAACD,EAAA,EAAKE,OAAN,CAAa2I,WAAS,GAClB,kBAACtD,GAAA,EAAD,CAAQ7M,OAAQ6O,GACZ,kBAAC/B,GAAA,EAAD,CAAQzD,QAAQ,sBAAsBtE,KAAK,UAE3C,kBAAC,KAAD,CACIqL,YAAgB,SAACzB,GAAc,EAAKD,gBAAgBC,IACpD0B,cAAgB,IAEpB,kBAAC9H,GAAA,EAAD,CACIxD,KAAK,OACL4H,UAAQ,EACRoD,OAA4B,IAApBjB,GAER,kBAACzJ,EAAA,EAAD,KACI,kBAACiC,EAAA,EAAD,KACI,kBAACA,EAAA,EAAK2B,IAAN,KACI,kBAAC3B,EAAA,EAAKE,OAAN,CAAaC,cAAc,UACvB,kBAACnC,EAAA,EAAD,CAAQpB,GAAG,MAAX,cACA,kBAAC8C,EAAA,EAAD,CACI2F,UAAQ,EACR9C,QAAQ,QACR9E,KAAK,QACLsE,QAAQ,OACRtG,QAAS3B,KAAK2B,sB,GArH/BnK,aAsIpBD,KAAa8V,IC5IxB6B,I,OAAoB,IAAIC,OACxBC,GAAgB,GAEdC,G,YAEF,WAAY5X,GAAQ,IAAD,8BACf,4CAAMA,KAQV+M,SAAW,sCAAA1K,EAAAC,OAAA,gDACP,EAAK6K,SAAS,CAAC6I,SAAS,IACpB6B,EAAQ,EACLC,EAAU,EAAKjO,MAAfiO,OAHA,EAK2B,EAAK9X,MAAM+V,SAAtC5F,EALA,EAKAA,WAAYsG,EALZ,EAKYA,YASV/S,EAAI,EAdN,YAcSA,EAAGoU,EAAOnU,QAdnB,mCAAAtB,EAAA,MAeoB,EAAK0V,YAAYD,EAAOpU,GAAIA,IAfhD,QAeGsU,EAfH,SAiBCH,IAEJF,GAAc1U,KAAK+U,GAnBhB,QAc2BtU,IAd3B,uBAsBM,IAAVmU,EACCF,GAAc1U,KAAK,kDAInBiK,MAAM,8BACNiD,SACoBuG,IAAhBD,GACAA,KAGR,EAAKtJ,SAAS,CAAC6I,SAAS,IACxB,EAAK7I,SAAS,CAACmC,OAAQqI,KAlChB,uCATQ,EA8CnBI,YAAc,SAAOE,EAAQ9D,GAAf,yBAAA9R,EAAAC,OAAA,kEAAAD,EAAA,MACWgU,KAAsB4B,IADjC,cACJvC,EADI,kBAAArT,EAAA,MAEegU,KAAuBX,GAAOY,oBAAoBC,uBAFjE,UAEJC,EAFI,SAGqB,EAAKxW,MAAM+V,SAAnCxS,EAHG,EAGHA,aAAcQ,EAHX,EAGWA,OACfmU,EAAK,EAAKlY,MAAME,SAEE,IAArBsW,EAAU7S,OANH,wBAONgU,GAAc1U,KAAK,iCAAmCgV,EAAOrQ,KAAO,MAAQuM,GAPtE,mBAQC,GARD,aAUPqC,EAAU7S,OAAS,GAVZ,wBAWNgU,GAAc1U,KAAK,4CAA8CgV,EAAOrQ,KAAO,MAAQuM,GAXjF,mBAYC,GAZD,2BAAA9R,EAAA,MAcJ6V,EAAGjS,iBAAiB1C,EAAaQ,EAAOyS,EAAU,GAAGtQ,aAdjD,kCAeH,GAfG,uCA5CV,EAAK2D,MAAQ,CACTiO,OAAQ,GACR9B,SAAS,EACT1G,OAAO,IALI,E,sEAkET,IAAD,OACC6C,EAAwC,IAA7B5J,KAAKsB,MAAMiO,OAAOnU,OAC7BwU,EAA0C,IAA7B5P,KAAKsB,MAAMyF,OAAO3L,OAErC9B,QAAQC,IAAIqQ,EAAU,IAAMgG,GAC5BtW,QAAQC,IAAIqQ,GAAWgG,GACvBxB,QAAQC,IAAI,CACRP,KAAaQ,mBAAmBC,YAAY,WAC5CT,KAAaU,kBAAkBD,YAAY,WAC3CT,KAAaW,eAAeF,YAAY,aATvC,IAYEd,EAAWzN,KAAKsB,MAAhBmM,QAOP,OAcI,kBAACvH,EAAA,EAAD,CACIC,UAAQ,EACRuI,WAAS,GAET,kBAACxI,EAAA,EAAK2B,IAAN,CAAU1B,UAAQ,EAACjB,UAAU,UACzB,kBAACgB,EAAA,EAAKE,OAAN,CAAaC,cAAc,SAASnB,UAAU,QAC1C,kBAAChB,EAAA,EAAD,CAAQpB,GAAG,MACP,8BAAM,kBAACY,EAAA,EAAD,CAAMrE,KAAK,OAAOsE,KAAK,UAA7B,KADJ,mBAGA,kBAACkF,GAAA,EAAD,MAEA,kBAAC1B,GAAA,EAAD,CACIxD,KAAK,QACL4H,UAAQ,EACRoD,SAAUiB,GAAahG,GACvB3B,QAAQ,oCAIpB,kBAAC/B,EAAA,EAAK2B,IAAN,CAAU1B,UAAQ,GACd,kBAACsF,GAAA,EAAD,CAAQ7M,OAAQ6O,EAAShL,UAAQ,GAC7B,kBAACiJ,GAAA,EAAD,CAAQzD,QAAQ,+CAA+CtE,KAAK,UAGxE,kBAACwB,EAAA,EAAD,CACIX,SAAUxE,KAAKwE,UAEf,kBAACW,EAAA,EAAKI,MAAN,CACIE,KAAK,OACLpG,KAAK,IACLwQ,UAAQ,EACRC,OAAQ,wBACRhL,SAAU,SAACoD,EAAOjO,GAEdiV,GAAkBjV,EAAKoF,MAAQ6I,EAAMnD,OAAOgL,MAAM,GAClD,EAAKnL,SAAS,CAAC2K,OAAQL,QAG/B,kBAAC/J,EAAA,EAAKI,MAAN,CACIE,KAAK,OACLpG,KAAK,IACLyQ,OAAQ,wBACRhL,SAAU,SAACoD,EAAOjO,GACdiV,GAAkB,GAAKhH,EAAMnD,OAAOgL,MAAM,GAC1C,EAAKnL,SAAS,CAAC2K,OAAQL,QAG/B,kBAAC/J,EAAA,EAAKI,MAAN,CACIE,KAAK,OACLpG,KAAK,IACLyQ,OAAQ,wBACRhL,SAAU,SAACoD,EAAOjO,GACdiV,GAAkB,GAAKhH,EAAMnD,OAAOgL,MAAM,GAC1C,EAAKnL,SAAS,CAAC2K,OAAQL,QAG/B,kBAAC/J,EAAA,EAAKI,MAAN,CACIE,KAAK,OACLpG,KAAK,IACLyQ,OAAQ,wBACRhL,SAAU,SAACoD,EAAOjO,GACdiV,GAAkB,GAAKhH,EAAMnD,OAAOgL,MAAM,GAC1C,EAAKnL,SAAS,CAAC2K,OAAQL,QAG/B,kBAAC/J,EAAA,EAAKI,MAAN,CACIE,KAAK,OACLpG,KAAK,IACLyQ,OAAQ,wBACRhL,SAAU,SAACoD,EAAOjO,GACdiV,GAAkB,GAAKhH,EAAMnD,OAAOgL,MAAM,GAC1C,EAAKnL,SAAS,CAAC2K,OAAQL,QAG/B,kBAAC/H,GAAA,EAAD,CACIlC,MAAM,MACN0J,OAAkC,IAAzBS,GAAchU,OACvBwT,OAAO,sBACPC,KAAMO,KAEV,kBAACxJ,EAAA,EAAD,CACIH,KAAK,SACLvC,KAAK,SACLsF,cAAc,QACdP,QAAQ,SACR+H,SAAO,EACPnK,UAAW+D,Y,GA3LNpS,aAmMlBD,KAAa8X,ICpMxBhW,GAAO,CACPmC,OAAQ,GACRI,UAAW,GACXC,SAAU,GACVtD,MAAO,GACPuD,MAAO,GACPC,OAAQ,GACRC,IAAK,IAOHiU,G,YACF,WAAYxY,GAAQ,IAAD,8BACf,4CAAMA,KAoBV+M,SAAW,SAAOC,GAAP,iCAAA3K,EAAAC,OAAA,qDASH,EAAKuH,MAAMjI,KAPXmC,EAFG,EAEHA,OACAI,EAHG,EAGHA,UACAC,EAJG,EAIHA,SACAtD,EALG,EAKHA,MACAuD,EANG,EAMHA,MACAC,EAPG,EAOHA,OACAC,EARG,EAQHA,IAGGhB,EAAgB,EAAKsG,MAArBtG,aAEH+L,EAAS,GAERS,GAAWjP,IACZwO,EAAOrM,KAAK,gCAGhB,EAAKkK,SAAS,CAACmC,OAAQA,IAyBD,IAAlBA,EAAO3L,OA5CJ,mCAAAtB,EAAA,MA6CqB,EAAKrC,MAAME,SAASgE,QAAQX,EAAaQ,EAAOI,EAAUC,EAAStD,EAAMuD,EAAMC,EAAOC,IA7C3G,cAkDC,EAAK4I,SAAS,CAACsL,4BAA4B,KAH3CnJ,EAAOrM,KAAK,0BACZ,EAAKkK,SAAS,CAACmC,OAAQA,KAhDxB,uCArBQ,EAmHnBjC,SAAW,SAACL,EAAD,GAA2B,IAAlBpF,EAAiB,EAAjBA,KAAMzE,EAAW,EAAXA,MACtBvB,GAAKgG,GAAQzE,EACb,EAAKgK,SAAS,CAACvL,WArHA,EAwHnBuO,WAAa,oBAAA9N,EAAAC,OAAA,kEAAAD,EAAA,MACH,EAAK8K,SAAS,CAACuL,gBAAgB,KAD5B,yBAAArW,EAAA,MAEH,EAAKrC,MAAMmQ,WAAW,WAFnB,sCAtHT,EAAKtG,MAAQ,CACT6O,gBAAgB,EAChBD,4BAA4B,EAC5BE,QAAQ,EACRC,WAAY,GACZrV,aAAc,EAAKvD,MAAM+V,SAASxS,aAClC3B,KAAM,CACFmC,OAAQ,GACRI,UAAW,GACXC,SAAU,GACVtD,MAAO,GACPuD,MAAO,GACPC,OAAQ,GACRC,IAAK,IAET+K,OAAQ,IAjBG,E,sEA6HT,IAAD,SASD/G,KAAKsB,MAAMjI,KAPXmC,EAFC,EAEDA,OACAI,EAHC,EAGDA,UACAC,EAJC,EAIDA,SACAtD,EALC,EAKDA,MACAyD,EANC,EAMDA,IACAD,EAPC,EAODA,OACAD,EARC,EAQDA,MARC,EAiBDkE,KAAKsB,MALLtG,EAZC,EAYDA,aACAkV,EAbC,EAaDA,2BACAC,EAdC,EAcDA,eACAE,EAfC,EAeDA,WACAtJ,EAhBC,EAgBDA,OAGGa,EAAc5H,KAAKvI,MAAnBmQ,WAED5C,EAAyB,KAAXxJ,GACc,KAAdI,GACa,KAAbC,GACU,KAAVtD,GACW,KAAXwD,GACU,KAAVD,GACQ,KAARE,EAEpB,OACI,oCAoBI,kBAACkK,EAAA,EAAD,KACI,kBAACA,EAAA,EAAK2B,IAAN,KACI,kBAAC3B,EAAA,EAAKE,OAAN,KACI,kBAACjB,EAAA,EAAD,CACImL,YAAU,EACV9L,SAAUxE,KAAKwE,SACfb,KAAK,SAEL,kBAACwB,EAAA,EAAKG,MAAN,CAAYgB,MAAM,SACd,kBAACnB,EAAA,EAAKI,MAAN,CACI5C,OAAK,EACL6C,MAAM,aACNnG,KAAK,YACLoG,KAAK,OACLa,MAAO,EACPyB,UAAU,KACVnN,MAAOgB,EACPkJ,SAAU9E,KAAK8E,WAEnB,kBAACK,EAAA,EAAKI,MAAN,CACI5C,OAAK,EACL6C,MAAM,YACNnG,KAAK,WACLoG,KAAK,OACLa,MAAO,EACPyB,UAAU,KACVnN,MAAOiB,EACPiJ,SAAU9E,KAAK8E,WAEnB,kBAACK,EAAA,EAAKkD,OAAN,CACI1F,OAAK,EACL6C,MAAM,QACNnG,KAAK,QACLiH,MAAO,EACPgC,QAASjB,GACTvC,SAAU9E,KAAK8E,YAGvB,kBAACK,EAAA,EAAKG,MAAN,CAAYwC,OAAO,SACf,kBAAC3C,EAAA,EAAKI,MAAN,CACI5C,OAAK,EACL6C,MAAM,UACNnG,KAAK,SACLoG,KAAK,OACLa,MAAO,EACPyB,UAAU,KACVnN,MAAOY,EACPsJ,SAAU,WAAiB7K,GAAU,IAAlBwK,EAAiB,EAAxByD,OXxPlB,SAACjO,GAE/B,MADa,iBACCsN,KAAKtN,GWwPyBsW,CAAmBtW,EAAKW,QAAyB,KAAfX,EAAKW,QACvC,EAAKkK,SAASL,EAAOxK,MAIjC,kBAACkL,EAAA,EAAKkD,OAAN,CACI1F,OAAK,EACL6C,MAAM,SACNnG,KAAK,SACLiH,MAAO,EACPgC,QAASlB,GACTtC,SAAU9E,KAAK8E,WAEnB,kBAACK,EAAA,EAAKI,MAAN,CACI5C,OAAK,EACL6C,MAAM,MACNnG,KAAK,MACLoG,KAAK,OACL7K,MAAOoB,EACP+L,UAAU,IACVzB,MAAO,EACPxB,SAAU,WAAiB7K,GAAU,IAAlBwK,EAAiB,EAAxByD,MAEJZ,GAAkBrN,EAAKW,QACvB,EAAKkK,SAASL,EAAOxK,OAKrC,kBAACkL,EAAA,EAAKG,MAAN,CAAYwC,OAAO,SACf,kBAAC3C,EAAA,EAAKI,MAAN,CACI5C,OAAK,EACL6C,MAAM,QACNnG,KAAK,QACLoG,KAAK,OACLa,MAAO,EACPyB,UAAU,KACVnN,MAAOrC,EACPuM,SAAU9E,KAAK8E,YAGvB,kBAACqC,GAAA,EAAD,CACIlC,MAAM,MACN0J,OAA2B,IAAlB5H,EAAO3L,OAChBwT,OAAO,uBACPC,KAAM9H,IAEV,kBAACnB,EAAA,EAAD,CACIqC,QAAQ,SACRtE,KAAK,QACLsB,MAAM,MACNQ,KAAK,SACLvC,KAAK,SACLsF,cAAc,OACdC,QAAQ,QACR9G,QAAS,WACLtI,GAAO,CACHmC,OAAQ,GACRI,UAAW,GACXC,SAAU,GACVtD,MAAO,GACPuD,MAAO,GACPC,OAAQ,GACRC,IAAK,IAET,EAAK4I,SAASvL,IACd,EAAK5B,MAAMmQ,WAAW,aAG9B,kBAAChC,EAAA,EAAD,CACIH,KAAK,SACLwC,QAAQ,SACRpC,SAAUb,EACVrB,KAAK,QACLsB,MAAM,QACN/B,KAAK,QACLsF,cAAc,OACdC,QAAQ,aAO5B,kBAACsC,GAAA,EAAD,CACIpH,KAAK,OACLwH,oBAAoB,EACpBF,KAAMiF,GAEN,kBAACnF,GAAA,EAAM7G,OAAP,wBACA,kBAAC6G,GAAA,EAAM7B,QAAP,KACI,kBAAC6B,GAAA,EAAM1B,YAAP,KACI,qNAIA,+EAGR,kBAAC0B,GAAA,EAAMO,QAAP,KACI,kBAACpF,EAAA,EAAD,CACIiD,WAAW,GAEX,kBAACjD,EAAA,EAAK2B,IAAN,CAAUc,QAAS,GACf,kBAACzC,EAAA,EAAKE,OAAN,KACI,kBAACR,EAAA,EAAD,CACIoK,SAAO,EACP9M,KAAK,SACLsF,cAAc,OACdC,QAAQ,OACRR,QAAQ,gBACRtG,QAAS,WACL,EAAKiD,SAAS,CAACwL,QAAQ,IACvB,EAAKxL,SAAS,CAACyL,WAAW,kBAAC,GAAD,CAAsB7C,SAAU,CAAC,YAAe,EAAK/V,MAAM+Y,WAAW,aAAexV,EAAa,OAASQ,EAAQ,WAAc,EAAKoM,gBAChK,EAAKhD,SAAS,CAACsL,4BAA4B,IAC3C,EAAKtL,SAAS,CAACuL,gBAAgB,OAIvC,kBAACvK,EAAA,EAAD,CACIoK,SAAO,EACP9M,KAAK,aACLsF,cAAc,OACdC,QAAQ,QACRR,QAAQ,eACRtG,QAAS,WACL,EAAKiD,SAAS,CAACwL,QAAQ,IAC3B,EAAKxL,SAAS,CAACyL,WAAW,kBAAC,GAAD,CAAoB7C,SAAU,CAAC,YAAe,EAAK/V,MAAM+Y,WAAW,aAAexV,EAAa,OAASQ,EAAQ,WAAc,EAAKoM,gBAC1J,EAAKhD,SAAS,CAACsL,4BAA4B,IAC3C,EAAKtL,SAAS,CAACuL,gBAAgB,YAS3D,kBAACpF,GAAA,EAAD,CACIpH,KAAyB,QACzBsH,KAAMkF,EACNnF,QAAS,kBAAIpD,EAAW,WACxBuD,oBAAoB,GAEpB,kBAACJ,GAAA,EAAM7B,QAAP,CAAejB,QAASoI,U,GAjXtB7Y,aA6XPsK,MADG,SAAAK,GAAQ,QAAMA,IACjBL,CAA6BvK,EAAa0Y,KClZnDQ,G,YACF,WAAYhZ,GAAQ,IAAD,8BACf,4CAAMA,KACD6J,MAAQ,CACT+O,WAAY,IAHD,E,0KAQT7T,EAAUmQ,SAASC,eAAe,WAAWhS,MAC7CoD,EAAY2O,SAASC,eAAe,aAAahS,MACjDqD,EAAe0O,SAASC,eAAe,gBAAgBhS,MACvDmE,EAAe4N,SAASC,eAAe,gBAAgBhS,MACvDuD,EAAkBwO,SAASC,eAAe,mBAAmBhS,MAC7DwD,EAAcuO,SAASC,eAAe,eAAehS,MACrDyD,EAAYsO,SAASC,eAAe,aAAahS,MACjD8V,EAAW/D,SAASC,eAAe,YAAYhS,MAEjDjB,EAAQ,wDACG,KAAZ6C,IAAkB7C,GAAO,YACX,KAAdqE,IAAoBrE,GAAO,eACV,KAAjBsE,IAAuBtE,GAAO,kBACd,KAAhByE,IAAsBzE,GAAO,gBACf,KAAd0E,IAAoB1E,GAAO,eACd,KAAb+W,IAAkB/W,GAAO,cAEf,0DAAVA,E,wBACCgL,MAAMhL,G,kCAGJqB,EAAegF,KAAKvI,MAAM+V,SAASxS,a,oBAChBgF,KAAKvI,MAAME,SAASoG,SAAS/C,EAAcwB,EAASwB,EAAWC,EAAcc,EAAcZ,EAAiBC,EAAaC,EAAWqS,I,gBAEzJ/L,MAAM,qEAGV3E,KAAKvI,MAAMkZ,c,iFAIL,IAAD,OACL,OACI,6BACI,yCACA,6BACI,wCACA,2BAAOxa,GAAI,YACX,0CACA,2BAAOA,GAAI,cACX,6CACA,2BAAOA,GAAI,iBACX,oDACA,2BAAOA,GAAI,iBACX,wDACA,2BAAOA,GAAI,oBACX,2CACA,2BAAOA,GAAI,gBACX,yCACA,2BAAOA,GAAI,aACX,0CACA,2BAAOA,GAAI,cACX,6BACA,4BAAQwL,QAAS,kBAAM,EAAKiP,kBAA5B,sB,GA9DGpZ,aAqERsK,MADG,SAAAK,GAAQ,QAAMA,IACjBL,CAA6BvK,EAAakZ,KClEnDI,G,YACJ,WAAYpZ,GAAQ,IAAD,8BACjB,4CAAMA,KACD6J,MAAQ,CACTtG,aAAc,GACd6E,MAAO,GACPsK,OAAQ,IALK,E,uLAUUnK,KAAKvI,MAAME,SAAS2H,mB,cAAzCtE,E,0BACcgF,KAAKvI,MAAME,SAASoF,gBAAgB/B,I,cAAlD6E,E,0BACeG,KAAKvI,MAAME,SAASwH,iBAAiBnE,I,OAApDmP,E,OACNnK,KAAK4E,SAAS,CACV5J,aAAcA,EACd6E,MAAOA,EACPsK,OAAQA,I,wLAKWnK,KAAKvI,MAAME,SAASwH,iBAAiBa,KAAKsB,MAAMtG,e,OAA/DmP,E,OACNnK,KAAK4E,SAAS,CAAEuF,OAAQA,I,sLAIFnK,KAAKvI,MAAME,SAASoF,gBAAgBiD,KAAKsB,MAAMtG,e,OAA7D6E,E,OACNG,KAAK4E,SAAS,CAAE/E,MAAOA,I,gFAGnB,IAAD,EACiCG,KAAKsB,MAApCtG,EADF,EACEA,aAAc6E,EADhB,EACgBA,MAAOsK,EADvB,EACuBA,OAE5B,OACI,6BACI,qCACA,0CACA,uCACA,kBAAC,GAAD,CAASqD,SAAU,CAAC,aAAgBxS,GAAewV,WAAaxQ,KAAK7D,WAAW2U,KAAK9Q,QAErF,wCACA,kBAAC,GAAD,CAAUwN,SAAU,CAAC,aAAgBxS,GAAe2V,YAAc3Q,KAAKvB,YAAYqS,KAAK9Q,QACxF,6BACA,yCACA,kBAAC,GAAD,CAAUH,MAAOA,IACjB,6BACA,0CACA,kBAAC,GAAD,CAAWsK,OAAQA,S,GAhDT3S,aAuDlBuZ,GAAW,SAAC,GAAD,IAAElR,EAAF,EAAEA,MAAF,OACb,4BAEQA,EAAM7J,KACF,SAAAqD,GAAI,OACA,6BACI,gCAAOA,EAAKd,MAAZ,KACA,+BAAMc,EAAKuC,UAAX,IAAyBvC,EAAKwC,SAA9B,KACA,sCAAaxC,EAAKyC,MAAlB,WAQlBkV,GAAY,SAAC,GAAD,IAAE7G,EAAF,EAAEA,OAAF,OACd,4BAEQA,EAAOnU,KACH,SAAAyO,GAAK,OACD,6BACI,gCAAOA,EAAMjI,QAAb,KACA,qCAAYiI,EAAMpF,KAAlB,KACA,qCAAYoF,EAAMpG,UAAlB,KACA,0CAAiBoG,EAAMxG,aAAvB,KACA,uCAAcwG,EAAM7F,OAApB,W,IASTkD,GADG,SAAAK,GAAQ,QAAMA,IACjBL,CAA6B+O,I,OCxFtCI,G,YACF,WAAYxZ,GAAQ,IAAD,8BACf,4CAAMA,KASVyZ,YAAc,oBAAApX,EAAAC,OAAA,gDACV,EAAK6K,SAAS,CAAC6I,SAAQ,IADb,sCAVK,EAcnB0D,aAAe,WACX,EAAKvM,SAAS,CAACwM,cAAc,KAfd,EAkBnBC,aAAe,SAAOC,GAAP,eAAAxX,EAAAC,OAAA,gDACG,2BAAXuX,EACC,EAAK1M,SAAS,CACVwM,cAAc,EACdG,cAAe,QACfC,eAAgB,2BAGJ,0BAAXF,EACL,EAAK1M,SAAS,CACVwM,cAAc,EACdG,cAAe,MACfC,eAAgB,0BAGfF,EAAO9W,SAAS,SACrB,EAAKoK,SAAS,CACVwM,cAAc,EACdG,cAAe,SACfC,eAAgBF,IAGfA,EAAO9W,SAAS,SACrB,EAAKoK,SAAS,CACVwM,cAAc,EACdG,cAAe,MACfC,eAAgBF,IAGJ,qBAAXA,EACL,EAAK1M,SAAS,CACVwM,cAAc,EACdG,cAAe,SACfC,eAAgB,qBAIpB,EAAK5M,SAAS,CACVwM,cAAc,EACdG,cAAe,SACfC,eAAgBF,IAGpBG,EA3CO,gBA4CXC,aAAY,WACRD,EAAKN,iBACN,KA9CQ,sCAhBX,EAAK7P,MAAQ,CACTmM,SAAQ,EACR2D,cAAc,EACdG,cAAe,GACfC,eAAgB,IANL,E,sEAoET,IAAD,OAECxW,EAAegF,KAAKvI,MAAM+V,SAASxS,aACnCwB,EAAUwD,KAAKvI,MAAM+V,SAAS/I,MAC9BkN,EAAsB3R,KAAKkR,YAC3BG,EAAerR,KAAKqR,aAGpB1B,EAAK3P,KAAKvI,MAAME,SAQtB,SAAeia,EAAmBpW,GAAlC,eAAA1B,EAAAC,OAAA,kEAAAD,EAAA,MAC+B6V,EAAGrU,eAAeN,EAAcQ,IAD/D,UAEiC,IADzBqW,EADR,QAEuBzW,OAFvB,yCAGe,MAHf,gCAKW,IAAI0S,KAA+BtS,EAAQqW,IALtD,qCAsFA,SAAeC,EAAwB3E,EAAOc,GAA9C,iCAAAnU,EAAAC,OAAA,kEAAAD,EAAA,MAGmC6V,EAAG5U,wBAAwBC,IAH9D,OAGU+W,EAHV,OAIoB,EACZnG,GAAS,EAEToG,EAAmB,EACnBC,EAAkB,EAClBC,EAAmB,EAT3B,8CAAApY,EAAAC,OAAA,qDAaoC,QADtBoY,EAAUJ,EAAiB5W,IACrBO,aAAwByW,EAAQzW,YAAYN,QAAU,GAb1E,mEAgBcgX,EAAgB,IAAItE,KAA+BqE,EAAQ3W,OAAQ2W,EAAQzW,aAhBzF,WAAA5B,EAAA,MAmBkC,IAAIgU,KAAoBsE,EAAe,KAnBzE,cAmBcC,EAnBd,OAoBcC,EAAc,CAAChM,MAAO6G,EAAM7G,MAAOiM,OAAQpF,EAAMoF,QApB/D,YAAAzY,EAAA,MAqBwCgU,KAAsBG,EAAWqE,IArBzE,eAqBcE,EArBd,OAsBcC,EAAUD,EAAkBxc,KAAI,SAAAuH,GAAC,OAAI8U,EAAYK,cAAcnV,EAAEI,eAtB/E,YAAA7D,EAAA,MAwBiDgU,KAAuBX,GAAOwF,oBAxB/E,QAwBcC,EAxBd,OA0BcC,EAA2C,KAA3B,EAAIJ,EAAQ,GAAGK,UAC/BC,EAAcC,KAAKC,IAAId,EAAQ1W,SAASO,IAAM4W,EAA2B,GAAG5W,KAC5EkX,EAAgBN,EAA2B,GAAG7W,QAAUoW,EAAQ1W,SAASa,IAE3EuW,EAAeb,IACfA,EAAmBa,EACnBZ,EAAkBc,EAClBb,EAAmBgB,EACnBtH,EAAQzQ,GAlCpB,uCAWaA,EAAI,EAXjB,aAWoBA,EAAI4W,EAAiB3W,QAXzC,oCAAAtB,EAAA,kGAWiDqB,IAXjD,6BAsCQyQ,EAAQ,GAtChB,wBAuCQyF,EAAa,iCACbM,IAxCR,kCA4CUnW,EAASuW,EAAiBnG,GAAOpQ,OAGjCC,EAAWsW,EAAiBnG,GAAOnQ,SA/C7C,YAAA3B,EAAA,MAiD4B6V,EAAG9Q,oBAAoB7D,EAAcwB,IAjDjE,aAiDU2W,EAjDV,QAkDkBhV,gBAAgB3D,SAASgB,GAlD3C,wBAmDQ6V,EAAa,2BACbM,IApDR,gCAuDQwB,EAAUlV,aAAexC,EAASK,QAAUqX,EAAUpU,aAAavE,SAASgB,GAvDpF,wBAwDQ6V,EAAa,2BACbM,IAzDR,8CAAA7X,EAAA,MA6DUsZ,EAAepB,EAAkBC,EAAiBC,EAAkB1W,EAAQC,IA7DtF,QA8DIkW,IA9DJ,sCAiEA,SAAeyB,EAAeP,EAAcE,EAAaG,EAAc1X,EAAQC,GAA/E,iBAAA3B,EAAAC,OAAA,mDAMQuX,EAAS,GAoBC,2BAfNA,EAHJyB,EAAc,GAAKG,EACfL,EAAe,GAEN,yBACFA,EAAe,GAEb,mBAGA,wBAIJ,yBArBjB,uBA4BQxB,EAAaC,GACbK,IA7BR,4CAAA7X,EAAA,MAiCiC6V,EAAGpT,mBAAmBvB,EAAcwB,EAAShB,IAjC9E,OAmC0B,OAFhB6X,EAjCV,UAoCQ/B,EAAS,QAAQ7V,EAASG,UAAU,IAAIH,EAASI,SAAS,6BAA6B,IAAIc,KAAK0W,GAAgBC,kBAGpHjC,EAAaC,GAvCjB,sCAuDA,OAVAlD,QAAQC,IAAI,CACRP,KAAaQ,mBAAmBC,YAAY,WAC5CT,KAAaU,kBAAkBD,YAAY,WAC3CT,KAAaW,eAAeF,YAAY,WACxCT,KAAayF,aAAahF,YAAY,WAEtCT,KAAa0F,iBAAiBjF,YAAY,WAC1CT,KAAa2F,sBAAsBlF,YAAY,aAI/C,oCACI,yBAAKvK,UAAU,+BACX,6BACI,kBAACmD,GAAA,EAAD,CACIlC,MAAOjF,KAAKsB,MAAMiQ,cAClB5C,OAAQ3O,KAAKsB,MAAM8P,aACnBxC,OAAQ5O,KAAKsB,MAAMkQ,kBAG3B,yBAAMkC,MAAM,cACR,kBAACjI,GAAA,EAAD,CAAQ7M,OAAQoB,KAAKsB,MAAMmM,SACvB,kBAAC/B,GAAA,EAAD,CAAQzD,QAAQ,sBAAsBtE,KAAK,UAE/C,kBAAC,KAAD,CACIqL,YAAa,SAACzB,GACV,EAAK3I,SAAS,CAAC6I,SAAQ,IAjN/C,SAA+BF,GAA/B,oCAAAzT,EAAAC,OAAA,kEAAAD,EAAA,MAGqB6T,MAAMJ,GAAS9T,MAAK,SAAAmU,GAAC,OAAIA,EAAEC,WAHhD,cAGQA,EAHR,kBAAA/T,EAAA,MAIwBgU,KAAsBD,IAJ9C,cAIUV,EAJV,kBAAArT,EAAA,MAK4BgU,KAAuBX,GAAOY,oBAAoBC,uBAL9E,UAM6B,KADnBC,EALV,QAMkB7S,OANlB,wBAOQiW,EAAa,8CACbM,IARR,gCAYQ1D,EAAU7S,OAAS,GAZ3B,wBAaQiW,EAAa,qDACbM,IAdR,8BAoBkB,KADRnW,EAASmR,SAASC,eAAe,UAAUhS,OAnBrD,wBAqBQyW,EAAa,uEArBrB,YAAAvX,EAAA,MAsBcgY,EAAwB3E,EAAOc,IAtB7C,eAuBQ0D,IAvBR,8CAAA7X,EAAA,MA4B2B6V,EAAGtU,mBAAmBL,EAAcQ,IA5B/D,WA6BoB,OADVC,EA5BV,gCA8BQ4V,EAAa,0BACbM,IA/BR,8CAAA7X,EAAA,MAmC4B6V,EAAG9Q,oBAAoB7D,EAAcwB,IAnCjE,aAmCU2W,EAnCV,QAoCkBhV,gBAAgB3D,SAASgB,GApC3C,wBAqCQ6V,EAAa,2BACbM,IAtCR,gCAyCQwB,EAAUlV,aAAexC,EAASK,QAAUqX,EAAUpU,aAAavE,SAASgB,GAzCpF,wBA0CQ6V,EAAa,2BACbM,IA3CR,8CAAA7X,EAAA,MAgDiC8X,EAAmBpW,IAhDpD,WAiDyB,OADf4W,EAhDV,SAiDyD,GAAxBA,EAAchX,OAjD/C,wBAkDQiW,EAAa,oFACbM,IAnDR,8CAAA7X,EAAA,MAwD8B,IAAIgU,KAAoBsE,EAAe,KAxDrE,eAwDUC,EAxDV,OAyDUC,EAAc,CAAChM,MAAO6G,EAAM7G,MAAOiM,OAAQpF,EAAMoF,QAzD3D,YAAAzY,EAAA,MA0DoCgU,KAAsBG,EAAWqE,IA1DrE,eA0DUE,EA1DV,OA2DUC,EAAUD,EAAkBxc,KAAI,SAAAuH,GAAC,OAAI8U,EAAYK,cAAcnV,EAAEI,eA3D3E,YAAA7D,EAAA,MA8D6CgU,KAAuBX,GAAOwF,oBA9D3E,eA8DUC,EA9DV,OAiEUC,EAA2C,KAA3B,EAAIJ,EAAQ,GAAGK,UAC/BC,EAAcC,KAAKC,IAAIxX,EAASO,IAAM4W,EAA2B,GAAG5W,KACpEkX,EAAgBN,EAA2B,GAAG7W,QAAUN,EAASa,IAnE3E,YAAAxC,EAAA,MAqEUsZ,EAAeP,EAAcE,EAAaG,EAAc1X,EAAQC,IArE1E,QAsEIkW,IAtEJ,sCAkNwBrE,CAAgBC,IAGpB0B,cAAgB,KAGxB,yBAAKjL,UAAU,4BACX,yBAAKA,UAAU,UACX,+BAEJ,yBAAKA,UAAU,UACX,yBAAKA,UAAU,sBACX,2BAAOyB,KAAK,OAAOE,YAAY,UAAUxP,GAAI,WACzC,uBAAG6N,UAAU,gCAGzB,yBAAKA,UAAU,UACX,sC,GArUGxM,aA8VhBD,KAAa0Z,IC/VtB0C,G,YACF,WAAYlc,GAAQ,IAAD,8BACf,4CAAMA,KACD6J,MAAQ,CACTtG,aAAc,GACdyJ,MAAO,GACPmP,eAAgB,GAChBC,WAAW,GANA,E,2IAYf7T,KAAK4E,SAAS,CACV5J,aAAc,GACdyJ,MAAO,GACPmP,eAAgB,GAChBC,WAAW,IAEflH,SAASC,eAAe,gBAAgBhS,MAAQ,GAChD+R,SAASC,eAAe,SAAShS,MAAQ,GACzC+R,SAASC,eAAe,YAAYhS,MAAQ,G,oKAKtCI,EAAe2R,SAASC,eAAe,gBAAgBhS,OAC5CJ,SAAS,K,uBACtBmK,MAAM,0C,6BAGJF,EAAQkI,SAASC,eAAe,SAAShS,MACzCkZ,EAAgBnH,SAASC,eAAe,YAAYhS,MAE/B,GAAvBI,EAAaI,QAA+B,GAAhBqJ,EAAMrJ,QAAuC,GAAxB0Y,EAAc1Y,O,uBAC/DuJ,MAAM,mC,qDAGA3E,KAAKvI,MAAME,SAAS4G,kBAAkBvD,EAAcyJ,I,+DAChDzE,KAAKvI,MAAME,SAAS+G,eAAe1D,EAAcyJ,EAAOqP,I,oCAC9D9T,KAAK4E,SAAS,CACViP,WAAW,EACX7Y,aAAcA,EACdyJ,MAAOA,I,+BAIXE,MAAM,kC,0DAIVA,MAAM,0B,oGAMJ,IAAD,OACL,OACI,oCACI,6BACA,kBAACkE,GAAA,EAAD,CAAS2C,YAAU,EAAC7H,KAAK,QACrB,wBAAIK,UAAU,mBACV,yBAAKA,UAAU,WAAf,wBAKR,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,UACX,6BAEJ,yBAAKA,UAAU,UACX,yBAAKA,UAAU,yCACX,yBAAKA,UAAU,UACX,0BAAMA,UAAU,iBACZ,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,SACX,yBAAKA,UAAU,sBACX,uBAAGA,UAAU,kBACb,2BAAOyB,KAAK,OAAOpG,KAAK,QAAQsG,YAAY,kBAAkBxP,GAAI,mBAG1E,yBAAK6N,UAAU,SACX,yBAAKA,UAAU,sBACX,uBAAGA,UAAU,eACb,2BAAOyB,KAAK,OAAOpG,KAAK,QAAQsG,YAAY,WAAWxP,GAAI,YAGnE,yBAAK6N,UAAU,SACX,yBAAKA,UAAU,sBACX,uBAAGA,UAAU,cACb,2BAAOyB,KAAK,WAAWpG,KAAK,WAAWsG,YAAY,iBAAiBxP,GAAI,eAGhF,yBAAK6N,UAAU,oCACVrC,QAAS,kBAAM,EAAKoS,cADzB,kBAKR,yBAAK/P,UAAU,cAAf,iBACkB,uBAAGrC,QAAS,kBAAM,EAAKlK,MAAM2K,QAAQ1H,KzB7GpE,ayB6G+B,eAM9B,yBAAKsJ,UAAU,UACX,+BAIZ,kBAAC+G,GAAA,EAAD,CAAOpH,KAAM,QAASsH,KAAMjL,KAAKsB,MAAMuS,WAEnC,yBAAK7P,UAAU,cACX,yBAAKA,UAAU,mCACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,MACX,wBAAIA,UAAU,0BAA0BhE,KAAKsB,MAAMmD,SAG3D,yBAAKT,UAAU,UACX,yBAAKA,UAAU,MACX,wBAAIA,UAAU,2BAA2BhE,KAAKsB,MAAMtG,iBAKhE,yBAAKgJ,UAAU,uBAAf,aAIJ,kBAAC+G,GAAA,EAAM7B,QAAP,CAAelF,UAAU,IACrB,kBAAC,GAAD,CAAkBwJ,SAAU,CAAC,aAAgBxN,KAAKsB,MAAMtG,aAAc,MAASgF,KAAKsB,MAAMmD,UAE9F,kBAACsG,GAAA,EAAM7B,QAAP,KACI,4BAASwK,MAAM,sBAAsB/R,QAAS,kBAAM,EAAKqS,cACrD,kBAACtQ,EAAA,EAAD,CAAMrE,KAAK,wBADf,e,GAzIC7H,aAmJVD,KAAaoc,IC9ItBM,G,YACJ,WAAYxc,GAAQ,IAAD,8BACjB,4CAAMA,KAeRqN,SAAW,SAAOL,EAAP,oBAAA3K,EAAAC,OAAA,gDAAgBsF,EAAhB,EAAgBA,KAAMzE,EAAtB,EAAsBA,MAC/B,EAAKgK,SAAL,eACK,EAAKtD,MAAMoG,OADhB,eAEGrI,EAAOzE,KAHD,sCAhBQ,EAuBnB4J,SAAW,SAAOC,GAAP,yCAAA3K,EAAAC,OAAA,qDASL,EAAKuH,MAPL9F,EAFK,EAELA,OACAI,EAHK,EAGLA,UACAC,EAJK,EAILA,SACAtD,EALK,EAKLA,MACAuD,EANK,EAMLA,MACAC,EAPK,EAOLA,OACAC,EARK,EAQLA,IARK,EAWiD,EAAKvE,MAAxDuD,EAXE,EAWFA,aAAckT,EAXZ,EAWYA,YAAatG,EAXzB,EAWyBA,WAAYjQ,EAXrC,EAWqCA,SAE1CoP,EAAS,GAERS,GAAWjP,IACZwO,EAAOrM,KAAK,gCAGM,IAAlBqM,EAAO3L,OAnBF,mCAAAtB,EAAA,MAoBmBnC,EAASwE,WAC7BnB,EACAQ,EACAI,EACAC,EACAtD,EACAuD,EACAC,EACAC,IA5BC,eAmCD4L,IACAsG,MAJAnH,EAAOrM,KAAK,uBACZ,EAAKkK,SAAS,CAACmC,OAAQA,KAjCtB,wBAuCL,EAAKnC,SAAS,CAACmC,OAAQA,IAvClB,uCAvBQ,EAkEnBpF,QAAU,SAAOnK,GAAP,SAAAsC,EAAAC,OAAA,gDACN,EAAK6K,SAAS,CAACjH,WAAYnG,IAC3B,EAAKoN,SAAS,CAACsP,qBAAqB,IAF9B,sCAlES,EAuEnBtM,WAAa,WACT,EAAKhD,SAAS,CAACsP,qBAAqB,KAtEtC,EAAK5S,MAAQ,CACT9F,OAAQ/D,EAAM4B,KAAKmC,OACnBI,UAAWnE,EAAM4B,KAAKuC,UACtBC,SAAUpE,EAAM4B,KAAKwC,SACrBtD,MAAOd,EAAM4B,KAAKd,MAClBwD,OAAQtE,EAAM4B,KAAKiD,IACnBN,IAAKvE,EAAM4B,KAAK2C,IAChBF,MAAOrE,EAAM4B,KAAKyC,MAClBiL,OAAO,GACPpJ,WAAY,KACZuW,qBAAqB,GAZR,E,sEA2ET,IAAD,SACqGlU,KAAKsB,MAAzG1F,EADD,EACCA,UAAWC,EADZ,EACYA,SAAUtD,EADtB,EACsBA,MAAOwD,EAD7B,EAC6BA,OAAQC,EADrC,EACqCA,IAAKF,EAD1C,EAC0CA,MAAOiL,EADjD,EACiDA,OAAQvL,EADzD,EACyDA,OAAQ0Y,EADjE,EACiEA,oBAAqBvW,EADtF,EACsFA,WACtF3C,EAAgBgF,KAAKvI,MAArBuD,aAEDmZ,EACF,kBAAC,GAAD,CACI3G,SACI,CACI,aAAgBxS,EAChB,OAAUQ,EACV,WAAcwE,KAAK4H,cAM7BwM,EACF,kBAAC,GAAD,CACI5G,SACI,CACI,aAAgBxS,EAChB,OAAUQ,EACV,WAAcwE,KAAK4H,cAM7ByM,EACF,kBAACtJ,GAAA,EAAD,CACIpH,KAAK,OACLsH,KAAMiJ,EACNlJ,QAAS,kBAAI,EAAKpD,cAClBuD,oBAAoB,EACpBD,eAAe,GAEf,kBAACH,GAAA,EAAM7B,QAAP,CAAejB,QAAStK,KAIhC,OACI,oCACI,kBAACuI,EAAA,EAAD,KACI,kBAACA,EAAA,EAAK2B,IAAN,KACI,kBAAC3B,EAAA,EAAKE,OAAN,KACA,kBAACjB,EAAA,EAAD,CACImL,YAAU,EACV9L,SAAUxE,KAAKwE,SACfb,KAAK,SAEL,kBAACwB,EAAA,EAAKG,MAAN,CAAYgB,MAAM,SACd,kBAACnB,EAAA,EAAKI,MAAN,CACI5C,OAAK,EACL6C,MAAM,aACNnG,KAAK,YACLoG,KAAK,OACLa,MAAO,EACPyB,UAAU,KACVnN,MAAOgB,EACPkJ,SAAU9E,KAAK8E,WAEnB,kBAACK,EAAA,EAAKI,MAAN,CACI5C,OAAK,EACL6C,MAAM,YACNnG,KAAK,WACLoG,KAAK,OACLa,MAAO,EACPyB,UAAU,KACVnN,MAAOiB,EACPiJ,SAAU9E,KAAK8E,WAEnB,kBAACK,EAAA,EAAKkD,OAAN,CACI1F,OAAK,EACL6C,MAAM,QACNnG,KAAK,QACLiH,MAAO,EACP1L,MAAOkB,EACPwM,QAASjB,GACTvC,SAAU9E,KAAK8E,YAGvB,kBAACK,EAAA,EAAKG,MAAN,CAAYwC,OAAO,SACf,kBAAC3C,EAAA,EAAKI,MAAN,CACI5C,OAAK,EACL6C,MAAM,QACNnG,KAAK,QACLoG,KAAK,OACLa,MAAO,EACPyB,UAAU,KACVnN,MAAOrC,EACPuM,SAAU9E,KAAK8E,WAEnB,kBAACK,EAAA,EAAKkD,OAAN,CACI1F,OAAK,EACL6C,MAAM,SACNnG,KAAK,SACLiH,MAAO,EACP1L,MAAOmB,EACPuM,QAASlB,GACTtC,SAAU9E,KAAK8E,WAEnB,kBAACK,EAAA,EAAKI,MAAN,CACI5C,OAAK,EACL6C,MAAM,MACNnG,KAAK,MACLoG,KAAK,OACL7K,MAAOoB,EACP+L,UAAU,IACVzB,MAAO,EACPxB,SAAU,WAAiB7K,GAAU,IAAlBwK,EAAiB,EAAxByD,MAEJZ,GAAkBrN,EAAKW,QACvB,EAAKkK,SAASL,EAAOxK,QAMzC,kBAAC2L,EAAA,EAAON,MAAR,CAAcgP,SAAO,EAAC3R,OAAK,EAACgB,KAAK,SAC7B,kBAACiC,EAAA,EAAD,CACIX,MAAM,OACNgD,QAAQ,mBACR/E,KAAK,SACLsF,cAAc,OACd7G,QAAS,WAAO,EAAKA,QAAQwS,MAEjC,kBAACvO,EAAA,EAAO2O,GAAR,MACA,kBAAC3O,EAAA,EAAD,CACIX,MAAM,OACNgD,QAAQ,sBACR/E,KAAK,OACLsF,cAAc,QACd7G,QAAS,WAAO,EAAKA,QAAQyS,OAGjC,kBAACjN,GAAA,EAAD,CACIlC,MAAM,MACNtB,KAAK,QACLgL,OAA2B,IAAlB5H,EAAO3L,OAChBwT,OAAO,uBACPC,KAAM9H,MAIlB,kBAACb,EAAA,EAAK2B,IAAN,KACI,kBAAC3B,EAAA,EAAKE,OAAN,KACI,kBAACR,EAAA,EAAD,CACIH,KAAK,SACLwC,QAAQ,SACRtE,KAAK,QACLsB,MAAM,MACN/B,KAAK,SACLsF,cAAc,OACdC,QAAQ,QACR9G,QAAS,WACL,EAAKiD,SAAS,IACd,EAAKnN,MAAMmQ,WAAW,WAG9B,kBAAChC,EAAA,EAAD,CACIjE,QAAS3B,KAAKwE,SAClByD,QAAQ,SACRtE,KAAK,QACLsB,MAAM,QACN/B,KAAK,QACLsF,cAAc,OACdC,QAAQ,YAKnB4L,O,GAvPchd,IAAMG,WA8PlBsK,MADG,SAAAK,GAAQ,QAAMA,IACjBL,CAA6BvK,EAAa0c,K,UCrPnDO,G,YACF,WAAY/c,GAAQ,IAAD,8BACf,4CAAMA,KAmCVmQ,WAAa,SAACvI,GACV,OAAOA,GACH,IAAK,OACD,EAAKuF,SAAS,CAAC6P,eAAe,IAC9B,MACJ,IAAK,SACD,EAAK7P,SAAS,CAAC8P,qBAAqB,IACpC,MACJ,IAAK,OACD,EAAK9P,SAAS,CAAC+P,mBAAmB,MA7C3B,EAkDnB5L,UAAY,SAAC1J,GACT,OAAOA,GACH,IAAK,OACD,EAAKuF,SAAS,CAAC6P,eAAe,IAC9B,MACJ,IAAK,SACD,EAAK7P,SAAS,CAAC8P,qBAAqB,IACpC,MACJ,IAAK,OACD,EAAK9P,SAAS,CAAC+P,mBAAmB,MAzD1C,EAAKrT,MAAQ,CACTtG,aAAc,GACd6E,MAAO,GAEPhD,WAAY,KACZqR,YAAa,KACbwG,qBAAqB,EACrBD,eAAe,EACfE,mBAAmB,EACnBC,aAAc,IAXH,E,gMAgBY5U,KAAKvI,MAAME,SAAS2H,mB,cAAzCtE,E,0BACcgF,KAAKvI,MAAME,SAASoF,gBAAgB/B,I,OAAlD6E,E,OACUG,KAAKvI,MAAME,SAASgE,QAC9BkB,EAAamD,KAAKvI,MAAME,SAASkF,WACjCqR,EAAe,0BAAApU,EAAAC,OAAA,uDACjB,EAAK6K,SAAS,CAAC6I,SAAS,IADP,WAAA3T,EAAA,MAEI,EAAKrC,MAAME,SAASoF,gBAAgB,EAAKuE,MAAMtG,eAFnD,OAEX6E,EAFW,OAGjB,EAAK+E,SAAS,CAAE/E,MAAOA,IACvB,EAAK+E,SAAS,CAAC6I,SAAS,IAJP,sCAMrBzN,KAAK4E,SAAS,CACV5J,aAAcA,EACd6E,MAAOA,EAEPhD,WAAYA,EACZqR,YAAaA,EACb2G,iBAAiB,I,iFAgCf,IAAD,SACsJ7U,KAAKsB,MAAhJtG,GADX,EACEyS,QADF,EACWzS,cAAc6E,EADzB,EACyBA,MAAOhD,EADhC,EACgCA,WAAYqR,EAD5C,EAC4CA,YAAYyG,EADxD,EACwDA,kBAAwCE,EADhG,EAC2EH,oBAAsCD,EADjH,EACiHA,cAA6Bpb,EAD9I,EACgIub,aAE/HE,EACF,kBAAC/J,GAAA,EAAD,CACIgK,WAAS,EACT/J,QAAS,kBAAIkD,KACbjD,KAAM4J,EACNlR,KAAK,QACLuH,eAAe,EACfC,oBAAoB,GAEpB,kBAACJ,GAAA,EAAM7G,OAAP,CAAcpB,GAAG,KAAKmF,QAAQ,aAC9B,kBAAC8C,GAAA,EAAM7B,QAAP,CAAejB,QAAS,kBAAC,GAAD,CAASuF,SAAU,CAAC,aAAgBxS,GAAe4M,WAAY5H,KAAK4H,WAAY4I,WAAYtC,OAItH8G,EACF,kBAACjK,GAAA,EAAD,CACIC,QAAS,kBAAM,EAAKpD,WAAW,SAC/BqD,KAAM0J,EACNhR,KAAK,OACLuH,eAAe,EACfC,oBAAoB,GAEpB,kBAACJ,GAAA,EAAM7G,OAAP,CAAcpB,GAAG,MAAjB,aACA,kBAACiI,GAAA,EAAM7B,QAAP,KACI,kBAAC,GAAD,CACI7P,KAAMA,EACN2B,aAAcA,EACd4M,WAAY,kBAAM,EAAKA,WAAW,SAClCsG,YAAaA,MAKvB+G,EACF,kBAAClK,GAAA,EAAD,CACIE,KAAMwJ,EACNzJ,QAAS,kBAAM,EAAKpD,WAAW,SAC/BjE,KAAK,OACLuH,eAAe,EACfC,oBAAoB,GAEpB,kBAACJ,GAAA,EAAM7G,OAAP,CAAcpB,GAAG,KAAKmF,QAAQ,iBAC9B,kBAAC8C,GAAA,EAAM7B,QAAP,KACI,kBAACjF,EAAA,EAAD,KACI,kBAACiC,EAAA,EAAD,KACI,kBAACA,EAAA,EAAK2B,IAAN,KACI,kBAAC3B,EAAA,EAAKE,OAAN,KACI,kBAAClC,EAAA,EAAD,CAAQgB,UAAU,SAASpC,GAAG,KAAKI,MAAI,GACnC,kBAACQ,EAAA,EAAD,CAAMrE,KAAK,gBACVhG,EAAKuC,UAFV,IAEsBvC,EAAKwC,UAE3B,kBAACqZ,GAAA,EAAD,CACIC,aAAW,EACXC,QAAM,EACNC,YAAU,EACVC,SAAO,EACPC,YAAU,GAEV,kBAACL,GAAA,EAAMM,KAAP,KACI,kBAACN,GAAA,EAAMrN,IAAP,KACI,kBAACqN,GAAA,EAAMO,KAAP,CAAYnP,MAAO,GAAnB,YACA,kBAAC4O,GAAA,EAAMO,KAAP,KAAapc,EAAKmC,SAEtB,kBAAC0Z,GAAA,EAAMrN,IAAP,KACI,kBAACqN,GAAA,EAAMO,KAAP,eACA,kBAACP,GAAA,EAAMO,KAAP,KAAapc,EAAKyC,QAEtB,kBAACoZ,GAAA,EAAMrN,IAAP,KACI,kBAACqN,GAAA,EAAMO,KAAP,gBACA,kBAACP,GAAA,EAAMO,KAAP,KAAapc,EAAKiD,MAEtB,kBAAC4Y,GAAA,EAAMrN,IAAP,KACI,kBAACqN,GAAA,EAAMO,KAAP,aACA,kBAACP,GAAA,EAAMO,KAAP,KAAapc,EAAK2C,MAEtB,kBAACkZ,GAAA,EAAMrN,IAAP,KACI,kBAACqN,GAAA,EAAMO,KAAP,eACA,kBAACP,GAAA,EAAMO,KAAP,KAAapc,EAAKd,eASlD,kBAACwS,GAAA,EAAMO,QAAP,KACI,kBAACpF,EAAA,EAAD,KACI,kBAACA,EAAA,EAAK2B,IAAN,KACI,kBAAC3B,EAAA,EAAKE,OAAN,KACA,kBAACR,EAAA,EAAD,CACIqC,QAAQ,QACRhD,MAAM,OACNtB,KAAK,QACL8E,QAAQ,OACR9G,QAAS,kBAAI,EAAKiG,WAAW,WAEjC,kBAAChC,EAAA,EAAD,CACI1C,KAAK,OACLsF,cAAc,OACdP,QAAQ,OACRtE,KAAK,QACL8E,QAAQ,QACR8C,UAAQ,EACR5J,QAAS,WACL,EAAKoH,UAAU,QACf,EAAKnB,WAAW,gBAU5C,OACI,oCACI,kBAAC3D,EAAA,EAAD,KACI,kBAACiC,EAAA,EAAD,CAAMyC,QAAS,GACX,kBAACzC,EAAA,EAAK2B,IAAN,KACI,kBAAC3D,EAAA,EAAD,CAAQpB,GAAG,MAAX,eAEJ,kBAACoD,EAAA,EAAK2B,IAAN,KACI,kBAAC3B,EAAA,EAAKE,OAAN,KACI,kBAACR,EAAA,EAAD,CACIqC,QAAQ,WACR/E,KAAK,MACL+B,MAAM,QACNuD,cAAc,OACdC,QAAQ,QACR9G,QAAS,WACL,EAAKoH,UAAU,iBAQvC,kBAACF,GAAA,EAAD,CAAS2C,YAAU,GACnB,kBAACtH,EAAA,EAAD,CAAQpB,GAAG,MAAM9H,EAAjB,YAEI,kBAACyQ,GAAA,EAAD,CAAQ7M,QAAQiB,EAAsB4C,UAAQ,GAC9C,kBAACiJ,GAAA,EAAD,YAEOyC,IAAVtO,GAAwC,IAAjBA,EAAMzE,OAE1B,kBAACgK,EAAA,EAAD,CAASO,aAAW,GAChB,kBAACzB,EAAA,EAAD,CAAQhB,MAAI,GACV,kBAACQ,EAAA,EAAD,CAAMrE,KAAK,QAAQsE,KAAK,UACxB,wEAKN,kBAACM,EAAA,EAAD,KACA,kBAACiC,EAAA,EAAD,KACI,kBAACA,EAAA,EAAK2B,IAAN,KACI,kBAAC3B,EAAA,EAAKE,OAAN,KACA,kBAAC8O,GAAA,EAAD,CACIE,QAAM,EACND,aAAW,GAEX,kBAACD,GAAA,EAAMhR,OAAP,KACI,kBAACgR,GAAA,EAAMrN,IAAP,KACI,kBAACqN,GAAA,EAAMQ,WAAP,oBACA,kBAACR,GAAA,EAAMQ,WAAP,oBACA,kBAACR,GAAA,EAAMQ,WAAP,oBACA,kBAACR,GAAA,EAAMQ,WAAP,mBACA,kBAACR,GAAA,EAAMQ,WAAP,uBAGR,kBAACR,GAAA,EAAMM,KAAP,KACK3V,EAAM7J,KAAI,SAACqD,EAAMuS,GAAP,OACN,kBAACsJ,GAAA,EAAMrN,IAAP,CAAWpN,IAAKmR,GACb,kBAACsJ,GAAA,EAAMO,KAAP,KAAapc,EAAKuC,WAClB,kBAACsZ,GAAA,EAAMO,KAAP,KAAapc,EAAKwC,UAClB,kBAACqZ,GAAA,EAAMO,KAAP,KAAapc,EAAKyC,OAClB,kBAACoZ,GAAA,EAAMO,KAAP,CAAYE,YAAU,EAACzQ,UAAU,UAC7B,kBAACU,EAAA,EAAD,CACIX,MAAM,OACN/B,KAAO,OACPvB,QAAY,WACR,EAAKiD,SAAS,CAACgQ,aAAcvb,IAC7B,EAAKuL,SAAS,CAAC6P,eAAe,QAI1C,kBAACS,GAAA,EAAMO,KAAP,CAAYE,YAAU,EAACzQ,UAAU,UAC7B,kBAACU,EAAA,EAAD,CACIX,MAAM,MACN6H,UAAQ,EACR5J,KAAO,SACPvB,QAAS,oBAAA7H,EAAAC,OAAA,gDACL8C,EAAW7B,EAAc3B,EAAKmC,QAAQ/B,MAAK,WACvCyU,OAFC,mDAiB5C4G,EACAG,EACAD,O,GAzROxd,aAiSTsK,MADG,SAAAK,GAAQ,QAAMA,IACjBL,CAA6B0S,ICjStCoB,G,YACJ,WAAYne,GAAQ,IAAD,8BACf,4CAAMA,KACD6J,MAAQ,CACTa,SAAU,MAHC,E,iFAME,IAAD,OAEhBnC,KAAKvI,MAAME,SAASc,KAAKyJ,oBAAmB,SAAAC,GACpCA,EACM,EAAKyC,SAAS,CAAEzC,aAChB,EAAKyC,SAAS,CAAEzC,SAAU,Y,6CAMxCnC,KAAKiC,a,+BAIL,OACI,kBAAC,EAAgB4T,SAAjB,CAA0Bjb,MAAOoF,KAAKsB,MAAMa,UACxC,kBAAC,IAAD,KACI,6BACI,kBAAC,EAAD,CAAYA,SAAUnC,KAAKsB,MAAMa,WACjC,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO2T,OAAK,EAACjc,K5BlDhB,I4BkDsCkc,UAAWC,IAC9C,kBAAC,IAAD,CAAOnc,K5BlDV,U4BkDgCkc,UAAW9P,IACxC,kBAAC,IAAD,CAAOpM,K5BlDV,U4BkDgCkc,UAAW7O,KACxC,kBAAC,IAAD,CAAOrN,K5BhDF,a4BgDgCkc,UAAWrP,IAChD,kBAAC,IAAD,CAAO7M,KAAMoJ,EAAa8S,UAAWlK,KACrC,kBAAC,IAAD,CAAOhS,K5BnDV,W4BmDgCkc,UAAWhK,KACxC,kBAAC,IAAD,CAAOlS,K5BlDP,c4BkDgCkc,UAAWpC,KAC3C,kBAAC,IAAD,CAAO9Z,K5BlDV,W4BkDgCkc,UAAW9F,KACxC,kBAAC,IAAD,CAAOpW,K5BlDR,a4BkDgCkc,UAAWvB,a,GApClDhd,aA8CHD,KAAaqe,ICxD5BK,IAASC,OACL,kBAAC,EAAgBL,SAAjB,CAA0Bjb,MAAO,IAAIvC,GACnC,kBAAC,GAAD,OAEFsU,SAASC,eAAe,SlCmHtB,kBAAmBuJ,WACrBA,UAAUC,cAAcC,MAAM5c,MAAK,SAAA6c,GACjCA,EAAaC,kB","file":"static/js/main.18c97b3e.chunk.js","sourcesContent":["var map = {\n\t\"./ca-ES.json\": 435,\n\t\"./de-DE.json\": 436,\n\t\"./en-US.json\": 247,\n\t\"./es-ES.json\": 437,\n\t\"./fi-FI.json\": 438,\n\t\"./fr-FR.json\": 439,\n\t\"./he-IL.json\": 440,\n\t\"./it-IT.json\": 441,\n\t\"./ja-JP.json\": 442,\n\t\"./no-NB.json\": 443,\n\t\"./pl-PL.json\": 444,\n\t\"./pt-BR.json\": 445,\n\t\"./ru-RU.json\": 446,\n\t\"./sv-SE.json\": 447,\n\t\"./tr-TR.json\": 448,\n\t\"./zh-CN.json\": 449\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 434;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n    <FirebaseContext.Consumer>\n      {firebase => <Component {...props} firebase={firebase} />}\n    </FirebaseContext.Consumer>\n  );\n\nexport default FirebaseContext;","import app from 'firebase/app'\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/storage';\nimport image from \"react-firebase-file-uploader/lib/utils/image\";\n\nconst config = {\n    apiKey: \"AIzaSyCz5H3RlwJowAPSAXi9Lvcc2oyPmLBeuIg\",\n    authDomain: \"cis4914-40936.firebaseapp.com\",\n    databaseURL: \"https://cis4914-40936.firebaseio.com\",\n    projectId: \"cis4914-40936\",\n    storageBucket: \"cis4914-40936.appspot.com\",\n    messagingSenderId: \"178831665685\",\n    appId: \"1:178831665685:web:3ba1a1b03cdd45c57afc1c\",\n    measurementId: \"G-FYCFPK2QDN\"\n  };\n\n  class Firebase {\n      //Comment\n      constructor() {\n          app.initializeApp(config);\n          this.auth = app.auth();\n          this.db = app.database();\n      }\n\n      //#region AUTH\n\n      doCreateUserWithEmailAndPassword = (email, password) =>\n          this.auth.createUserWithEmailAndPassword(email, password);\n\n      doSignInWithEmailAndPassword = (email, password) =>\n          this.auth.signInWithEmailAndPassword(email, password);\n\n      doSignOut = () => this.auth.signOut();\n\n      doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n      doPasswordUpdate = password =>\n          this.auth.currentUser.updatePassword(password);\n\n      doDeleteUser = () => {\n          var user = this.auth.currentUser;\n          console.log(user);\n          this.auth.signOut();\n\n          user.delete().then(function () {\n              console.log(\"User deleted.\");\n          }).catch(function (error) {\n              console.log(\"Error deleting user.\")\n          });\n      };\n\n      //endregion\n\n      //#region DATA\n\n      /**\n       * @param path\n       * @param filter: If filter is passed only fields in the filter will be returned\n       * @returns {Promise<[]>}: array with data\n       */\n      getElementsInPath = async (path, filter = null) => {\n          var data = [];\n          var ref = this.db.ref(path);\n          var snapshot = await ref.once('value');\n\n          if(filter != null) {\n              snapshot.forEach(s => {\n                  if(filter.includes(s.key)) {\n                      data.push({\n                          uid: s.key,\n                          value: s.val()\n                      })\n                  }\n              });\n          }\n          else {\n              snapshot.forEach(function (childSnapshot) {\n                  data.push({\n                      uid: childSnapshot.key,\n                      value: childSnapshot.val()\n                  });\n              });\n          }\n          return data;\n      }\n\n      //#region IMAGES\n\n      getImages(organization, userID) {\n\n          var data = [];\n          var listRef = app.storage().ref().child('images/' + organization + '/' + userID + '/');\n\n          // Find all the prefixes and items.\n          listRef.listAll().then(function (res) {\n              res.items.forEach(function (itemRef) {\n                  // All the items under listRef.\n                  data.push(itemRef.getDownloadURL());\n\n              });\n          }).catch(function (error) {\n              console.log(\"Unable to load image set\");\n          });\n          return data;\n      }\n\n      uploadImage(organization, userID, imageBlob) {\n          var storageRef = app.storage().ref();\n          // File or Blob named mountains.jpg\n          var file = imageBlob;\n          var metadata = {\n              contentType: 'image/jpeg'\n          };\n          // Upload file and metadata to the object 'images/mountains.jpg'\n          let fileName = Date.now() + '.jpeg';\n          var uploadTask = storageRef.child('images/' + organization + '/' + userID + '/' + fileName).put(file, metadata);\n\n          // Listen for state changes, errors, and completion of the upload.\n          uploadTask.on(app.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\n              function (snapshot) {\n                  // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n                  var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                  console.log('Upload is ' + progress + '% done');\n                  switch (snapshot.state) {\n                      case app.storage.TaskState.PAUSED: // or 'paused'\n                          console.log('Upload is paused');\n                          break;\n                      case app.storage.TaskState.RUNNING: // or 'running'\n                          console.log('Upload is running');\n                          break;\n                  }\n              }, function (error) {\n                  // https://firebase.google.com/docs/storage/web/handle-errors\n                  switch (error.code) {\n                      case 'storage/unauthorized':\n                          console.log(\"Error uploading: unauthorized \");\n                          break;\n                      case 'storage/canceled':\n                          console.log(\"Error uploading: canceled \");\n                          break;\n                      case 'storage/unknown':\n                          console.log(\"Error uploading: unknown\");\n                          break;\n                  }\n              }, function () {\n                  uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL) {\n                      console.log('File available at', downloadURL);\n                  });\n              });\n      }\n\n      //#endregion\n\n      //#region USERS\n\n      getAllUsersDescriptions = async (organization) => {\n          const path = 'organizations/' + organization + '/users/';\n          const tempElement = await this.getElementsInPath(path);\n          var userDesciptors = [];\n          for(var i=0; i < tempElement.length; i++) {\n              const user = tempElement[i];\n              const element = {\n                  userID: user.uid,\n                  userInfo: await this.getUserInformation(organization, user.uid),\n                  descriptors: await this.getDescriptors(organization, user.uid)\n              }\n              userDesciptors.push(element);\n          }\n          return userDesciptors;\n      }\n\n      addUser = async (organization, userID, firstName, lastName, email, level, gender, age) => {\n          const path = 'organizations/' + organization + '/users/' + userID +'/';\n          if( await this.checkIfUserExist(organization,userID)) {\n              return false;\n          }\n          else {\n              await this.setUserDatabaseInformation(path, firstName, lastName, email, level, gender, age);\n              return true;\n          }\n      }\n\n      updateUser = async (organization, userID, firstName, lastName, email, level, gender, age) => {\n          const path = 'organizations/' + organization + '/users/' + userID +'/';\n          await this.setUserDatabaseInformation(path, firstName, lastName, email, level, gender, age);\n          return true;\n\n      }\n      setUserDatabaseInformation = async (path, firstName, lastName, email, level, gender, age) => {\n          await this.db.ref(path+'age').set(age);\n          await this.db.ref(path+'email').set(email);\n          await this.db.ref(path+'firstName').set(firstName);\n          await this.db.ref(path+'lastName').set(lastName);\n          await this.db.ref(path+'level').set(level);\n          await this.db.ref(path+'sex').set(gender);\n      }\n\n      getUserInformation = async (organization, userID) => {\n          const path = 'organizations/' + organization + '/users/' + userID + '/';\n          var userInformation = {\n              'email':'',\n              'firstName':'',\n              'lastName':'',\n              'age':0,\n              'level':0,\n              'sex':''\n          };\n          const filter = ['email','firstName','lastName','age','level','sex'];\n          const tempElement = await this.getElementsInPath(path, filter);\n          if(tempElement == null || tempElement.length == 0) { return null; }\n          userInformation.age = tempElement[0].value;\n          userInformation.email = tempElement[1].value;\n          userInformation.firstName = tempElement[2].value;\n          userInformation.lastName = tempElement[3].value;\n          userInformation.level = tempElement[4].value;\n          userInformation.sex = tempElement[5].value;\n\n          return userInformation;\n      }\n\n      markUserAttendance = async (organization, eventID, userID) => {\n          const path = 'organizations/' + organization + '/events/' + eventID + '/usersAttended/';\n          const tempElement = await this.getElementsInPath(path);\n          var timeStampIfRegistered = null;\n          for(var i = 0; i < tempElement.length; i++) {\n              let u = tempElement[i];\n              if(u.uid === userID) {\n                  timeStampIfRegistered = u.value;\n                  break;\n              }\n          }\n          if(timeStampIfRegistered != null) {\n              return timeStampIfRegistered;\n          }\n          else {\n              this.db.ref(path+userID).set(Date.now());\n          }\n      }\n\n      deleteUser = async (organization, userID) => {\n          const path = 'organizations/' + organization + '/users/' + userID + '/';\n          this.db.ref(path).remove();\n      }\n\n      getUsersPreview = async (organization) => {\n          var userResults = [];\n          const path = 'organizations/' + organization + '/users/';\n          const tempElement = await this.getElementsInPath(path);\n\n          for(var i=0; i < tempElement.length; i++) {\n              var userInformation = {\n                  'firstName':'',\n                  'lastName':'',\n                  'level':'',\n                  'email':'',\n                  'userID':'',\n                  'age':'',\n                  'sex':''\n              };\n              userInformation.firstName = tempElement[i].value.firstName;\n              userInformation.lastName = tempElement[i].value.lastName;\n              userInformation.level = tempElement[i].value.level;\n              userInformation.email = tempElement[i].value.email;\n              userInformation.userID = tempElement[i].uid;\n              userInformation.age = tempElement[i].value.age;\n              userInformation.sex = tempElement[i].value.sex;\n              userResults.push(userInformation);\n          }\n          return userResults;\n      }\n\n      deleteUsersDescriptors = async (organization, userID) => {\n          const path = 'organizations/' + organization + '/users/' + userID + '/descriptors/';\n          this.db.ref(path).remove();\n      }\n\n      getDescriptorsAVG = async (descriptors) => {\n          var avg = [];\n          for(var i = 0; i < descriptors[0].length; i++) {\n              var iAVG = 0;\n              for(var j = 0; j < descriptors.length; j++) {\n                  iAVG += descriptors[j][i];\n              }\n              iAVG /= descriptors.length;\n              avg.push(iAVG);\n          }\n          return avg;\n      }\n\n      getDescriptors = async (organization, userID) => {\n          const path = 'organizations/' + organization + '/users/' + userID + '/descriptors/';\n          const tempDescriptors = await this.getElementsInPath(path);\n          var descriptors = [];\n          for (var i = 0; i < tempDescriptors.length; i++) {\n              let d = tempDescriptors[i];\n              descriptors.push(d.value.value);\n          }\n\n          if(descriptors.length === 0) {\n              return descriptors;\n          }\n\n          descriptors = [Float32Array.from(await this.getDescriptorsAVG(descriptors))];\n          return descriptors;\n      };\n\n      insertDescriptor = (organization, userID, descriptor) => {\n          this.db.ref('organizations/' + organization + '/users/' + userID + '/descriptors/').push({\n              date: Date.now(),\n              value: descriptor,\n          });\n      };\n\n      checkIfUserExist = async (organization, userID) => {\n          const path = 'organizations/'+organization+'/users/';\n          const tempElement = await this.getElementsInPath(path);\n          var found = false;\n          for(var i = 0; i < tempElement.length; i++) {\n              if(tempElement[i].uid === userID) {\n                  found = true;\n                  break;\n              }\n          }\n          return found;\n      }\n\n      getUserAttendaceReport = async (organization, eventID) => {\n          const path = 'organizations/' + organization + '/events/' + eventID + '/usersAttended/';\n          const tempElement = await this.getElementsInPath(path);\n          return tempElement;\n      }\n\n      //#endregion\n\n      //#region EVENTS\n\n      addEvent = async (organization, eventID, eventName, minimumLevel, allowedusers, notAllowedUsers, description, eventDate, passcode) => {\n          const path = 'organizations/' + organization + '/events/' + eventID +'/';\n          if( await this.checkIfEventExist(organization,eventID)) {\n              return false;\n          }\n          else {\n              await this.setEventDatabaseInformation(path, eventName, minimumLevel, allowedusers, notAllowedUsers, description, eventDate, passcode);\n\n              return true;\n          }\n      }\n\n      updateEvent = async (organization, eventID, eventName, minimumLevel, allowedusers, notAllowedUsers, description, eventDate, passcode) => {\n          const path = 'organizations/' + organization + '/events/' + eventID +'/';\n          await this.setEventDatabaseInformation(path, eventName, minimumLevel, allowedusers, notAllowedUsers, description, eventDate, passcode);\n          return true;\n\n      }\n      setEventDatabaseInformation = async (path, eventName, minimumLevel, allowedusers, notAllowedUsers, description, eventDate, passcode) => {\n          await this.db.ref(path+'name').set(eventName);\n          await this.db.ref(path+'minimumLevel').set(minimumLevel);\n          await this.db.ref(path+'allowedUsers').set(allowedusers);\n          await this.db.ref(path+'notAllowedUsers').set(notAllowedUsers);\n          await this.db.ref(path+'description').set(description);\n          await this.db.ref(path+'eventDate').set(eventDate);\n          await this.db.ref(path+'passcode').set(passcode);\n          await this.db.ref(path+'active').set(false);\n      }\n\n      loginIntoEvent = async (organization, eventID, passcode) => {\n          const path = 'organizations/'+organization+'/events/';\n          const tempElement = await this.getElementsInPath(path);\n          var login = false;\n          for(var i = 0; i < tempElement.length; i++) {\n              if(tempElement[i].uid === eventID) {\n                  if(tempElement[i].value.passcode === passcode && tempElement[i].value.active === true) {\n                      login = true;\n                  }\n                  else {\n                      login = false;\n                  }\n                  break;\n              }\n          }\n          return login;\n      }\n\n      getEventInformation = async (organization, eventID) => {\n          const path = 'organizations/' + organization + '/events/' + eventID + '/';\n          var eventInformation = {\n              'allowedUsers':'',\n              'minimumLevel':'',\n              'notAllowedUsers':'',\n          };\n          const filter = ['allowedUsers','minimumLevel','notAllowedUsers'];\n          const tempElement = await this.getElementsInPath(path, filter);\n          eventInformation.allowedUsers = tempElement[0].value;\n          eventInformation.minimumLevel = tempElement[1].value;\n          eventInformation.notAllowedUsers = tempElement[2].value;\n\n          return eventInformation;\n      }\n\n      deleteEvent = async (organization, eventID) => {\n          const path = 'organizations/' + organization + '/events/' + eventID + '/';\n          this.db.ref(path).remove();\n      }\n\n      activateEvent = async (organization, eventID) => {\n          const path = 'organizations/' + organization + '/events/' + eventID + '/active/';\n          this.db.ref(path).set(true);\n      }\n\n      stopEvent = async (organization, eventID) => {\n          const path = 'organizations/' + organization + '/events/' + eventID + '/active/';\n          this.db.ref(path).set(false);\n      }\n\n      getEventsPreview = async (organization) => {\n          var eventResult = [];\n          const path = 'organizations/' + organization + '/events/';\n          const tempElement = await this.getElementsInPath(path);\n\n          for(var i=0; i < tempElement.length; i++) {\n              var eventInformation = {\n                  'active':'',\n                  'eventDate':'',\n                  'minimumLevel':'',\n                  'name':'',\n                  'eventID':'',\n                  'description':''\n              };\n              eventInformation.active = tempElement[i].value.active;\n              eventInformation.eventDate = tempElement[i].value.eventDate;\n              eventInformation.minimumLevel = tempElement[i].value.minimumLevel;\n              eventInformation.name = tempElement[i].value.name;\n              eventInformation.eventID = tempElement[i].uid;\n              eventInformation.description = tempElement[i].value.description;\n              eventInformation.allowedUsers = tempElement[i].value.allowedUsers;\n              eventInformation.notAllowedUsers = tempElement[i].value.notAllowedUsers;\n              eventInformation.passcode = tempElement[i].value.passcode;\n              eventResult.push(eventInformation);\n          }\n          return eventResult;\n      }\n\n      checkIfEventExist = async (organization, eventID) => {\n          const path = 'organizations/'+organization+'/events/';\n          const tempElement = await this.getElementsInPath(path);\n          var found = false;\n          for(var i = 0; i < tempElement.length; i++) {\n              if(tempElement[i].uid === eventID) {\n                  found = true;\n                  break;\n              }\n          }\n          return found;\n      }\n\n      //#endregion\n\n      //#region ORGANIZATIONS\n\n      getOrganization = async () => {\n          var userID = this.auth.currentUser.uid;\n          var admin = await this.getElementsInPath('users/', userID);\n          if(admin != null){\n              return admin[0].value.companyName;\n          }\n          else{\n              return null;\n          }\n      }\n\n      getOrganizationInformation = async () => {\n          var userID = this.auth.currentUser.uid;\n          var admin = await this.getElementsInPath('users/', userID);\n          if(admin != null){\n              return admin[0].value;\n          }\n          else{\n              return null;\n          }\n      }\n\n      deleteOrganizationData = async (organization) => {\n          const path = 'organizations/' + organization + '/';\n          this.db.ref(path).remove();\n      }\n\n      changeOrganizationPasscode = async (organization, passcode) => {\n          await this.db.ref('organizations/'+organization+'/passcode').set(passcode);\n      }\n\n      /*\n       *    1 -> passcode match\n       *    0 -> organization is new\n       *    -1-> passcode does not match\n       */\n      verifyOrganizationPasscode = async (organization, passcode) => {\n          const path = 'organizations/' + organization + '/';\n          const tempElement = await this.getElementsInPath(path);\n          if(tempElement == null || tempElement.length === 0) { return 0; }\n          if(tempElement[0].value == passcode) {\n              return 1;\n          }\n          else {\n              return -1;\n          }\n      }\n\n      //#endregion\n\n      //endregion\n\n      // *** User API ***\n      user = uid => this.db.ref(`users/${uid}`);\n      users = () => this.db.ref('users');\n  }\n  export default Firebase;","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\nexport default Firebase;\nexport { FirebaseContext, withFirebase };","import React from 'react';\nimport { withFirebase } from '../Firebase';\nconst SignOutButton = ({ firebase }) => (\n  <span onClick={firebase.doSignOut}>\n    Sign Out\n  </span>\n);\nexport default withFirebase(SignOutButton);","export const LANDING = '/';\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const HOME = '/home';\nexport const ACCOUNT = '/account';\nexport const PASSWORD_FORGET = '/pw-forget';\nexport const RECOGNIZER = '/recognizer';\nexport const NEWUSER = '/newuser';\nexport const USERPANEL = '/userpanel';","import React from 'react';\nconst AuthUserContext = React.createContext(null);\nexport default AuthUserContext;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n        if (!condition(authUser)) {\n          this.props.history.push(ROUTES.SIGN_IN);\n        }\n      });\n    }\n    componentWillUnmount() {\n      this.listener();\n    }\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {authUser =>\n            condition(authUser) ? <Component {...this.props} /> : null\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n  return compose(\n    withRouter,\n    withFirebase,\n  )(WithAuthorization);\n};\nexport default withAuthorization;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignOutButton from '../SignOut';\nimport * as ROUTES from '../../constants/routes';\n\nimport { AuthUserContext } from '../Session';\n\nimport {\n    Menu,\n    Dropdown,\n    Icon\n} from 'semantic-ui-react';\n\nconst Navigation = () => (\n  <>\n    <AuthUserContext.Consumer>\n      {authUser =>\n        authUser ? <NavigationAuth user={authUser} /> : <NavigationNonAuth />\n      }\n    </AuthUserContext.Consumer>\n  </>\n);\n\nconst NavigationAuth = ({user}) => (\n  <Menu\n  inverted\n  borderless\n  fluid\n  >\n    <Menu.Menu position='left'>\n        <Menu.Item as={Link} to={ROUTES.HOME} icon='home'/>\n    </Menu.Menu>\n    <Menu.Menu position='right'>\n        <Dropdown\n          text={user.email}\n          item\n          floating\n          pointing\n        >\n          <Dropdown.Menu>\n            <Dropdown.Item as={Link} to={ROUTES.ACCOUNT}>Profile</Dropdown.Item>\n            <Dropdown.Item as={Link} to={ROUTES.HOME}>Event Panel</Dropdown.Item>\n            <Dropdown.Item as={Link} to={ROUTES.USERPANEL}>User Panel</Dropdown.Item>\n            <Dropdown.Item>\n              <SignOutButton/>\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n    </Menu.Menu>\n</Menu>\n);\nconst NavigationNonAuth = () => (\n    <Menu\n      inverted\n      borderless\n      fluid\n    >\n        <Menu.Menu position='left'>\n            <Menu.Item as={Link} to={ROUTES.LANDING}>\n            <Icon name='home' size='big'/>\n            </Menu.Item>\n        </Menu.Menu>\n        <Menu.Menu position='right' >\n            <Menu.Item as={Link} to={ROUTES.SIGN_IN}>\n              <Icon name='user' size='big' />\n            </Menu.Item>\n        </Menu.Menu>\n    </Menu>\n);\n\nexport default Navigation;","import React, { Component } from 'react';\nimport {\n    BrowserRouter as Router, Link,\n    Route, Switch,\n} from 'react-router-dom';\nimport * as ROUTES from \"../../constants/routes\";\n\nimport {Container, Header, Responsive} from \"semantic-ui-react\";\n\n\nclass Landing extends Component {\n  render() {\n    return (\n        <div>\n            <Responsive minwidth={768}>\n                <div className=\"masthead masthead-home\">\n                    <div className=\"overlay-home\">\n                        <Container>\n                            <Header as ='h1' className=\"mastead-title\" >CARAS</Header>\n                        </Container>\n                    </div>\n                </div>\n            </Responsive>\n        </div>\n        // <div>\n        //     <div>\n        //         LANDING PAGE\n        //     </div>\n        //     <div>\n        //         <button>\n        //             <Link to={ROUTES.RECOGNIZER}>RECOGNIZER</Link>\n        //         </button>\n        //     </div>\n        // </div>\n    );\n  }\n}\nexport default Landing;","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nimport {Grid, Header, Form, Segment, Button, Container} from 'semantic-ui-react';\nconst SignUpPage = () => (\n    <Grid \n    textAlign='left'\n        centered\n  \t>\n\t\t<Grid.Column verticalAlign='middle' width='6'>\n\t\t\t<SignUpForm />\n\t\t</Grid.Column>\n  \t</Grid>\n);\n\nconst INITIAL_STATE = {\n    name: '',\n    lastName: '',\n    companyName: '',\n    email: '',\n    username: '',\n    passwordOne: '',\n    passwordTwo: '',\n    passcode: '',\n    error: null,\n};\n\nclass SignUpFormBase extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { ...INITIAL_STATE };\n    }\n    onSubmit = (event) => {\n        const { name, lastName, companyName, email, username, passwordOne, passcode } = this.state;\n\n        this.props.firebase\n            .verifyOrganizationPasscode(companyName,passcode)\n            .then(respose => {\n                if(respose == -1) {\n                    alert('Unable to process the organization. Try a different organization name or passcode');\n                }\n                else {\n                    this.props.firebase.changeOrganizationPasscode(companyName,passcode)\n                        .then(()=>{\n                            this.props.firebase\n                                .doCreateUserWithEmailAndPassword(email, passwordOne)\n                                .then(authUser => {\n                                    // Create a user in your Firebase realtime database\n                                    return this.props.firebase\n                                        .user(authUser.user.uid)\n                                        .set({\n                                            name,\n                                            lastName,\n                                            companyName,\n                                            email,\n                                            username,\n                                        });\n                                })\n\n                                .then(() => {\n                                    this.setState({ ...INITIAL_STATE });\n                                    this.props.history.push(ROUTES.HOME);\n                                })\n                                .catch(error => {\n                                    this.setState({ error });\n                                });\n                        })\n                }\n            });\n\n        /*\n        this.props.firebase\n            .doCreateUserWithEmailAndPassword(email, passwordOne)\n            .then(authUser => {\n                // Create a user in your Firebase realtime database\n                return this.props.firebase\n                    .user(authUser.user.uid)\n                    .set({\n                        name,\n                        lastName,\n                        companyName,\n                        email,\n                        username,\n                    });\n            })\n\n            .then(() => {\n                this.setState({ ...INITIAL_STATE });\n                this.props.history.push(ROUTES.HOME);\n            })\n            .catch(error => {\n                this.setState({ error });\n            });\n        */\n\n        event.preventDefault();\n    }\n    onChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n\n    render() {\n        const {\n            name,\n            lastName,\n            companyName,\n            email,\n            username,\n            passcode,\n            passwordOne,\n            passwordTwo,\n            error,\n        } = this.state;\n\n        const isInvalid =\n            passwordOne !== passwordTwo ||\n            passwordOne === '' ||\n            email === '' ||\n            username === '' ||\n            passcode === '' ||\n            name === '' ||\n            lastName === '' ||\n            companyName === '';\n\n        return (\n            <>\n                <Header as ='h2' color ='teal' textAlign = 'center'>Sign Up</Header>\n                <Form size = \"large\" onSubmit={this.onSubmit} >\n                    <Segment fluid stacked>\n                        <Form.Group>\n                            <Form.Input\n                                name = 'name'\n                                label = 'First Name'\n                                value = {name}\n                                type = 'text'\n                                onChange = {this.onChange}\n                            />\n                            <Form.Input\n                                name = 'lastName'\n                                label = 'Last Name'\n                                value = {lastName}\n                                type = 'text'\n                                onChange = {this.onChange}\n                            />\n                        </Form.Group>  \n                        <Form.Input\n                            name = 'companyName'\n                            label = 'Company'\n                            icon = 'building'\n                            value = {companyName}\n                            type = 'text'\n                            onChange = {this.onChange}\n                            iconPosition = 'left'\n                        />\n                        <Form.Input\n                            name = 'username'\n                            label = 'Username'\n                            icon = 'user'\n                            value = {username}\n                            type = 'text'\n                            onChange = {this.onChange}\n                            iconPosition = 'left'\n                            placeholder = 'username'\n                        />\n                        <Form.Input\n                            label = 'Email'\n                            name = 'email'\n                            icon = 'mail'\n                            value = {email}\n                            type = 'text'\n                            onChange = {this.onChange}\n                            iconPosition = 'left'\n                            placeholder = 'email@host.com'\n                        />\n                        <Form.Input\n                            icon = 'lock'\n                            name = 'passcode'\n                            label = 'Passcode'\n                            value = {passcode}\n                            iconPosition = 'left'\n                            onChange = {this.onChange}\n                            placeholder  = 'Passcode'\n                            type = 'password'\n                        />\n                        <Form.Input\n                            icon = 'lock'\n                            name = 'passwordOne'\n                            label = 'Password'\n                            value = {passwordOne}\n                            iconPosition = 'left'\n                            onChange = {this.onChange}\n                            placeholder  = 'Password'\n                            type = 'password'\n                        />\n                        <Form.Input\n                            icon = 'lock'\n                            name = 'passwordTwo'\n                            value = {passwordTwo}\n                            label = 'Confirm Password'\n                            iconPosition = 'left'\n                            onChange = {this.onChange}\n                            placeholder  = 'Confirm Password'\n                            type = 'password'\n                        />\n                    </Segment>\n                    <Button \n                        color = 'teal'\n                        fluid\n                        disabled = {isInvalid}\n                        type = 'submit'\n                        size = 'large'\n                    >Sign Up</Button>\n                    {error && <p>{error.message}</p>}\n                </Form>\n                </>\n        );\n    }\n}\nconst SignUpLink = () => (\n    <p>\n        Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n    </p>\n);\n\nconst SignUpForm = compose(\n    withRouter,\n    withFirebase,\n)(SignUpFormBase);\n\nexport default SignUpPage;\nexport { SignUpForm, SignUpLink };","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\n\nimport { \n\tGrid,\n\tHeader,\n\tForm,\n\tSegment,\n\tButton\n} from 'semantic-ui-react';\n\nconst PasswordForgetPage = () => (\n  <Grid \n    verticalAlign = 'middle'\n    textAlign = 'center'\n  >\n    <Grid.Column  \n    verticalAlign = 'middle'\n    style={{ maxWidth: 450 }}\n    >\n      <PasswordForgetForm />\n    </Grid.Column>\n  </Grid> \n);\nconst INITIAL_STATE = {\n  email: '',\n  error: null,\n};\nclass PasswordForgetFormBase extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n  onSubmit = event => {\n    const { email } = this.state;\n    this.props.firebase\n      .doPasswordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    event.preventDefault();\n  };\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  render() {\n    const { email, error } = this.state;\n    const isInvalid = email === '';\n\n    return (\n\t\t<>\n    \t\t<Header as ='h2' color ='teal' textAlign = 'center'>Password Reset</Header>\n    \t\t<Form size = 'small' onSubmit={this.onSubmit} >\n    \t\t    <Segment stacked>\n    \t\t      <Form.Input\n\t\t\t\t\t\t    fuid\n                name = 'email'\n                label = 'Email'\n\t\t\t\t\t\t    icon = 'user'\n\t\t\t\t\t\t    value = {email}\n    \t\t        type = 'text'\n    \t\t        onChange = {this.onChange}\n    \t\t        iconPosition = 'left'\n    \t\t        placeholder = 'email@host.com'\n    \t\t      />\n    \t\t    </Segment>\n            <Button \n    \t\t      color = 'teal'\n\t\t\t\t\t\t  fluid\n\t\t\t\t\t\t  disabled = {isInvalid}\n    \t\t      type = 'submit'\n    \t\t      size = 'large'\n    \t\t    >Reset My Password</Button>\n    \t\t    {error && <p>{error.message}</p>}\n    \t\t</Form>\n\t\t</>\n    );\n  }\n}\nconst PasswordForgetLink = () => (\n  <p>\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n  </p>\n);\nexport default PasswordForgetPage;\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\nexport { PasswordForgetForm, PasswordForgetLink };","import React from 'react';\nimport { \n    Button, \n    Form, \n    Header, \n    Segment, \n    Message\n} from 'semantic-ui-react';\n\nexport default function LoginForm({onChange, onSubmit, email, password, errors, isInvalid}) {\n    return (\n        <>\n        <Header as ='h2' color ='teal' textAlign = 'center'>Sign in</Header>\n        <Form size = 'small' onSubmit={onSubmit} >\n            <Segment stacked>\n                <Form.Input\n                    fuid\n                    icon = 'user'\n                    name = 'email'\n                    type = 'text'\n                    value = {email}\n                    onChange = {onChange}\n                    iconPosition = 'left'\n                    placeholder = 'email@host.com'\n                />\n                <Form.Input\n                    fluid = 'true'\n                    icon = 'lock'\n                    name = 'password'\n                    value = {password}\n                    iconPosition = 'left'\n                    onChange = {onChange}\n                    placeholder  = 'password'\n                    type = 'password'\n                />\n            </Segment>\n            <Button \n                color = 'teal'\n                fluid\n                disabled = {isInvalid}\n                type = 'submit'\n                size = 'large'\n            >Login</Button>\n            {/* {errors && <Message\n                            error\n                        >{errors.message}</Message>} */}\n            {errors && <p>{errors.message}</p>}\n        </Form>\n        </>\n    );\n};","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { SignUpLink } from '../SignUp';\nimport { PasswordForgetLink } from '../PasswordForget';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nimport LoginForm from '../../UIComponents/loginForm';\n\nimport { Grid, Message } from 'semantic-ui-react';\n\nconst SignInPage = () => (\n  <Grid \n    textAlign = 'center'\n    verticalAlign = 'middle'\n  >\n    <Grid.Column style={{ maxWidth: 450 }}>\n      <SignInForm />\n      <Message>\n        <PasswordForgetLink />\n        <SignUpLink />\n      </Message>\n    </Grid.Column>\n  </Grid>\n);\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null,\n};\n\nclass SignInFormBase extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n  onSubmit = event => {\n    console.log(\"On submit called\");\n    const { email, password } = this.state;\n    this.props.firebase\n      .doSignInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n        console.log(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    event.preventDefault();\n  };\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {    \n    const { email, password, error } = this.state;\n    const isInvalid = password === '' || email === '';\n\n    return (\n      <>\n      <LoginForm\n        onChange = {this.onChange}\n        onSubmit = {this.onSubmit}\n        email = {email}\n        password = {password}\n        errors = {error}\n        isInvalid = {isInvalid}\n      />\n      </>\n      // <SignInPage email = {this.state.email} password = {this.state.password} onSubmit = {this.onSubmit} onChange = {this.onChange}/>\n      // <form onSubmit={this.onSubmit}>\n      //   <input\n      //     name=\"email\"\n      //     value={email}\n      //     onChange={this.onChange}\n      //     type=\"text\"\n      //     placeholder=\"Email Address\"\n      //   />\n      //   <input\n      //     name=\"password\"\n      //     value={password}\n      //     onChange={this.onChange}\n      //     type=\"password\"\n      //     placeholder=\"Password\"\n      //   />\n      //   <button disabled={isInvalid} type=\"submit\">\n      //     Sign In\n      //   </button>\n      //   {error && <p>{error.message}</p>}\n      // </form>\n    //   <Container component=\"main\" maxWidth=\"xs\">\n    //   <CssBaseline />\n    //   <div >\n    //     {/* <Avatar className={classes.avatar}>\n    //       <LockOutlinedIcon />\n    //     </Avatar> */}\n    //     <Typography align=\"center\" component=\"h1\" variant=\"h5\">\n    //       Sign in\n    //     </Typography>\n    //     <form  noValidate onSubmit = {this.onSubmit}>\n    //       <TextField\n    //         variant=\"outlined\"\n    //         margin=\"normal\"\n    //         required\n    //         fullWidth\n    //         id=\"email\"\n    //         value={this.email}\n    //         onChange={this.onChange}\n    //         label=\"Email Address\"\n    //         name=\"email\"\n    //         autoComplete=\"email\"\n    //         autoFocus\n    //       />\n    //       <TextField\n    //         variant=\"outlined\"\n    //         margin=\"normal\"\n    //         required\n    //         fullWidth\n    //         name=\"password\"\n    //         label=\"Password\"\n    //         type=\"password\"\n    //         id=\"password\"\n    //         value={this.password}\n    //         onChange={this.onChange}\n    //         autoComplete=\"current-password\"\n    //       />\n    //       <FormControlLabel\n    //         control={<Checkbox value=\"remember\" color=\"primary\" />}\n    //         label=\"Remember me\"\n    //       />\n    //       <Button\n    //         type=\"submit\"\n    //         fullWidth\n    //         variant=\"contained\"\n    //         color=\"primary\"\n    //         // className={classes.submit}\n    //       >\n    //         Sign In\n    //       </Button>\n    //       <Grid container>\n    //         <Grid item xs>\n    //           <Link href=\"#\" variant=\"body2\">\n    //             Forgot password?\n    //           </Link>\n    //         </Grid>\n    //         <Grid item>\n    //           <Link href=\"#\" variant=\"body2\">\n    //             {\"Don't have an account? Sign Up\"}\n    //           </Link>\n    //         </Grid>\n    //       </Grid>\n    //     </form>\n    //   </div>\n    //   <Box mt={8}>\n    //   <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n    //   {'Copyright © '}\n    //   <Link color=\"inherit\" href=\"https://material-ui.com/\">\n    //     Your Website\n    //   </Link>{' '}\n    //   {new Date().getFullYear()}\n    //   {'.'}\n    // </Typography>\n    //   </Box>\n    // </Container>\n    );\n  }\n}\nconst SignInForm = compose(\n  withRouter,\n  withFirebase,\n)(SignInFormBase);\n\nexport default SignInPage;\nexport { SignInForm };","export const genderOptions = [\n    {\n      key: \"ma\",\n      value: \"male\",\n      text: \"Male\"\n    },\n    {\n      key: \"fe\",\n      value: \"female\",\n      text: \"Female\"\n    }\n  ];\n  \n  export const levelOptions = [\n    {\n      key: \"1\",\n      text: \"1\",\n      value: \"1\"\n    },\n    {\n      key: \"2\",\n      text: \"2\",\n      value: \"2\"\n    },\n    {\n      key: \"3\",\n      text: \"3\",\n      value: \"3\"\n    },\n    {\n      key: \"4\",\n      text: \"4\",\n      value: \"4\"\n    },\n    {\n      key: \"5\",\n      text: \"5\",\n      value: \"5\"\n    }\n  ];\n  ","export const onlyAlphaNumValues = (data) => {\n    var regex = (/^[A-Za-z0-9]+$/);\n    return (regex.test(data));\n};\n\nexport const onlyNumericValues = (data) => {\n    var regex = (/^[\\d]*$/);\n    return (regex.test(data));\n};\n\nexport const validEmail = (data) => {\n    var regex = (/^[\\w]{1,25}@[\\w]+[(.com)]+/);\n    return (regex.test(data));\n};","import React from \"react\";\nimport { withFirebase } from '../components/Firebase';\nimport { AuthUserContext, withAuthorization } from '../components/Session';\n\nimport { Container, Grid, Form, Button } from \"semantic-ui-react\";\nimport { genderOptions, levelOptions } from \"../util/options\";\nimport SemanticDatepicker from 'react-semantic-ui-datepickers';\nimport { onlyNumericValues} from \"../util/validators\";\n\n\nclass EditEventForm extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tid: this.props.event.eventID,\n\t\t\tname: this.props.event.name,\n\t\t\tlevel: this.props.event.minimumLevel,\n\t\t\tallowedUsers: this.props.event.allowedUsers,\n\t\t\tnotAllowedUsers: this.props.event.notAllowedUsers,\n\t\t\tdescription: this.props.event.description,\n\t\t\tdate: this.props.event.eventDate,\n\t\t\tcode: this.props.event.passcode\n\t\t};\n\t\tconsole.log(this.props.event);\n\t}\n\n\tonChange = async (event, { name, value }) => {\n\t\tthis.setState({\n\t\t\t...this.state.values,\n\t\t\t[name]: value\n\t\t});\n\t};\n\n\tonSubmit = async (event) => {\n\t\tconst {\n\t\t\tid,\n\t\t\tname,\n\t\t\tlevel,\n\t\t\tallowedUsers,\n\t\t\tnotAllowedUsers,\n\t\t\tdescription,\n\t\t\tdate,\n\t\t\tcode\n\t\t} = this.state;\n\n\t\tconst {organization, updateEvents, closeModal, firebase} = this.props;\n\t\tconst eventAdded = await firebase.updateEvent(\n\t\t\torganization,\n\t\t\tid,\n\t\t\tname,\n\t\t\tlevel,\n\t\t\tallowedUsers,\n\t\t\tnotAllowedUsers,\n\t\t\tdescription,\n\t\t\tdate,\n\t\t\tcode\n\t\t\t);\n\t\tif (!eventAdded) {\n\t\t\talert(\"Event could not be updated\");\n\t\t\treturn;\n\t\t}\n\t\tupdateEvents();\n\t\tcloseModal();\n\t\t\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tname,\n\t\t\tlevel,\n\t\t\tallowedUsers,\n\t\t\tnotAllowedUsers,\n\t\t\tdescription,\n\t\t\tdate,\n\t\t\tcode\n\t\t} = this.state;\n\n\t\tconst {closeModal} = this.props;\n\t\t\n\t\treturn (\n\t\t\t<Grid>\n\t\t\t\t<Grid.Row>\n\t\t\t\t\t<Grid.Column>\n\t\t\t\t\t\t\t<Form\n\t\t\t\t\t\t\t\tonSubmit={this.onSubmit}\n\t\t\t\t\t\t\t\tsize='large'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Form.Group widths='equal'>\n\t\t\t\t\t\t\t\t\t<Form.Input\n\t\t\t\t\t\t\t\t\t\tfluid\n\t\t\t\t\t\t\t\t\t\tlabel=\"Event Name\"\n\t\t\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\twidth={12}\n\t\t\t\t\t\t\t\t\t\tmaxLength=\"25\"\n\t\t\t\t\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Form.Field\n\t\t\t\t\t\t\t\t\t\tcontent={\n\t\t\t\t\t\t\t\t\t\t\t<SemanticDatepicker \n\t\t\t\t\t\t\t\t\t\t\t\tname=\"date\" \n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Start Date\"\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder={date}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(param, data) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t/* Convert the date object to a string. Locale means that the format of the string will\n\t\t\t\t\t\t\t\t\t\t\t\t\t * be in accordance to the region using the application.\n\t\t\t\t\t\t\t\t\t\t\t\t\t * For the use it will be MM/DD/YYYY\n\t\t\t\t\t\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst tempData = {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: data.name,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: data.value.toLocaleDateString()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.onChange(param, tempData);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tcatch (e) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst tempData = {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: data.name,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: ''\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.onChange(param, tempData);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t\t\t<Form.Select\n\t\t\t\t\t\t\t\t\t\tfluid\n\t\t\t\t\t\t\t\t\t\tlabel=\"Level\"\n\t\t\t\t\t\t\t\t\t\tname=\"level\"\n\t\t\t\t\t\t\t\t\t\twidth={3}\n\t\t\t\t\t\t\t\t\t\tvalue={level}\n\t\t\t\t\t\t\t\t\t\toptions={levelOptions}\n\t\t\t\t\t\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Form.Input\n\t\t\t\t\t\t\t\t\t\tfluid\n\t\t\t\t\t\t\t\t\t\tlabel=\"Allowed Users\"\n\t\t\t\t\t\t\t\t\t\tname=\"allowedUsers\"\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\twidth={8}\n\t\t\t\t\t\t\t\t\t\tvalue={allowedUsers}\n\t\t\t\t\t\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Form.Input\n\t\t\t\t\t\t\t\t\t\tfluid\n\t\t\t\t\t\t\t\t\t\tlabel=\"Not Allowed Users\"\n\t\t\t\t\t\t\t\t\t\tname=\"notAllowedUsers\"\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\twidth={8}\n\t\t\t\t\t\t\t\t\t\tvalue={notAllowedUsers}\n\t\t\t\t\t\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t<Form.Group widths='equal'>\n\t\t\t\t\t\t\t\t\t<Form.TextArea\n\t\t\t\t\t\t\t\t\t\tlabel=\"Description\"\n\t\t\t\t\t\t\t\t\t\tname=\"description\"\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\twidth={8}\n\t\t\t\t\t\t\t\t\t\tvalue={description}\n\t\t\t\t\t\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t\t\t<Form.Input\n                            \t\t    label=\"Event Code\"\n                            \t\t    name=\"code\"\n                            \t\t    type=\"text\"\n\t\t\t\t\t\t\t\t\t\tvalue={code}\n\t\t\t\t\t\t\t\t\t\twidth={5}\n                            \t\t    maxLength=\"5\"\n                            \t\t    onChange={(param, data) => {\n                            \t\t        //only allow numeric values to be inputted\n                            \t\t        if (onlyNumericValues(data.value)) {\n                            \t\t            this.onChange(param, data);\n                            \t\t        }\n                            \t\t    }}\n                            \t\t/>\n\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tcontent=\"Cancel\"\n\t\t\t\t\t\t\t\t\tsize='large'\n\t\t\t\t\t\t\t\t\tcolor=\"red\"\n\t\t\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\t\t\ticon=\"cancel\"\n\t\t\t\t\t\t\t\t\tlabelPosition=\"left\"\n\t\t\t\t\t\t\t\t\tfloated=\"right\"\n\t\t\t\t\t\t\t\t\tonClick={closeModal}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\tcontent=\"Submit\"\n\t\t\t\t\t\t\t\t\tsize='large'\n\t\t\t\t\t\t\t\t\tcolor=\"green\"\n\t\t\t\t\t\t\t\t\ticon=\"check\"\n\t\t\t\t\t\t\t\t\tlabelPosition=\"left\"\n\t\t\t\t\t\t\t\t\tfloated=\"left\"\n\t\t\t\t\t\t\t\t/>            \n\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t</Grid.Column>\n\t\t\t\t</Grid.Row>\n\t\t\t</Grid>\n\t\t);\n\t}\n}\n\nconst condition = authUser => !!authUser;\nexport default withAuthorization(condition)(withFirebase(EditEventForm));\n","import React, { useState } from \"react\";\n\nimport {Container, Grid, Header, Divider, Label} from 'semantic-ui-react';\n\nexport default function ViewEvent ({event}) {\n    console.log(event);\n    const {eventDate: date, description, name, passcode, eventID: id} = event;\n\n    return (\n        <>\n        <Container textAlign='right'>\n            <Grid>\n                <Grid.Row columns={2}>\n                    <Grid.Column width={3} textAlign='left' floated='left'>\n                        <Header as='h2' content={name}/>\n                    </Grid.Column>\n                    <Grid.Column width={12} floated='right' textAlign='right'>\n                        <Label icon='hashtag' color='blue' size='large' content={passcode}/>\n                        <Label icon='calendar' color='blue' size='large' content={date}/>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n            <Divider/>\n            {/* <div>\n            <p>  <b>Starts on: </b>  {date}</p>\n            <p>Level</p>\n            </div> */}\n        </Container>\n        <Container>\n            <b>Description</b>\n            <p>{description}</p>\n        </Container>\n        <Container>\n            <Grid>\n                <Grid.Row>\n                    <Grid.Column floated='right' textAlign='right'>\n                        <Label icon='keyboard'  color='blue' size='large' content={id}/>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        </Container>\n        </>\n    );\n};","import React, { useState } from \"react\";\nimport { Button, Icon, Card, Modal, Grid} from \"semantic-ui-react\";\nimport EditEventForm from \"../UIComponents/EditEventForm\";\nimport ViewEvent from '../UIComponents/ViewEvent';\n\n\nexport default function EventCard({ event, organization, activateEvent, updateEvents, stopEvent, deleteEvent, openModal}) {\n    console.log(\"Card Rendered\");\n    const attendance = (\n        <p>\n            <Icon name=\"user\" />\n            {/*{event.attendance}/{event.totalCount} Attendees*/}\n        </p>\n    );\n\n    // const editEventModal = (\n    //     <Modal\n    //         onClose={() =>{ closeModal(\"Create\")}}\n    //         open={viewEditEventForm}\n    //         size='tiny'\n    //         closeOnEscape={true}\n    //         closeOnDimmerClick={false}\n    //     >\n    //         <Modal.Header as=\"h1\">Edit Event</Modal.Header>\n    //         <Modal.Content>\n    //             <EditEventForm\n    //                 event={event}\n    //                 organization={organization}\n    //                 updateEvents={updateEvents}\n    //                 closeModal={closeModal}\n    //             />\n    //         </Modal.Content>\n    //     </Modal>\n    // );\n\n    // const eventModal = (\n    //     <Modal\n    //         open={viewEventModal}\n    //         onClose={()=> this.closeModal(\"view\")}\n    //         size='tiny'\n    //         closeOnEscape={true}\n    //         closeOnDimmerClick={true}\n    //     >\n    //         <Modal.Header as='h1' content='Event Detail View'/>\n    //         <Modal.Content>\n    //             <ViewEvent event={event} />\n    //         </Modal.Content>\n    //         <Modal.Actions>\n    //             <Grid>\n    //                 <Grid.Row>\n    //                     <Grid.Column>\n    //                         <Button \n    //                             content='Close'\n    //                             color='grey'\n    //                             size='large'\n    //                             floated='left'\n    //                             onClick={()=>this.closeModal(\"View\")}\n    //                         />\n    //                         <Button \n    //                             icon='edit'\n    //                             labelPosition='left'\n    //                             content='Edit'\n    //                             size='large'\n    //                             floated='right'\n    //                             positive\n    //                             onClick={()=>{\n    //                                 this.openModal(\"Edit\");\n    //                                 this.closeModal(\"View\");\n    //                             }}\n    //                         />\n    //                     </Grid.Column>\n    //                 </Grid.Row>\n    //             </Grid>                \n    //         </Modal.Actions>\n    //     </Modal>\n    // );\n\n    return (\n        <>\n            <Card fluid raised>\n                <Card.Content>\n                <Button\n                    stackable='true'\n                    color={(event.active ? \"red\" : \"blue\")}\n                    icon={(event.active ? \"stop\" : \"play\")}\n                    onClick={() => {\n                        event.active\n                            ? (stopEvent(organization,event.eventID))\n                            : (activateEvent(organization, event.eventID));\n                        updateEvents();\n                    }}\n                    size=\"medium\"\n                    floated=\"right\"\n                    />\n                    <Card.Header>{event.name}</Card.Header>\n                    <Card.Meta>Created on {event.eventDate} </Card.Meta>\n                    <Card.Description> {event.description} </Card.Description>\n                    {/* <i className=\"trash icon\" style={{'margin-left':'90%', 'cursor':'pointer'}}\n                        onClick={()=>{\n                            deleteEvent(organization,event.eventID);\n                            updateEvents();\n                        }}\n                    /> */}\n                </Card.Content>\n                <Card.Content \n                    extra \n                    textAlign='center'\n                >\n                    <div className='ui two buttons'>\n                      <Button  \n                        color='blue'\n                        content='View'\n                        icon='eye'\n                        labelPosition='left'\n                        onClick={openModal}\n                    />\n                      <Button \n                        color='red'\n                        content='Delete'\n                        icon='trash'\n                        labelPosition='left'\n                        onClick={()=>{\n                            deleteEvent(organization,event.eventID);\n                            updateEvents();\n                        }}\n                        />\n                    </div>\n                </Card.Content>\n                {/*<Card.Content extra>{attendance}</Card.Content>*/}\n            </Card>\n            {/* {editEventModal}\n            {eventModal} */}\n        </>\n    );\n}\n","import React, { useState } from \"react\";\nimport { withFirebase } from '../components/Firebase';\n\nimport { Form, Grid, Button, Icon } from \"semantic-ui-react\";\nimport SemanticDatepicker from 'react-semantic-ui-datepickers';\nimport { onlyNumericValues} from \"../util/validators\";\n\nexport default function EventForm({organization, addEvent, updateEvents, closeModal}) {\n    const [code, setCode] = useState('');\n    \n    const [values, setValues] = useState({\n        id: \"\",\n        name: \"\",\n        code: \"\",\n        active: false,\n        minimum_level: \"\",\n        allowedUsers: '',\n        notAllowedUsers: '',\n        description: \"\",\n        date: \"\"\n    });\n\n    const [isValid, setIsValid] = useState(true);\n\n    const options = [\n        {\n            key: '1',\n            text:'1',\n            value:'1'\n        },\n        {\n            key: '2',\n            text:'2',\n            value:'2'\n        },\n        {\n            key: '3',\n            text:'3',\n            value:'3'\n        },\n        {\n            key: '4',\n            text:'4',\n            value:'4'\n        },\n        {\n            key: '5',\n            text:'5',\n            value:'5'\n        }\n    ]\n\n    var formValues = values;\n\n    var valid = isValid;\n\n    var onChange = (name, value) => {\n        formValues[name] = value;\n        setValues(formValues);\n        valid = values.name === \"\" || \n                values.code === \"\" ||\n                values.minimum_level === \"\" || \n                values.description === \"\" ||\n                values.date === \"\";\n        setIsValid(valid);\n    };\n\n    var onSubmit = async () => {\n        const eventAdded = await addEvent(\n            organization,\n            values.id,\n            values.name,\n            values.minimum_level,\n            values.allowedUsers,\n            values.notAllowedUsers,\n            values.description,\n            values.date,\n            values.code\n        );\n\n        if(!eventAdded) {\n            alert('Event ID already in use. Verify if the event was already entered.');\n        } else {\n            closeModal(\"Create\");\n            updateEvents();\n        }\n    };\n\n    return (\n        <Grid>\n            <Grid.Row>\n                <Grid.Column>\n                    <Form onSubmit={onSubmit}>\n                        <Form.Group widths='equal'>\n                            <Form.Input\n                                label=\"Event Name\"\n                                name=\"name\"\n                                type=\"text\"\n                                width={4}\n                                maxLength=\"25\"\n                                onChange={(param, data) => {\n                                    onChange(data.name, data.value);\n                                }}\n                            />\n                            <Form.Input\n                                label=\"Event Code\"\n                                name=\"code\"\n                                type=\"text\"\n                                width={1}\n                                value={code}\n                                maxLength=\"5\"\n                                onChange={(param, data) => {\n                                    //only allow numeric values to be inputted\n                                    if (onlyNumericValues(data.value)) {\n                                        setCode(data.value);\n                                        onChange(data.name, data.value);\n                                    }\n                                }}\n                            />\n                            <Form.Input\n                                label=\"Event ID\"\n                                name=\"id\"\n                                type=\"text\"\n                                width={4}\n                                // value={values.code}\n                                maxLength=\"10\"\n                                onChange={(param, data) => {\n                                    onChange(data.name, data.value);\n                                }}\n                            />\n                        </Form.Group>\n                        <Form.Group widths='equal'>\n                            <Form.TextArea\n                                label=\"Description\"\n                                name=\"description\"\n                                type=\"text\"\n                                width={2}\n                                // value={values.description}\n                                onChange={(param, data) => {\n                                    onChange(data.name, data.value);\n                                }}\n                            />\n                        </Form.Group>\n                        <Form.Group widths='equal'>\n                            <Form.Dropdown\n                                label = \"Minimum Level\"\n                                name = \"minimum_level\"\n                                placeholder = \"1 - 5\"\n                                fluid\n                                selection\n                                // value={checkInData.company}\n                                options = {options}\n                                onChange={(param, data) => {\n                                  onChange(data.name, data.value);\n                                }}\n                            />\n                            <Form.Field\n                                content={\n                                    <SemanticDatepicker \n                                        name=\"date\" \n                                        label=\"Start Date\"\n                                        onChange={(param, data) => {\n                                            /* Convert the date object to a string. Locale means that the format of the string will\n                                             * be in accordance to the region using the application.\n                                             * For the use it will be MM/DD/YYYY\n                                             */\n                                            try {\n                                                const dateString = data.value.toLocaleDateString();\n                                                onChange(data.name, dateString)\n                                            }\n                                            catch (e) {\n                                                onChange(data.name, '');\n                                            }\n                                        }\n                                        }\n                                    />\n                                }\n                            />\n                        </Form.Group>\n                        <Form.Group widths='equal'>\n                            <Form.Input\n                                label=\"Allowed Users\"\n                                name=\"allowedUsers\"\n                                type=\"text\"\n                                // value={values.description}\n                                onChange={(param, data) => {\n                                    onChange(data.name, data.value);\n                                }}\n                            />\n                            <Form.Input\n                                label=\"Not Allowed Users\"\n                                name=\"notAllowedUsers\"\n                                type=\"text\"\n                                // value={values.description}\n                                onChange={(param, data) => {\n                                    onChange(data.name, data.value);\n                                }}\n                            />\n                        </Form.Group>\n                        <Button\n                            content=\"Cancel\"\n                            size='large'\n                            type='button'\n                            color=\"red\"\n                            icon=\"cancel\"\n                            labelPosition=\"left\"\n                            floated=\"right\"\n                            onClick = {()=>{\n                                closeModal(\"Create\");\n                            }}\n                        />\n                        <Button\n                            type=\"submit\"\n                            disabled={isValid}\n                            content=\"Submit\"\n                            size='large'\n                            color=\"green\"\n                            icon=\"check\"\n                            labelPosition=\"left\"\n                            floated=\"left\"\n                        />\n                    </Form>\n                </Grid.Column>\n            </Grid.Row>\n        </Grid>\n    );\n}\n","import React, { useState } from \"react\";\nimport {\n    Grid,\n    Container,\n    Button,\n    Divider,\n    Header,\n    Card,\n    Modal,\n    Dimmer,\n    Loader,\n    Segment,\n    Icon\n} from \"semantic-ui-react\";\n\nimport EventCard from \"../UIComponents/EventCard\";\nimport CreateEventForm from \"../UIComponents/CreateEventForm\";\nimport ViewEvent from '../UIComponents/ViewEvent';\nimport EditEventForm from \"../UIComponents/EditEventForm\";\n\nexport default function EventPanel({organization, events, addEvent, updateEvents, activateEvent, stopEvent, deleteEvent}) {\n    const [viewEditEventForm, setViewEditEventForm] = useState(false);\n    const [viewEventModal, setViewEventModal] = useState(false);\n    const [viewCreateEventForm, setViewCreateEventForm] = useState(false);\n    const [selectedEvent, setSelectedEvent] = useState({});\n\n    const activeEvents = [];\n    const inactiveEvents = [];\n\n    if(events) {\n        events.forEach(event => {\n            if (event.active){\n                activeEvents.push(event);\n            }else {\n                inactiveEvents.push(event);}\n        });\n    }\n\n    const closeModal = (name) => {\n        switch(name) {\n            case \"View\":\n                setViewEventModal(false);\n                break;\n            case \"Edit\":\n                setViewEditEventForm(false);\n                break;   \n            case \"Create\":\n                setViewCreateEventForm(false);\n                break;                \n        }\n    }\n\n    const openModal = (name, data) => {\n        switch(name) {\n            case \"View\":\n                setSelectedEvent(data);\n                setViewEventModal(true);\n                break;\n            case \"Edit\":\n                setSelectedEvent(data);\n                setViewEditEventForm(true);\n                break;   \n            case \"Create\":\n                setViewCreateEventForm(true);\n                break;                \n        }\n    }\n\n\n    const createEventModal = (\n        <Modal\n            onClose={() =>{ closeModal(\"Create\")}}\n            open={viewCreateEventForm}\n            size='tiny'\n            closeOnEscape={true}\n            closeOnDimmerClick={false}\n        >\n            <Modal.Header as=\"h1\">New Event</Modal.Header>\n            <Modal.Content>\n                <CreateEventForm\n                    organization={organization}\n                    addEvent={addEvent}\n                    updateEvents={updateEvents}\n                    closeModal = {() => {\n                        closeModal(\"Create\")}}\n                />\n            </Modal.Content>\n        </Modal>\n    );\n\n\n    const editEventModal = (\n        <Modal\n            onClose={() =>{ closeModal(\"Edit\")}}\n            open={viewEditEventForm}\n            size='tiny'\n            closeOnEscape={true}\n            closeOnDimmerClick={false}\n        >\n            <Modal.Header as=\"h1\">Edit Event</Modal.Header>\n            <Modal.Content>\n                <EditEventForm\n                    event={selectedEvent}\n                    organization={organization}\n                    updateEvents={updateEvents}\n                    closeModal = {() => {\n                        closeModal(\"Edit\")}}\n                />\n            </Modal.Content>\n        </Modal>\n    );\n\n    const eventModal = (\n        <Modal\n            open={viewEventModal}\n            onClose={()=> closeModal(\"view\")}\n            size='tiny'\n            closeOnEscape={true}\n            closeOnDimmerClick={true}\n        >\n            <Modal.Header as='h1' content='Event Detail View'/>\n            <Modal.Content>\n                <ViewEvent event={selectedEvent} />\n            </Modal.Content>\n            <Modal.Actions>\n                <Grid>\n                    <Grid.Row>\n                        <Grid.Column>\n                            <Button \n                                content='Close'\n                                color='grey'\n                                size='large'\n                                floated='left'\n                                onClick={()=>closeModal(\"View\")}\n                            />\n                            <Button \n                                icon='edit'\n                                labelPosition='left'\n                                content='Edit'\n                                size='large'\n                                floated='right'\n                                positive\n                                onClick={()=>{\n                                    openModal(\"Edit\", selectedEvent);\n                                    closeModal(\"View\");\n                                }}\n                            />\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>                \n            </Modal.Actions>\n        </Modal>\n    );\n\n    return (\n        <>\n        <Container>\n            <Grid>\n                <Grid.Row>\n                     <Header as='h1'>Event Panel</Header>\n                </Grid.Row>\n                <Grid.Row>\n                    <Grid.Column>\n                        <Button\n                            content=\"Add Event\"\n                            color='green'\n                            icon=\"add\"\n                            labelPosition=\"left\"\n                            floated=\"right\"\n                            onClick={() => {\n                                setViewCreateEventForm(true);\n                            }}\n                        />\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        </Container>\n\n            <Divider horizontal>\n                <Header as=\"h2\">Active Events</Header>\n            </Divider>\n            <Container>\n                <Grid stackable>\n                    <Grid.Row >\n                        <Grid.Column>\n                        <Dimmer inverted active={events.length === 0} >\n                            <Loader content='Loading...' size='huge'/>\n                        </Dimmer>\n                       {activeEvents.length === 0 ?(\n                        <Segment placeholder>\n                            <Header icon>\n                              <Icon name='calendar' size='large'/>\n                              <p>There are currently no active events</p>\n                            </Header>\n                        </Segment>\n                        )\n                        :(\n                        <Card.Group centered itemsPerRow={3}>\n                            {activeEvents &&\n                                activeEvents.map((event, index) => (\n                                    <EventCard \n                                        event={event} \n                                        key={index}\n                                        organization={organization} \n                                        updateEvents={updateEvents} \n                                        activateEvent = {activateEvent}\n                                        stopEvent = {stopEvent}\n                                        deleteEvent = {deleteEvent}\n                                        openModal={()=>openModal(\"View\", event)}\n                                    />\n                                ))}\n                        </Card.Group>\n                        )}\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </Container>\n\n            <Divider horizontal>\n                <Header as=\"h2\">Inactive Events</Header>\n            </Divider>\n            \n            <Container>\n                <Grid stackable>\n                    <Grid.Row>\n                        <Grid.Column>\n                        <Dimmer active={events.length === 0} inverted>\n                            <Loader content='Loading...' size='huge' />\n                        </Dimmer>\n                        {inactiveEvents.length === 0 ?(\n                        <Segment placeholder>\n                            <Header icon>\n                              <Icon name='calendar' size='large'/>\n                              <p>There are currently no active events</p>\n                            </Header>\n                        </Segment>\n                        )\n                        :(<Card.Group centered itemsPerRow={3}>\n                            {inactiveEvents &&\n                                inactiveEvents.map((event, index) => (\n                                    <EventCard \n                                        event={event} \n                                        key={index} \n                                        organization={organization} \n                                        updateEvents={updateEvents} \n                                        activateEvent = {activateEvent}\n                                        deleteEvent = {deleteEvent}\n                                        openModal={()=>openModal(\"View\", event)}\n                                    />\n                                ))\n                            }\n                        </Card.Group>\n                        )}\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </Container>\n            \n            \n            {createEventModal}\n            {editEventModal}\n            {eventModal}\n        </>\n    );\n}\n","import React, {Component} from 'react';\nimport { withAuthorization } from '../Session';\nimport { withFirebase } from '../Firebase';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\n\nimport EventPanel from '../../UIComponents/EventPanel'\n\nclass HomePage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            organization: '',\n            addEvent: null,\n            events: [],\n            updateEvents: null,\n            activateEvent: null,\n            stopEvent: null,\n            deleteEvent: null\n        }\n    }\n\n    async componentDidMount() {\n        const organization = await this.props.firebase.getOrganization();\n        const events = await this.props.firebase.getEventsPreview(organization);\n        const addEvent = this.props.firebase.addEvent;\n        const activateEvent = this.props.firebase.activateEvent;\n        const stopEvent = this.props.firebase.stopEvent;\n        const deleteEvent = this.props.firebase.deleteEvent;\n        const updateEvents  = async () => {\n            const events =  await this.props.firebase.getEventsPreview(this.state.organization);\n            this.setState({ events: events });\n        }\n        this.setState({\n            organization: organization,\n            events: events,\n            addEvent : addEvent,\n            updateEvents: updateEvents,\n            activateEvent: activateEvent,\n            stopEvent: stopEvent,\n            deleteEvent: deleteEvent\n        });\n    }\n\n    render() {\n        const {organization, events, addEvent, updateEvents, activateEvent, stopEvent, deleteEvent} = this.state;\n        return (\n            <>\n                <EventPanel\n                    events={events}\n                    organization={organization}\n                    addEvent={addEvent}\n                    updateEvents={ updateEvents }\n                    activateEvent={activateEvent}\n                    stopEvent={stopEvent}\n                    deleteEvent = {deleteEvent}\n                />\n            </>\n        )\n    }\n\n}\n\nconst condition = authUser => !!authUser;\nexport default withAuthorization(condition)(HomePage);\n\n","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport { Input, Button, Segment } from 'semantic-ui-react';\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n  onSubmit = event => {\n    const { passwordOne } = this.state;\n    this.props.firebase\n      .doPasswordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    event.preventDefault();\n  };\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n    const isInvalid =\n      passwordOne !== passwordTwo || passwordOne === '';\n    return (\n      <form onSubmit={this.onSubmit}>\n        <Input placeholder='Search...'\n               name=\"passwordOne\"\n               value={passwordOne}\n               onChange={this.onChange}\n               type=\"password\"\n               placeholder=\"New Password\"\n               style={{'width':'100%'}}\n        />\n        <br/>\n        <br/>\n        <Input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm New Password\"\n          style={{'width':'100%'}}\n        />\n          <br/>\n          <br/>\n        <Button positive disabled={isInvalid} type=\"submit\"\n                style={{'width':'100%'}}>\n          Reset My Password\n        </Button>\n        {error &&\n        < div className=\"ui negative message\">\n            <div className=\"header\">\n                Error\n            </div>\n            <p>{error.message}\n            </p></div>}\n      </form>\n    );\n  }\n}\nexport default withFirebase(PasswordChangeForm);","import React, { Component } from \"react\";\nimport { PasswordForgetForm } from '../PasswordForget';\nimport PasswordChangeForm from '../PasswordChange';\nimport { withFirebase } from '../Firebase';\nimport { AuthUserContext, withAuthorization } from '../Session';\nimport {Divider, Header, Button, Icon, Form, Card, Image, Grid, Container, Modal} from 'semantic-ui-react'\nimport EventCard from \"../../UIComponents/EventCard\";\n\nclass AccountPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      organization: '',\n      email: '',\n      registeredUser: '',\n      userName: '',\n      organizationPasscode: '',\n    }\n  }\n\n  async componentDidMount() {\n    const organizationInfo = await this.props.firebase.getOrganizationInformation();\n    this.setState({\n      organization: organizationInfo.companyName,\n      email: organizationInfo.email,\n      userFirstName: organizationInfo.name,\n      userLastName: organizationInfo.lastName,\n      userName: organizationInfo.username,\n      deleteModal: false,\n      passcodeModal: false,\n      passwordModal: false,\n      passcodeChanged: false,\n    });\n\n  }\n\n  showDeleteModal(value) {\n    this.setState({\n      deleteModal: value\n    });\n  }\n\n  deleteOrganization() {\n    this.showDeleteModal(false);\n    this.props.firebase.deleteOrganizationData(this.state.organization);\n    alert('Deleted');\n    //logout\n  }\n\n  changePasscode() {\n    const passcode = document.getElementById('passcodeForm').value;\n    if(passcode ==null || passcode.length == 0) {\n      alert('You need to enter a passcode!')\n      return;\n    }\n    this.props.firebase.changeOrganizationPasscode(this.state.organization, passcode);\n    alert('Passcode changed!');\n    //this.setState({passcodeChage:true});\n    document.getElementById('passcodeForm').value = '';\n  }\n\n  changePasscodeModal() {\n    this.setState({\n      //passcodeChanged: false\n    });\n  }\n\n\n  render() {\n    const {organization, email, userFirstName, userLastName, userName, deleteModal, passcodeModal, passwordModal, passcodeChanged} = this.state;\n    return (\n        <AuthUserContext.Consumer>\n          {authUser => (\n              <>\n                <Divider horizontal size='huge'>\n                  <h1> {organization} </h1>\n                </Divider>\n\n                <div>\n                  <Header as='h2' icon textAlign='center'>\n                    <Icon name='users' circular/>\n                    <Header.Content>{userName}</Header.Content>\n                    <Header.Content>{email}</Header.Content>\n                    <Header.Content>{userLastName + ', ' + userFirstName}</Header.Content>\n                  </Header>\n                </div>\n                <br/>\n\n                <Container>\n                  <Grid stackable>\n                    <Grid.Row>\n                      <Grid.Column>\n                        <Card.Group centered itemsPerRow={3}>\n                          <Card.Group>\n\n                            <Card>\n                              <Card.Content>\n                                <Card.Header>\n                                  Delete Data\n                                </Card.Header>\n                                <br/>\n                                <Card.Description>\n                                  Deletes all the data stored about the organization\n                                </Card.Description>\n                              </Card.Content>\n                              <Modal size={\"small\"} open={deleteModal}>\n                                <Modal.Header>Delete Organization Data</Modal.Header>\n                                <Modal.Content>\n                                  <p>Are you sure you want to delete the data of <strong>{organization}</strong>? (There\n                                    is no way to recover the data in the future)</p>\n                                </Modal.Content>\n                                <Modal.Actions>\n                                  <Button negative onClick={() => this.showDeleteModal(false)}>No</Button>\n                                  <Button\n                                      onClick={() => this.deleteOrganization()}\n                                      positive\n                                      icon='checkmark'\n                                      labelPosition='right'\n                                      content='Yes'\n                                  />\n                                </Modal.Actions>\n                              </Modal>\n                              <Button negative onClick={() => this.showDeleteModal(true)}>\n                                <Icon name='trash alternate outline'/>\n                                Delete\n                              </Button>\n                            </Card>\n\n                            <Card>\n                              <Card.Content>\n                                <Card.Header>\n                                  Change Passcode\n                                </Card.Header>\n                                <br/>\n                                <Card.Description>\n                                  Replace the current organization passcode. It affects admin users.\n                                </Card.Description>\n                              </Card.Content>\n                              <Modal size={\"tiny\"}\n                                     trigger={<Button color='blue' onClick={()=>this.changePasscodeModal()}>\n                                       <Icon name='th'/>\n                                       Change Passcode\n                                       </Button>}>\n                                <Modal.Header>Change {organization} passcode</Modal.Header>\n                                <Modal.Content>\n                                  <Modal.Description>\n                                    <div className=\"ui one column stackable center aligned page grid\">\n                                      <div className=\"column wide\">\n                                        <div className=\"ui action input \">\n                                          <input type=\"password\" id='passcodeForm'/>\n                                          <button className=\"ui green center button\" onClick={()=>this.changePasscode()} >\n                                            Change Passcode\n                                          </button>\n                                        </div>\n                                        { passcodeChanged &&\n                                          < div className=\"ui positive message\">\n                                            <div className=\"header\">\n\n                                            </div>\n                                            <p> The passcode was changed!\n                                            </p></div>}\n                                      </div>\n                                    </div>\n                                  </Modal.Description>\n                                </Modal.Content>\n                              </Modal>\n\n\n\n                            </Card>\n\n                            <Card>\n                              <Card.Content>\n                                <Card.Header>\n                                  Change User Password\n                                </Card.Header>\n                                <br/>\n                                <Card.Description>\n                                  Replace password for user <strong>{userName}</strong>\n                                </Card.Description>\n                              </Card.Content>\n                              <Modal size={\"mini\"}\n                                     trigger={<Button color='teal'>\n                                       <Icon name='asterisk'/>\n                                       Change Password\n                                     </Button>}>\n                                <Modal.Header>Change {email} password</Modal.Header>\n                                <Modal.Content image>\n                                  <Modal.Description style={{'width':'100px'}}>\n                                    <PasswordChangeForm/>\n                                  </Modal.Description>\n                                </Modal.Content>\n                              </Modal>\n                            </Card>\n\n                          </Card.Group>\n                        </Card.Group>\n                      </Grid.Column>\n                    </Grid.Row>\n                  </Grid>\n                </Container>\n              </>\n          )}\n        </AuthUserContext.Consumer>\n    )\n  }\n}\nconst condition = authUser => !!authUser;\nexport default withAuthorization(condition)(AccountPage);","import React, { Component } from 'react';\nimport * as faceapi from 'face-api.js';\nimport { withFirebase } from '../Firebase';\nimport 'react-html5-camera-photo/build/css/index.css';\nimport Camera from 'react-html5-camera-photo';\nimport { Grid, Message, Icon, Label, Header, Loader, Dimmer, Divider, Button, Container } from 'semantic-ui-react';\n//import Webcam from \"react-webcam\";\n//\n\n/*TODO\n    - Finish formatting the sucess message\n    - Rewrite the formatting of the modal in general to reduce wasted space\n*/\n\n\nclass CameraFaceDescriptor extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n            remainingPhotos: 5,\n            errors:[]\n        }\n    }\n\n    handleTakePhoto = async (dataUri) => {\n        const {organization, userID} = this.props.children;\n        var errors = [];\n        this.setState({loading: true});\n        if(this.state.remainingPhotos === 0) {\n            return;\n        }\n\n\n        //LOAD WEBCAM CAPTURED IMAGE AND BUILD THE DESCRIPTOR SET\n        let blob =  await fetch(dataUri).then(r => r.blob());    //Build Image\n        const image =  await faceapi.bufferToImage(blob);\n        const detection =  await faceapi.detectAllFaces(image).withFaceLandmarks().withFaceDescriptors();\n\n        if(detection.length === 0) {\n            errors.push(\"No face detected. Please try again.\");\n        }else if(detection.length > 1) {\n            errors.push(\"Multiple faces detected. Please try again.\");\n        }\n\n        //TAKEN FROM CHILDREN IN THE CONSTRUCTOR\n        // const organization = this.props.children.organization;\n        // const userID = this.props.children.userID;\n        if (errors.length === 0){\n            await this.props.firebase.insertDescriptor(organization,userID,detection[0].descriptor);\n            this.setState({remainingPhotos:this.state.remainingPhotos-1});\n        }\n        this.setState({errors: errors});\n        this.setState({loading: false});\n    }\n\n    onClick = async (event) => {\n        const {closeModal, updateUsers} = this.props.children;\n        closeModal();\n\n        if (updateUsers !== undefined) {\n            updateUsers();\n        }\n    }\n\n    render() {\n        const {remainingPhotos, loading, errors} = this.state;\n        Promise.all([\n            faceapi.nets.faceRecognitionNet.loadFromUri('/models'),\n            faceapi.nets.faceLandmark68Net.loadFromUri('/models'),\n            faceapi.nets.ssdMobilenetv1.loadFromUri('/models'),\n        ])\n\n        // if(remainingPhotos == 0) {\n        //     completed=true;\n        //     closeModal();\n        //     if (updateUsers !== undefined) {\n        //         updateUsers();\n        //     }\n        // }\n\n        return (\n            <Grid\n                centered\n                container\n            >\n                <Grid.Row centered textAlign='center'>\n                    <Grid.Column verticalAlign='middle' textAlign='left'>\n                        <Header as='h1'>\n                            <span><Icon name='camera' size='large'/> </span>Take Pictures\n                        </Header>\n                        <Divider/>\n                        <Message\n                            color='red'\n                            hidden={errors.length === 0}\n                            header='Processing Error'\n                            list={errors}\n                        />\n                        {remainingPhotos === 0 \n                        ?('')\n                        :(\n                            <Container textAlign='center'>\n                                <Label color='blue' size='huge' icon ='picture' detail='Pictures Remaining' content={remainingPhotos}/>\n                            </Container>\n                        )}\n                    </Grid.Column>\n                </Grid.Row>\n                <Grid.Row centered>\n                    <Grid.Column stretched>\n                        <Dimmer active={loading}>\n                            <Loader content='Processing Image...' size='huge'/>\n                        </Dimmer>\n                            <Camera\n                                onTakePhoto = { (dataUri) => { this.handleTakePhoto(dataUri); } }\n                                isSilentMode = {true}\n                            />\n                            <Message\n                                size='mini'\n                                positive\n                                hidden={remainingPhotos !== 0}\n                            >\n                                <Container>\n                                    <Grid>\n                                        <Grid.Row>\n                                            <Grid.Column verticalAlign='middle'>\n                                                <Header as='h2'>Completed!</Header>\n                                                <Button\n                                                    positive\n                                                    floated='right'\n                                                    size='large'\n                                                    content='Done'\n                                                    onClick={this.onClick}\n                                                />\n                                           </Grid.Column>\n                                        </Grid.Row>\n                                    </Grid>\n                                </Container>\n                            </Message>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n            // <div>\n            //     <WebcamCapture/>\n            //     <p>Remaining Photos: {this.state.remainingPhotos}</p>\n            // </div>\n        );\n    }\n}\nexport default withFirebase(CameraFaceDescriptor);","import React, { Component } from 'react';\nimport Camera from 'react-html5-camera-photo';\nimport * as faceapi from 'face-api.js';\nimport * as canvas from 'canvas';\nimport { withFirebase } from '../Firebase';\nimport 'react-html5-camera-photo/build/css/index.css';\nimport { Divider, Grid, Header, Form, Button, Icon, Message, Dimmer, Loader } from 'semantic-ui-react';\n\n\nvar constructorImages = new Array();\nvar currentErrors = [];\n\nclass FileFaceDescriptor extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            images: [],\n            loading: false,\n            errors:[]\n        }\n    }\n\n    onSubmit = async() => {\n        this.setState({loading: true});\n        var count = 0;\n        const {images} = this.state;\n\n        const {closeModal, updateUsers} = this.props.children;\n        // const images = [\n        //     document.getElementById('file0').files,\n        //     document.getElementById('file1').files,\n        //     document.getElementById('file2').files,\n        //     document.getElementById('file3').files,\n        //     document.getElementById('file4').files,\n        // ];\n\n        for (var i = 0; i< images.length; i++) {\n            const response = await this.handlePhoto(images[i], i)\n            if (response) {\n                count++;\n            }\n            currentErrors.push(response);\n        }\n\n        if(count === 0) {\n            currentErrors.push('You need to upload at least one valid picture');\n            // this.setState({errors: currentErrors});\n        }\n        else {\n            alert('Images processed correctly');\n            closeModal();\n            if (updateUsers !== undefined) {\n                updateUsers();\n            }\n        }\n        this.setState({loading: false});\n        this.setState({errors: currentErrors});\n    }\n\n    handlePhoto = async (imgRaw, index) => {\n        const image =  await faceapi.bufferToImage(imgRaw);\n        const detection =  await faceapi.detectAllFaces(image).withFaceLandmarks().withFaceDescriptors();\n        const {organization, userID} = this.props.children;\n        const fb = this.props.firebase;\n\n        if(detection.length === 0) {\n            currentErrors.push(\"No face detected on the image \" + imgRaw.name + \" - \" + index);\n            return false;\n        }\n        if(detection.length > 1) {\n            currentErrors.push(\"More than one face detected on the image \" + imgRaw.name + \" - \" + index);\n            return false;\n        }\n        await fb.insertDescriptor(organization,userID,detection[0].descriptor);\n        return true;\n    }\n\n    \n\n    render() {\n        const isValid = (this.state.images.length === 5);\n        const sucessful = (this.state.errors.length === 0);\n\n        console.log(isValid + \" \" + sucessful);\n        console.log(isValid && sucessful);\n        Promise.all([\n            faceapi.nets.faceRecognitionNet.loadFromUri('/models'),\n            faceapi.nets.faceLandmark68Net.loadFromUri('/models'),\n            faceapi.nets.ssdMobilenetv1.loadFromUri('/models'),\n        ])\n\n        const {loading} = this.state;\n        //TAKEN FROM CHILDREN IN THE CONSTRUCTOR\n        // const {organization, userID} = this.props.children;\n        // // const organization = this.props.children.organization;\n        // // const userID = this.props.children.userID;\n        // const fb = this.props.firebase;\n\n        return (\n            // <div>\n            //     <p>Select your files</p>\n            //     <br/>\n            //     <input type=\"file\" id=\"file0\" accept={\"image/jpeg, image/png\"}/>\n            //     <input type=\"file\" id=\"file1\" accept={\"image/jpeg, image/png\"}/>\n            //     <input type=\"file\" id=\"file2\" accept={\"image/jpeg, image/png\"}/>\n            //     <input type=\"file\" id=\"file3\" accept={\"image/jpeg, image/png\"}/>\n            //     <input type=\"file\" id=\"file4\" accept={\"image/jpeg, image/png\"}/>\n            //     <br/>\n            //     <p>You can upload up to 5 pictures.</p>\n            //     <button onClick={()=> processPhotos()}>Process</button>\n            // </div>\n\n            <Grid\n                centered\n                container\n            >\n                <Grid.Row centered textAlign='center'>\n                    <Grid.Column verticalAlign='middle' textAlign='left'>\n                        <Header as='h1'>\n                            <span><Icon name='file' size='large'/> </span>Upload Pictures\n                        </Header>\n                        <Divider/>\n\n                        <Message\n                            size='large'\n                            positive\n                            hidden={!(sucessful && isValid)}\n                            content='Images processed sucessfully!'\n                        />\n                    </Grid.Column>\n                </Grid.Row>\n                <Grid.Row centered>\n                    <Dimmer active={loading} inverted>\n                        <Loader content='Analyzing Images. This might take a while...' size='huge'/>\n                    </Dimmer>\n\n                    <Form\n                        onSubmit={this.onSubmit}\n                    >\n                        <Form.Input\n                            type='file'\n                            name='0'\n                            multiple\n                            accept={'image/jpeg, image/png'}\n                            onChange={(param, data)=>{\n                                // console.log(param.target.files);\n                                constructorImages[data.name] = param.target.files[0];\n                                this.setState({images: constructorImages});\n                            }}\n                        />\n                        <Form.Input\n                            type='file'\n                            name='1'\n                            accept={'image/jpeg, image/png'}\n                            onChange={(param, data)=>{\n                                constructorImages[1] = param.target.files[0];\n                                this.setState({images: constructorImages});\n                            }}\n                        />\n                        <Form.Input\n                            type='file'\n                            name='2'\n                            accept={'image/jpeg, image/png'}\n                            onChange={(param, data)=>{\n                                constructorImages[2] = param.target.files[0];\n                                this.setState({images: constructorImages});\n                            }}\n                        />\n                        <Form.Input\n                            type='file'\n                            name='3'\n                            accept={'image/jpeg, image/png'}\n                            onChange={(param, data)=>{\n                                constructorImages[3] = param.target.files[0];\n                                this.setState({images: constructorImages});\n                            }}\n                        />\n                        <Form.Input\n                            type='file'\n                            name='4'\n                            accept={'image/jpeg, image/png'}\n                            onChange={(param, data)=>{\n                                constructorImages[4] = param.target.files[0];\n                                this.setState({images: constructorImages});\n                            }}\n                        />\n                        <Message\n                            color='red'\n                            hidden={(currentErrors.length === 0)}\n                            header='Errors Encountered:'\n                            list={currentErrors}\n                        />                        \n                        <Button\n                            type='submit'\n                            icon='upload'\n                            labelPosition='right'\n                            content='Upload'\n                            primary\n                            disabled={!isValid}\n                        />                        \n                    </Form>\n                </Grid.Row>\n            </Grid>\n        );\n    }\n}\nexport default withFirebase(FileFaceDescriptor);","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport CameraFaceDescriptor from \"./CameraFaceDescriptor\";\nimport FileFaceDescriptor from \"./FileFaceDescriptor\";\nimport CustomUploadButton from 'react-firebase-file-uploader/lib/CustomUploadButton';\nimport { AuthUserContext, withAuthorization } from '../Session';\n\nimport {Form, Button, Grid, Modal, Message} from 'semantic-ui-react';\nimport { genderOptions, levelOptions } from \"../../util/options\";\nimport {onlyAlphaNumValues, onlyNumericValues, validEmail} from \"../../util/validators\";\n\nvar user = {\n    userID: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    level: '',\n    gender: '',\n    age: ''\n}\n\nvar answer;\nvar imageModal;\nvar confirmationImageModal;\n\nclass NewUser extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewImageModal: false,\n            viewConfirmationImageModal: false,\n            answer: false,\n            recognizer: '',\n            organization: this.props.children.organization,\n            user: {\n                userID: '',\n                firstName: '',\n                lastName: '',\n                email: '',\n                level: '',\n                gender: '',\n                age: ''\n            },\n            errors: []\n        }\n    }\n\n    onSubmit = async (event) => {\n        const {\n            userID,\n            firstName,\n            lastName,\n            email,\n            level,\n            gender,\n            age\n        } = this.state.user;\n\n        const {organization} = this.state;\n\n        var errors = [];\n\n        if (!validEmail(email)) {\n            errors.push('Email must be a valid email.');\n        }\n\n        this.setState({errors: errors});\n\n\n        // console.log(this.state);\n        // const userID = document.getElementById('userID').value;\n        // const firstName = document.getElementById('firstName').value;\n        // const lastName = document.getElementById('lastName').value;\n        // const email = document.getElementById('email').value;\n        // const level = document.getElementById('level').value;\n        // const gender = document.getElementById('gender').value;\n        // const age = document.getElementById('age').value;\n\n        // var error = 'All fields must be filled. Please enter a value for: ';\n        // if(userID === '') { error+=' UserID'; }\n        // if(firstName === '') { error+=' FirstName'; }\n        // if(lastName === '') { error+=' LastName'; }\n        // if(email === '') { error+=' Email'; }\n        // if(level === '') { error+=' Level'; }\n        // if(gender === '') { error+=' Gender'; }\n        // if(age === '') { error+=' Age'; }\n\n        // if(error != 'All fields must be filled. Please enter a value for: ') {\n        //     alert(error);\n        //     return;\n        // }\n        if (errors.length === 0) {\n            const userAdded = await this.props.firebase.addUser(organization,userID,firstName,lastName,email,level,gender,age);\n            if(!userAdded) {\n                errors.push('User ID already exists');\n                this.setState({errors: errors});\n            } else {\n                this.setState({viewConfirmationImageModal: true});    \n            }\n        }\n        \n        // document.getElementById('userID').disabled = true;\n        // document.getElementById('firstName').disabled = true;\n        // document.getElementById('lastName').disabled = true;\n        // document.getElementById('email').disabled = true;\n        // document.getElementById('level').disabled = true;\n        // document.getElementById('gender').disabled = true;\n        // document.getElementById('age').disabled = true;\n        // document.getElementById('addUser').disabled = true;\n\n        // this.props.userUpdate();\n\n        // const answer =  window.confirm(\"Do you want to use you camera to take user face descriptions? \\n If you want to upload the images files press Cancel\");\n        // if(answer) {\n        //     this.setState({\n        //         recognizer: <CameraFaceDescriptor children={{'organization':organization,'userID':userID}} />,\n        //     });\n        // }\n        // else {\n        //     this.setState({\n        //         recognizer: <FileFaceDescriptor children={{'organization':organization,'userID':userID}} />,\n        //     });\n        // }\n\n        // imageModal = (\n        //     <Modal\n        //         open={this.state.viewImageModal}\n        //         size='large'\n        //         closeOnDimmerClick={false}\n        //     >\n        //         <Modal.Header as='h1' content={answer ? 'Take Pictures' : 'Choose Your Pictures'}/>\n        //         <Modal.Content content={\n        //             answer\n        //                 ? (<CameraFaceDescriptor children={{'organization':organization,'userID':userID}} />)\n        //                 : (<FileFaceDescriptor children={{'organization':organization,'userID':userID}} />)\n        //             }\n        //         />\n        //     </Modal>\n        // )\n    }\n\n    onChange = (event, {name, value}) => {\n        user[name] = value\n        this.setState({user});\n    }\n\n    closeModal = async() => {\n        await this.setState({viewImageModal: false});\n        await this.props.closeModal(\"Create\");\n    }\n\n    render() {\n        const {\n            userID,\n            firstName,\n            lastName,\n            email,\n            age,\n            gender,\n            level\n        } = this.state.user;\n        \n        const {\n            organization,\n            viewConfirmationImageModal,\n            viewImageModal,\n            recognizer,\n            errors\n        } = this.state\n        \n        const {closeModal} = this.props;\n                \n        const isInvalid =   userID === '' ||\n                            firstName === '' ||\n                            lastName === '' ||\n                            email === '' ||\n                            gender === '' ||\n                            level === '' ||\n                            age === '';\n\n        return (\n            <>\n                {/* <h1>NEW USERS</h1>\n                <div id={'InputControls'}>\n                    <p>User ID:</p>\n                    <input id={'userID'}/>\n                    <p>First Name:</p>\n                    <input id={'firstName'}/>\n                    <p>Last Name:</p>\n                    <input id={'lastName'}/>\n                    <p>Email:</p>\n                    <input id={'email'}/>\n                    <p>Level:</p>\n                    <input id={'level'}/>\n                    <p>Gender:</p>\n                    <input id={'gender'}/>\n                    <p>Age:</p>\n                    <input id={'age'}/>\n                    <br/>\n                    <button id={'addUser'} onClick={() => this.addUserClick() }>Insert User</button>\n                </div> */}\n                <Grid>\n                    <Grid.Row>\n                        <Grid.Column>\n                            <Form\n                                noValidate\n                                onSubmit={this.onSubmit}\n                                size='large'\n                            >\n                                <Form.Group width='equal'>\n                                    <Form.Input\n                                        fluid\n                                        label=\"First Name\"\n                                        name=\"firstName\"\n                                        type=\"text\"\n                                        width={8}\n                                        maxLength=\"25\"\n                                        value={firstName}\n                                        onChange={this.onChange}\n                                    />\n                                    <Form.Input\n                                        fluid\n                                        label=\"Last Name\"\n                                        name=\"lastName\"\n                                        type=\"text\"\n                                        width={8}\n                                        maxLength=\"25\"\n                                        value={lastName}\n                                        onChange={this.onChange}\n                                    />\n                                    <Form.Select\n                                        fluid\n                                        label=\"Level\"\n                                        name=\"level\"\n                                        width={3}\n                                        options={levelOptions}\n                                        onChange={this.onChange}\n                                    />\n                                </Form.Group>\n                                <Form.Group widths='equal'>\n                                    <Form.Input\n                                        fluid\n                                        label=\"User ID\"\n                                        name=\"userID\"\n                                        type=\"text\"\n                                        width={4}\n                                        maxLength=\"15\"\n                                        value={userID}\n                                        onChange={({param: event}, data) => {\n                                            //only allow alphanumeric values to be inputted\n                                            if (onlyAlphaNumValues(data.value) || data.value === '') {\n                                                this.onChange(event, data)\n                                            }\n                                        }}\n                                    />\n                                    <Form.Select\n                                        fluid\n                                        label=\"Gender\"\n                                        name=\"gender\"\n                                        width={2}\n                                        options={genderOptions}\n                                        onChange={this.onChange}\n                                    />\n                                    <Form.Input\n                                        fluid\n                                        label=\"Age\"\n                                        name=\"age\"\n                                        type=\"text\"\n                                        value={age}\n                                        maxLength=\"2\"\n                                        width={2}\n                                        onChange={({param: event}, data) => {\n                                            //only allow numeric values to be inputted\n                                            if (onlyNumericValues(data.value)) {\n                                                this.onChange(event, data)\n                                            }\n                                        }}\n                                    />\n                                </Form.Group>\n                                <Form.Group widths='equal'>\n                                    <Form.Input\n                                        fluid\n                                        label=\"Email\"\n                                        name=\"email\"\n                                        type=\"text\"\n                                        width={8}\n                                        maxLength='40'\n                                        value={email}\n                                        onChange={this.onChange}\n                                    />\n                                </Form.Group>\n                                <Message\n                                    color='red'\n                                    hidden={(errors.length === 0)}\n                                    header='Invalid Form Fields:'\n                                    list={errors}\n                                />\n                                <Button\n                                    content=\"Cancel\"\n                                    size='large'\n                                    color=\"red\"\n                                    type='button'\n                                    icon=\"cancel\"\n                                    labelPosition=\"left\"\n                                    floated=\"right\"\n                                    onClick={()=>{\n                                        user = {\n                                            userID: '',\n                                            firstName: '',\n                                            lastName: '',\n                                            email: '',\n                                            level: '',\n                                            gender: '',\n                                            age: ''\n                                        }\n                                        this.setState(user);\n                                        this.props.closeModal(\"Create\");\n                                    }}\n                                />\n                                <Button\n                                    type=\"submit\"\n                                    content=\"Submit\"\n                                    disabled={isInvalid}\n                                    size='large'\n                                    color=\"green\"\n                                    icon=\"check\"\n                                    labelPosition=\"left\"\n                                    floated=\"left\"\n                                />            \n                            </Form>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            \n                <Modal \n                    size='tiny'\n                    closeOnDimmerClick={false}\n                    open={viewConfirmationImageModal}\n                >\n                    <Modal.Header>Required Images</Modal.Header>\n                    <Modal.Content>\n                        <Modal.Description>\n                            <p> To complete this user's profile, we need a set of pictures for our AI to\n                                identify this user upon check in. These pictures are securely stored in our database\n                                and will not be shared.\n                            </p>\n                            <p> How would you like to provide these pictures?</p>\n                        </Modal.Description>\n                    </Modal.Content>\n                    <Modal.Actions>\n                        <Grid\n                            stackable={false}\n                        >\n                            <Grid.Row columns={1}>\n                                <Grid.Column>\n                                    <Button\n                                        primary\n                                        icon='camera'\n                                        labelPosition='left'\n                                        floated='left'\n                                        content='Take Pictures'\n                                        onClick={()=>{\n                                            this.setState({answer: true});\n                                            this.setState({recognizer:<CameraFaceDescriptor children={{'updateUsers': this.props.userUpdate,'organization':organization,'userID':userID, 'closeModal': this.closeModal}} />})\n                                            this.setState({viewConfirmationImageModal: false});\n                                            this.setState({viewImageModal: true});\n\n                                        }}\n                                    />\n                                    <Button\n                                        primary\n                                        icon='image file'\n                                        labelPosition='left'\n                                        floated='right'\n                                        content='Upload Files'\n                                        onClick={()=>{\n                                            this.setState({answer: false});\n                                        this.setState({recognizer:<FileFaceDescriptor children={{'updateUsers': this.props.userUpdate,'organization':organization,'userID':userID, 'closeModal': this.closeModal}}/>})\n                                            this.setState({viewConfirmationImageModal: false});\n                                            this.setState({viewImageModal: true});\n                                        }}\n                                    />\n                                </Grid.Column>\n                            </Grid.Row>\n                        </Grid>\n                    </Modal.Actions>\n                </Modal>\n        \n                <Modal\n                    size={answer ? 'large' : 'small'}\n                    open={viewImageModal}\n                    onClose={()=>closeModal(\"Create\")}\n                    closeOnDimmerClick={false}\n                >\n                    <Modal.Content content={recognizer}></Modal.Content>\n                </Modal>\n\n                {/* <br/>\n                <div id={'FaceDescriptorArea'}>\n                    {this.state.recognizer}\n                </div> */}\n            </>\n        );\n    }\n}\nconst condition = authUser => !!authUser;\nexport default withAuthorization(condition)(withFirebase(NewUser));","import React, { Component } from 'react';\r\nimport { withFirebase } from '../Firebase';\r\nimport { AuthUserContext, withAuthorization } from '../Session';\r\n\r\nclass NewEvent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recognizer: ''\r\n        }\r\n    }\r\n\r\n    async addEventClick() {\r\n        const eventID = document.getElementById('eventID').value;\r\n        const eventName = document.getElementById('eventName').value;\r\n        const minimumLevel = document.getElementById('minimumLevel').value;\r\n        const allowedUsers = document.getElementById('allowedUsers').value;\r\n        const notAllowedUsers = document.getElementById('notAllowedUsers').value;\r\n        const description = document.getElementById('description').value;\r\n        const eventDate = document.getElementById('eventDate').value;\r\n        const passCode = document.getElementById('passcode').value;\r\n\r\n        var error = 'All fields must be filled. Please enter a value for: ';\r\n        if(eventID === '') { error+=' eventID'; }\r\n        if(eventName === '') { error+=' Event Name'; }\r\n        if(minimumLevel === '') { error+=' Minimum Level'; }\r\n        if(description === '') { error+=' Description'; }\r\n        if(eventDate === '') { error+=' Event Date'; }\r\n        if(passCode === '') {error+=' Pass Code'}\r\n\r\n        if(error !== 'All fields must be filled. Please enter a value for: ') {\r\n            alert(error);\r\n            return;\r\n        }\r\n        const organization = this.props.children.organization;\r\n        const eventAdded = await this.props.firebase.addEvent(organization, eventID, eventName, minimumLevel, allowedUsers, notAllowedUsers, description, eventDate, passCode);\r\n        if(!eventAdded) {\r\n            alert('Event ID already in use. Verify if the event was already entered.');\r\n        }\r\n\r\n        this.props.eventUpdate();\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>NEW EVENT</h1>\r\n                <div>\r\n                    <p>Event ID:</p>\r\n                    <input id={'eventID'}/>\r\n                    <p>Event Name:</p>\r\n                    <input id={'eventName'}/>\r\n                    <p>Minimum Level:</p>\r\n                    <input id={'minimumLevel'}/>\r\n                    <p>Allowed Employees ID:</p>\r\n                    <input id={'allowedUsers'}/>\r\n                    <p>Not Allowed Employees ID:</p>\r\n                    <input id={'notAllowedUsers'}/>\r\n                    <p>Description:</p>\r\n                    <input id={'description'}/>\r\n                    <p>Pass Code:</p>\r\n                    <input id={'passcode'}/>\r\n                    <p>Event Date:</p>\r\n                    <input id={'eventDate'}/>\r\n                    <br/>\r\n                    <button onClick={() => this.addEventClick() }>Insert Event</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst condition = authUser => !!authUser;\r\nexport default withAuthorization(condition)(withFirebase(NewEvent));","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport CustomUploadButton from 'react-firebase-file-uploader/lib/CustomUploadButton';\nimport { AuthUserContext, withAuthorization } from '../Session';\nimport NewUser from \"../NewUser\";\nimport NewEvent from \"../NewEvent\";\n\nclass AdminPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        organization: '',\n        users: [],\n        events: []\n    }\n  }\n\n  async componentDidMount() {\n    const organization = await this.props.firebase.getOrganization();\n    const users = await this.props.firebase.getUsersPreview(organization);\n    const events = await this.props.firebase.getEventsPreview(organization);\n    this.setState({\n        organization: organization,\n        users: users,\n        events: events\n    });\n  }\n\n  async updateEvent() {\n      const events = await this.props.firebase.getEventsPreview(this.state.organization);\n      this.setState({ events: events });\n  }\n\n    async updateUser() {\n        const users = await this.props.firebase.getUsersPreview(this.state.organization);\n        this.setState({ users: users });\n    }\n\n  render() {\n      const {organization, users, events} = this.state;\n\n      return (\n          <div>\n              <h1>Admin</h1>\n              <p>Upload file</p>\n              <p>Add User</p>\n              <NewUser children={{'organization': organization}} userUpdate={ this.updateUser.bind(this) }/>\n\n              <p>Add Event</p>\n              <NewEvent children={{'organization': organization}} eventUpdate={ this.updateEvent.bind(this) }/>\n              <br/>\n              <h2>USER LIST</h2>\n              <UserList users={users}/>\n              <br/>\n              <h2>EVENT LIST</h2>\n              <EventList events={events}/>\n\n          </div>\n      );\n  }\n}\n\nconst UserList = ({users}) => (\n    <ul>\n        {\n            users.map(\n                user => (\n                    <div >\n                        <h3> { user.email } </h3>\n                        <p> { user.firstName } { user.lastName } </p>\n                        <p> Level: { user.level } </p>\n                    </div>\n                )\n            )\n        }\n    </ul>\n);\n\nconst EventList = ({events}) => (\n    <ul>\n        {\n            events.map(\n                event => (\n                    <div>\n                        <h3> { event.eventID } </h3>\n                        <p> Name: { event.name } </p>\n                        <p> Date: { event.eventDate } </p>\n                        <p> Min Level: { event.minimumLevel } </p>\n                        <p> Status: { event.active } </p>\n                    </div>\n                )\n            )\n        }\n    </ul>\n);\n\nconst condition = authUser => !!authUser;\nexport default withAuthorization(condition)(AdminPage);","import React, { Component } from 'react';\nimport Camera from 'react-html5-camera-photo';\nimport * as faceapi from 'face-api.js';\nimport * as canvas from 'canvas';\nimport { withFirebase } from '../Firebase';\nimport 'react-html5-camera-photo/build/css/index.css';\nimport {Input, Button, Segment, Loader, Dimmer, Message} from 'semantic-ui-react';\n\n//\nclass Face_Recognition extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading:false,\n            feedbackHide: true,\n            feedbackColor: '',\n            feedbackHeader: ''\n        }\n    }\n\n    stopLoading = async () => {\n        this.setState({loading:false});\n    }\n\n    hideFeedback = () => {\n        this.setState({feedbackHide: true})\n    }\n\n    showFeedback = async (result) => {\n        if(result === 'AUTHENTICATION CORRECT') {\n            this.setState({\n                feedbackHide: false,\n                feedbackColor: 'green',\n                feedbackHeader: 'Authentication succeed'\n            });\n        }\n        else if (result === 'AUTHENTICATION FAILED') {\n            this.setState({\n                feedbackHide: false,\n                feedbackColor: 'red',\n                feedbackHeader: 'Authentication failed'\n            });\n        }\n        else if (result.includes(\"ALERT\")) {\n            this.setState({\n                feedbackHide: false,\n                feedbackColor: 'yellow',\n                feedbackHeader: result\n            });\n        }\n        else if (result.includes(\"ERROR\")) {\n            this.setState({\n                feedbackHide: false,\n                feedbackColor: 'red',\n                feedbackHeader: result\n            });\n        }\n        else if (result === 'PLEASE TRY AGAIN'){\n            this.setState({\n                feedbackHide: false,\n                feedbackColor: 'yellow',\n                feedbackHeader: 'Please try again'\n            });\n        }\n        else {\n            this.setState({\n                feedbackHide: false,\n                feedbackColor: 'yellow',\n                feedbackHeader: result\n            });\n        }\n        var self = this;\n        setInterval(function () {\n            self.hideFeedback();\n        }, 5000)\n\n    }\n\n    render() {\n        //INPUTS FROM CHILDREN IN THE CONSTRUCTOR\n        const organization = this.props.children.organization;\n        const eventID = this.props.children.event;\n        const stopLoadingFunction = this.stopLoading;\n        const showFeedback = this.showFeedback;\n\n        //INSTANCE OF FIREBASE\n        const fb = this.props.firebase;\n\n        /**\n         * @param userID\n         * @returns {Promise<null|LabeledFaceDescriptors>}\n         * LOADS USER DESCRIPTORS FORM DATABASE AND CREATE LABELEDFACEDESCRIPTOR\n         * INSTANCE. INSTANCE USED TO COMPARE USER IMAGE\n         */\n        async function loadUserDescriptor(userID) {\n            let descriptionSet = await fb.getDescriptors(organization, userID);\n            if (descriptionSet.length == 0) {\n                return null;\n            }\n            return new faceapi.LabeledFaceDescriptors(userID, descriptionSet);\n        }\n\n        /**\n         * @param dataUri: TAKEN IMAGE DATA\n         * @returns {Promise<void>}\n         * VERIFIES IF THE IMAGE IS VALID AND GET USER INFORMATION\n         */\n        async function handleTakePhoto(dataUri) {\n\n            //LOAD WEBCAM CAPTURED IMAGE AND BUILD THE DESCRIPTOR SET\n            let blob = await fetch(dataUri).then(r => r.blob());    //Build Image\n            const image = await faceapi.bufferToImage(blob);\n            const detection = await faceapi.detectAllFaces(image).withFaceLandmarks().withFaceDescriptors();\n            if (detection.length === 0) {\n                showFeedback(\"ERROR. No face detected. Please try again.\")\n                stopLoadingFunction();\n                return;\n            }\n\n            if (detection.length > 1) {\n                showFeedback(\"ERROR. Multiple faces detected. Please try again.\")\n                stopLoadingFunction();\n                return;\n            }\n\n            //CHECK IF ELEMENT ID WAS ENTERED\n            const userID = document.getElementById(\"userId\").value;\n            if (userID == '') {\n                showFeedback(\"ALERT. No user ID detected. Process will take longer to detect user\")\n                await handleTakePhotoNoUserID(image, detection);\n                stopLoadingFunction();\n                return;\n            }\n\n            //GET USER INFO, EVENT INFO AND VERIFY IF IT IS ALLOWED\n            const userInfo = await fb.getUserInformation(organization, userID);\n            if (userInfo == null) {\n                showFeedback(\"ERROR. Invalid user id\")\n                stopLoadingFunction();\n                return;\n            }\n\n            const eventInfo = await fb.getEventInformation(organization, eventID);\n            if (eventInfo.notAllowedUsers.includes(userID)) {\n                showFeedback(\"ERROR. User not allowed\")\n                stopLoadingFunction();\n                return\n            }\n            if (eventInfo.minimumLevel > userInfo.level && !eventInfo.allowedUsers.includes(userID)) {\n                showFeedback(\"ERROR. User not allowed\")\n                stopLoadingFunction();\n                return\n            }\n\n            //LOAD DESCRIPTOR SET AND VERIFY IF IT IS VALID\n            const descriptorSet = await (loadUserDescriptor(userID));\n            if (descriptorSet == null || descriptorSet.length == 0) {\n                showFeedback(\"ERROR. Unable to process. Invalid user ID or user has no face descriptors stored\")\n                stopLoadingFunction();\n                return;\n            }\n\n            //CREATE THE FACE MATCHER AND MATH THE DESCRIPTORS\n            const faceMatcher = await new faceapi.FaceMatcher(descriptorSet, 0.6);\n            const displaySize = {width: image.width, height: image.height};\n            const resizedDetections = await faceapi.resizeResults(detection, displaySize);\n            const results = resizedDetections.map(d => faceMatcher.findBestMatch(d.descriptor));\n\n            // RECOGNIZE AGE AND GENDER\n            const detectionsWithAgeAndGender = await faceapi.detectAllFaces(image).withAgeAndGender()\n\n            //#region MANAGE RESULT\n            const faceAccuracy = (1 - results[0].distance) * 100;\n            const ageAccuracy = Math.abs(userInfo.age - detectionsWithAgeAndGender[0].age);\n            const sexDetection = (detectionsWithAgeAndGender[0].gender == userInfo.sex);\n\n            await evaluateResult(faceAccuracy, ageAccuracy, sexDetection, userID, userInfo);\n            stopLoadingFunction();\n        }\n\n        async function handleTakePhotoNoUserID(image, detection) {\n\n            //GET ALL USERS DESCRIPTORS\n            const usersDescriptors = await fb.getAllUsersDescriptions(organization);\n            var bestValue = 0;\n            var index = -1;\n\n            var bestFaceAccuracy = 0;\n            var bestAgeAccuracy = 0;\n            var bestSexDetection = 0;\n\n            for (var i = 0; i < usersDescriptors.length; i++) {\n                const current = usersDescriptors[i];\n                if (current.descriptors === null || current.descriptors.length <= 0) {\n                    continue;\n                }\n                const descriptorSet = new faceapi.LabeledFaceDescriptors(current.userID, current.descriptors);\n\n                //CREATE THE FACE MATCHER AND MATH THE DESCRIPTORS\n                const faceMatcher = await new faceapi.FaceMatcher(descriptorSet, 0.6);\n                const displaySize = {width: image.width, height: image.height};\n                const resizedDetections = await faceapi.resizeResults(detection, displaySize);\n                const results = resizedDetections.map(d => faceMatcher.findBestMatch(d.descriptor));\n                // RECOGNIZE AGE AND GENDER\n                const detectionsWithAgeAndGender = await faceapi.detectAllFaces(image).withAgeAndGender();\n\n                const faceAccuracy = (1 - results[0].distance) * 100;\n                const ageAccuracy = Math.abs(current.userInfo.age - detectionsWithAgeAndGender[0].age);\n                const sexDetection = (detectionsWithAgeAndGender[0].gender == current.userInfo.sex);\n\n                if (faceAccuracy > bestFaceAccuracy) {\n                    bestFaceAccuracy = faceAccuracy;\n                    bestAgeAccuracy = ageAccuracy;\n                    bestSexDetection = sexDetection;\n                    index = i;\n                }\n            }\n\n            if (index < 0) {\n                showFeedback(\"ERROR. Unable to locate user.\")\n                stopLoadingFunction();\n                return;\n            }\n\n            const userID = usersDescriptors[index].userID;\n\n            //GET USER INFO, EVENT INFO AND VERIFY IF IT IS ALLOWED\n            const userInfo = usersDescriptors[index].userInfo;\n\n            const eventInfo = await fb.getEventInformation(organization, eventID);\n            if (eventInfo.notAllowedUsers.includes(userID)) {\n                showFeedback(\"ERROR. User not allowed\")\n                stopLoadingFunction();\n                return\n            }\n            if (eventInfo.minimumLevel > userInfo.level && !eventInfo.allowedUsers.includes(userID)) {\n                showFeedback(\"ERROR. User not allowed\")\n                stopLoadingFunction();\n                return\n            }\n\n            await evaluateResult(bestFaceAccuracy, bestAgeAccuracy, bestSexDetection, userID, userInfo);\n            stopLoadingFunction();\n        }\n\n        async function evaluateResult(faceAccuracy, ageAccuracy, sexDetection, userID, userInfo) {\n\n            //console.log('FACE ACCURACY: ' + faceAccuracy + ' %')\n            //console.log('AGE DIFFERENCE: ' + ageAccuracy + ' years')\n            //console.log('SEX DETECTED: ' + sexDetection)\n\n            var result = '';\n\n            if (ageAccuracy < 7 && sexDetection) {\n                if (faceAccuracy > 55) {\n                    //console.log('AUTHENTICATION CORRECT')\n                    result = 'AUTHENTICATION CORRECT';\n                } else if (faceAccuracy > 50) {\n                    //console.log('PLEASE TRY AGAIN')\n                    result = 'PLEASE TRY AGAIN';\n                } else {\n                    //console.log('AUTHENTICATION FAILED')\n                    result = 'AUTHENTICATION FAILED';\n                }\n            } else {\n                //console.log('AUTHENTICATION FAILED')\n                result = 'AUTHENTICATION FAILED';\n            }\n            //document.getElementById(\"ResultText\").innerHTML = 'RESULT: ' + result;\n            //#endregion\n\n            if (result != 'AUTHENTICATION CORRECT') {\n                //console.log('NO RECORDING ATTENDANCE');\n                showFeedback(result);\n                stopLoadingFunction();\n                return;\n            }\n\n            const respAttendance = await fb.markUserAttendance(organization, eventID, userID);\n            //console.log(respAttendance);\n            if (respAttendance != null) {\n                result = 'User '+userInfo.firstName+' '+userInfo.lastName+' already authenticated at '+new Date(respAttendance).toLocaleString()\n\n            }\n            showFeedback(result);\n        }\n\n        /**\n         * LOADS ALL MODULES FO THE FACEAPI\n         */\n        Promise.all([\n            faceapi.nets.faceRecognitionNet.loadFromUri('/models'),\n            faceapi.nets.faceLandmark68Net.loadFromUri('/models'),\n            faceapi.nets.ssdMobilenetv1.loadFromUri('/models'),\n            faceapi.nets.ageGenderNet.loadFromUri('/models'),\n\n            faceapi.nets.tinyFaceDetector.loadFromUri('/models'),\n            faceapi.nets.faceLandmark68TinyNet.loadFromUri('/models'),\n        ])\n\n        return (\n            <>\n                <div className=\"ui two column centered grid\">\n                    <div>\n                        <Message\n                            color={this.state.feedbackColor}\n                            hidden={this.state.feedbackHide}\n                            header={this.state.feedbackHeader}\n                        />\n                    </div>\n                    <div  class=\"ui segment\">\n                        <Dimmer active={this.state.loading}>\n                            <Loader content='Processing Image...' size='huge'/>\n                        </Dimmer>\n                        <Camera\n                            onTakePhoto={(dataUri) => {\n                                this.setState({loading:true});\n                                handleTakePhoto(dataUri);\n\n                            }}\n                            isSilentMode = {true}\n                        />\n                    </div>\n                    <div className=\"four column centered row\">\n                        <div className=\"column\">\n                            <img/>\n                        </div>\n                        <div className=\"column\">\n                            <div className=\"ui left icon input\">\n                                <input type=\"text\" placeholder=\"User ID\" id={'userId'}/>\n                                    <i className=\"address card outline icon\"></i>\n                            </div>\n                        </div>\n                        <div className=\"column\">\n                            <img/>\n                        </div>\n                    </div>\n                </div>\n\n\n                {/* <div className=\"ui three stackable cards\">\n                    <div className=\"card huge\">\n                        <div className=\"image\">\n                            <Camera\n                                onTakePhoto={(dataUri) => {\n                                    handleTakePhoto(dataUri);\n                                }}\n                            />\n                        </div>\n                    </div>\n                    <div>\n                        <p>User ID</p>\n                        <input accept={'text'} id={'userId'}/>\n                    </div>\n                </div> */}\n            </>\n        );\n    }\n}\nexport default withFirebase(Face_Recognition);","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport Face_Recognition from \"../FaceRecognition\";\nimport {Input, Divider, Card, Container, Grid, Modal, Button, Icon} from 'semantic-ui-react';\nimport CustomUploadButton from 'react-firebase-file-uploader/lib/CustomUploadButton';\nimport PasswordChangeForm from \"../PasswordChange\";\nimport * as ROUTES from \"../../constants/routes\";\n\nclass Recognizer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            organization: '',\n            event: '',\n            facerecogition: '',\n            showModal: false\n        }\n\n    }\n\n    async hideModal() {\n        this.setState({\n            organization: '',\n            event: '',\n            facerecogition: '',\n            showModal: false\n        });\n        document.getElementById('organization').value = '';\n        document.getElementById('event').value = '';\n        document.getElementById('passcode').value = '';\n\n    }\n\n    async getAccess() {\n        const organization = document.getElementById('organization').value;\n        if (organization.includes('.')) {\n            alert('Invalid character in organization \\'.\\' ')\n            return;\n        }\n        const event = document.getElementById('event').value;\n        const eventPasscode = document.getElementById('passcode').value;\n\n        if (organization.length == 0 || event.length == 0 || eventPasscode.length == 0) {\n            alert('Please fill out all the fields.')\n            return;\n        }\n        if (await this.props.firebase.checkIfEventExist(organization, event)) {\n            if (await this.props.firebase.loginIntoEvent(organization, event, eventPasscode)) {\n                this.setState({\n                    showModal: true,\n                    organization: organization,\n                    event: event\n                    //facerecogition: <Face_Recognition children={{'organization': organization, 'event': event}}/>\n                });\n            } else {\n                alert('Incorrect event id or passcode')\n                return;\n            }\n        } else {\n            alert('Unable to locate event');\n            return;\n        }\n\n    }\n\n    render() {\n        return (\n            <>\n                <br/>\n                <Divider horizontal size='huge'>\n                    <h1 className=\"ui image header\">\n                        <div className=\"content\">\n                            Event Registration\n                        </div>\n                    </h1>\n                </Divider>\n                <div className=\"ui vertically divided grid\">\n                    <div className=\"three column row\">\n                        <div className=\"column\">\n                            <p></p>\n                        </div>\n                        <div className=\"column\">\n                            <div className=\"ui middle aligned center aligned grid\">\n                                <div className=\"column\">\n                                    <form className=\"ui large form\">\n                                        <div className=\"ui stacked segment\">\n                                            <div className=\"field\">\n                                                <div className=\"ui left icon input\">\n                                                    <i className=\"building icon\"></i>\n                                                    <input type=\"text\" name=\"email\" placeholder=\"Organization ID\" id={'organization'}/>\n                                                </div>\n                                            </div>\n                                            <div className=\"field\">\n                                                <div className=\"ui left icon input\">\n                                                    <i className=\"users icon\"></i>\n                                                    <input type=\"text\" name=\"email\" placeholder=\"Event ID\" id={'event'}/>\n                                                </div>\n                                            </div>\n                                            <div className=\"field\">\n                                                <div className=\"ui left icon input\">\n                                                    <i className=\"lock icon\"></i>\n                                                    <input type=\"password\" name=\"password\" placeholder=\"Event Passcode\" id={'passcode'}/>\n                                                </div>\n                                            </div>\n                                            <div className=\"ui fluid large blue submit button\"\n                                                 onClick={() => this.getAccess()}>Access Event\n                                            </div>\n                                        </div>\n                                    </form>\n                                    <div className=\"ui message\">\n                                        New to CARAS? <a onClick={() => this.props.history.push(ROUTES.SIGN_UP)}>Sign\n                                        Up</a>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"column\">\n                            <p></p>\n                        </div>\n                    </div>\n                </div>\n                <Modal size={\"small\"} open={this.state.showModal }>\n\n                    <div className=\"ui segment\">\n                        <div className=\"ui two column very relaxed grid\">\n                            <div className=\"column\">\n                                <div className=\"ui\">\n                                    <h3 className=\"ui left floated header\">{this.state.event}</h3>\n                                </div>\n                            </div>\n                            <div className=\"column\">\n                                <div className=\"ui\">\n                                    <h3 className=\"ui right floated header\">{this.state.organization}</h3>\n                                </div>\n\n                            </div>\n                        </div>\n                        <div className=\"ui vertical divider\">\n                            check in\n                        </div>\n                    </div>\n                    <Modal.Content className=''>\n                        <Face_Recognition children={{'organization': this.state.organization, 'event': this.state.event}}/>\n                    </Modal.Content>\n                    <Modal.Content>\n                        <button  class=\"fluid ui button red\" onClick={() => this.hideModal()}>\n                            <Icon name='stop circle outline'/>\n                            Stop\n                        </button>\n                    </Modal.Content>\n                </Modal>\n            </>\n        );\n    }\n}\nexport default withFirebase(Recognizer);","import React from \"react\";\nimport { withFirebase } from '../components/Firebase';\nimport { AuthUserContext, withAuthorization } from '../components/Session';\nimport CameraFaceDescriptor from \"../components/NewUser/CameraFaceDescriptor\";\nimport FileFaceDescriptor from \"../components/NewUser/FileFaceDescriptor\";\n\nimport { Grid, Form, Button, Message, Modal } from \"semantic-ui-react\";\n\nimport { genderOptions, levelOptions } from \"../util/options\";\nimport {onlyAlphaNumValues, onlyNumericValues, validEmail} from \"../util/validators\";\nimport { fromRenderProps } from \"recompose\";\n\n\nclass UserEditForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        userID: props.user.userID,\n        firstName: props.user.firstName,\n        lastName: props.user.lastName,\n        email: props.user.email,\n        gender: props.user.sex,\n        age: props.user.age,\n        level: props.user.level,\n        errors:[],\n        descriptor: null,\n        viewDescriptorModal: false,\n    };\n  }\n\n  onChange = async (event, { name, value }) => {\n    this.setState({\n      ...this.state.values,\n      [name]: value\n    });\n  };\n\n  onSubmit = async (event) => {\n    const {\n        userID,\n        firstName,\n        lastName,\n        email,\n        level,\n        gender,\n        age\n    } = this.state;\n\n    const {organization, updateUsers, closeModal, firebase} = this.props;\n\n    var errors = [];\n\n    if (!validEmail(email)) {\n        errors.push('Email must be a valid email.');\n    }\n\n    if (errors.length === 0) {\n        const userAdded = await firebase.updateUser(\n            organization,\n            userID,\n            firstName,\n            lastName,\n            email,\n            level,\n            gender,\n            age\n        );\n        \n        if(!userAdded) {\n            errors.push('Error updating user');\n            this.setState({errors: errors});\n        } else {\n            closeModal();\n            updateUsers();\n        }\n    } else {\n        this.setState({errors: errors});\n    }\n  }\n\n  onClick = async (Component) =>{\n      this.setState({descriptor: Component});\n      this.setState({viewDescriptorModal: true});\n  }\n\n  closeModal = () => {\n      this.setState({viewDescriptorModal: false})\n  }\n\n  render() {\n    const { firstName, lastName, email, gender, age, level, errors, userID, viewDescriptorModal, descriptor } = this.state;\n    const {organization} = this.props;\n\n    const CameraComponent = (\n        <CameraFaceDescriptor\n            children = {\n                {\n                    'organization': organization,\n                    'userID': userID,\n                    'closeModal': this.closeModal\n                }\n            }\n        />\n    );\n\n    const FileComponent = (\n        <FileFaceDescriptor\n            children = {\n                {\n                    'organization': organization,\n                    'userID': userID,\n                    'closeModal': this.closeModal\n                }\n            }\n        />\n    );\n\n    const descriptorModal = (\n        <Modal\n            size='tiny'\n            open={viewDescriptorModal}\n            onClose={()=>this.closeModal()}\n            closeOnDimmerClick={true}\n            closeOnEscape={true}\n        >\n            <Modal.Content content={descriptor}/>\n        </Modal>\n    );\n\n    return (\n        <>\n            <Grid>\n                <Grid.Row>\n                    <Grid.Column>\n                    <Form\n                        noValidate\n                        onSubmit={this.onSubmit}\n                        size='large'\n                    >\n                        <Form.Group width='equal'>\n                            <Form.Input\n                                fluid\n                                label=\"First Name\"\n                                name=\"firstName\"\n                                type=\"text\"\n                                width={8}\n                                maxLength=\"25\"\n                                value={firstName}\n                                onChange={this.onChange}\n                            />\n                            <Form.Input\n                                fluid\n                                label=\"Last Name\"\n                                name=\"lastName\"\n                                type=\"text\"\n                                width={8}\n                                maxLength=\"25\"\n                                value={lastName}\n                                onChange={this.onChange}\n                            />\n                            <Form.Select\n                                fluid\n                                label=\"Level\"\n                                name=\"level\"\n                                width={3}\n                                value={level}\n                                options={levelOptions}\n                                onChange={this.onChange}\n                            />\n                        </Form.Group>\n                        <Form.Group widths='equal'>\n                            <Form.Input\n                                fluid\n                                label=\"Email\"\n                                name=\"email\"\n                                type=\"text\"\n                                width={8}\n                                maxLength='40'\n                                value={email}\n                                onChange={this.onChange}\n                            />\n                            <Form.Select\n                                fluid\n                                label=\"Gender\"\n                                name=\"gender\"\n                                width={3}\n                                value={gender}\n                                options={genderOptions}\n                                onChange={this.onChange}\n                            />\n                            <Form.Input\n                                fluid\n                                label=\"Age\"\n                                name=\"age\"\n                                type=\"text\"\n                                value={age}\n                                maxLength=\"2\"\n                                width={2}\n                                onChange={({param: event}, data) => {\n                                    //only allow numeric values to be inputted\n                                    if (onlyNumericValues(data.value)) {\n                                        this.onChange(event, data)\n                                    }\n                                }}\n                            />\n                        </Form.Group>        \n                    </Form>\n                    <Button.Group compact fluid size='small'>\n                        <Button\n                            color='blue'\n                            content='Add New Pictures'\n                            icon='camera'\n                            labelPosition='left'\n                            onClick={() => {this.onClick(CameraComponent)}}\n                        />\n                        <Button.Or/>\n                        <Button\n                            color='blue'\n                            content='Upload New Pictures'\n                            icon='file'\n                            labelPosition='right'\n                            onClick={() => {this.onClick(FileComponent)}}\n                        />\n                    </Button.Group>\n                        <Message\n                            color='red'\n                            size='large'\n                            hidden={(errors.length === 0)}\n                            header='Invalid Form Fields:'\n                            list={errors}\n                        />    \n                </Grid.Column>\n                </Grid.Row>\n                <Grid.Row>\n                    <Grid.Column>\n                        <Button\n                            type='button'\n                            content=\"Cancel\"\n                            size='large'\n                            color=\"red\"\n                            icon=\"cancel\"\n                            labelPosition=\"left\"\n                            floated=\"right\"\n                            onClick={()=>{\n                                this.setState({});\n                                this.props.closeModal(\"Edit\");\n                            }}\n                        />\n                        <Button\n                            onClick={this.onSubmit}\n                        content=\"Submit\"\n                        size='large'\n                        color=\"green\"\n                        icon=\"check\"\n                        labelPosition=\"left\"\n                        floated=\"left\"\n                        />\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n            {descriptorModal}\n        </>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\nexport default withAuthorization(condition)(withFirebase(UserEditForm));\n","import React, {Component} from 'react';\nimport { withAuthorization } from '../Session';\nimport { withFirebase } from '../Firebase';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\n\nimport NewUser from '../NewUser/index';\nimport UserEditForm from '../../UIComponents/UserEditForm';\n\nimport { \n    Table, \n    Grid, \n    Container,\n    Header, \n    Dimmer, \n    Divider, \n    Icon, \n    Loader, \n    Segment, \n    Modal,\n    Button} from 'semantic-ui-react';\n\nclass UserPanel extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            organization: '',\n            users: [],\n            // addUser: null,\n            deleteUser: null,\n            updateUsers: null,\n            viewCreateUserModal: false,\n            viewUserModal: false,\n            viewEditUserModal: false,\n            selectedUser: {},\n        }\n    }\n\n    async componentDidMount() {\n        const organization = await this.props.firebase.getOrganization();\n        const users = await this.props.firebase.getUsersPreview(organization);\n        const addUser = this.props.firebase.addUser;\n        const deleteUser = this.props.firebase.deleteUser;\n        const updateUsers  = async () => {\n            this.setState({loading: true});\n            const users =  await this.props.firebase.getUsersPreview(this.state.organization);\n            this.setState({ users: users });\n            this.setState({loading: false});\n        }\n        this.setState({\n            organization: organization,\n            users: users,\n            // addUser : addUser,\n            deleteUser: deleteUser,\n            updateUsers: updateUsers,\n            createUserModal: false\n        });\n    }\n\n    closeModal = (name) => {\n        switch(name){\n            case \"View\":\n                this.setState({viewUserModal: false});\n                break;\n            case \"Create\":\n                this.setState({viewCreateUserModal: false});\n                break;\n            case \"Edit\":\n                this.setState({viewEditUserModal: false});\n                break;\n        }\n    }\n\n    openModal = (name) => {\n        switch(name){\n            case \"View\":\n                this.setState({viewUserModal: true});\n                break;\n            case \"Create\":\n                this.setState({viewCreateUserModal: true});\n                break;\n            case \"Edit\":\n                this.setState({viewEditUserModal: true});\n                break;\n        }\n    }\n\n    render() {\n        const {loading, organization, users, deleteUser, updateUsers,viewEditUserModal, viewCreateUserModal: createUserModal, viewUserModal, selectedUser: user} = this.state;\n\n        const userFormModal = (\n            <Modal\n                closeIcon\n                onClose={()=>updateUsers()}\n                open={createUserModal}\n                size='small'\n                closeOnEscape={true}\n                closeOnDimmerClick={false}\n            >\n                <Modal.Header as='h1' content='New User'/>\n                <Modal.Content content={<NewUser children={{'organization': organization}} closeModal={this.closeModal} userUpdate={updateUsers} />}/>\n            </Modal>\n        );\n\n        const userEditModal = (\n            <Modal\n                onClose={() => this.closeModal(\"Edit\")}\n                open={viewEditUserModal}\n                size='tiny'\n                closeOnEscape={true}\n                closeOnDimmerClick={false}                \n            >\n                <Modal.Header as='h1'>Edit User</Modal.Header>\n                <Modal.Content>\n                    <UserEditForm\n                        user={user} \n                        organization={organization} \n                        closeModal={() => this.closeModal(\"Edit\")}\n                        updateUsers={updateUsers} />\n                </Modal.Content>\n            </Modal>\n        );\n\n        const userModal = (\n            <Modal\n                open={viewUserModal}\n                onClose={() => this.closeModal(\"View\")}\n                size='tiny'\n                closeOnEscape={true}\n                closeOnDimmerClick={true}\n            >\n                <Modal.Header as='h1' content='User Profile' />\n                <Modal.Content>\n                    <Container>\n                        <Grid>\n                            <Grid.Row>\n                                <Grid.Column>\n                                    <Header textAlign='center' as='h1' icon>\n                                        <Icon name='user circle'/>\n                                        {user.firstName} {user.lastName}\n                                    </Header>\n                                    <Table\n                                        unstackable\n                                        celled\n                                        singleLine\n                                        striped\n                                        definition\n                                    >\n                                        <Table.Body>\n                                            <Table.Row>\n                                                <Table.Cell width={4}>User ID:</Table.Cell>\n                                                <Table.Cell>{user.userID}</Table.Cell>\n                                            </Table.Row>\n                                            <Table.Row>\n                                                <Table.Cell>Level:</Table.Cell>\n                                                <Table.Cell>{user.level}</Table.Cell>\n                                            </Table.Row>\n                                            <Table.Row>\n                                                <Table.Cell>Gender:</Table.Cell>\n                                                <Table.Cell>{user.sex}</Table.Cell>\n                                            </Table.Row>\n                                            <Table.Row>\n                                                <Table.Cell>Age:</Table.Cell>\n                                                <Table.Cell>{user.age}</Table.Cell>\n                                            </Table.Row>\n                                            <Table.Row>\n                                                <Table.Cell>Email:</Table.Cell>\n                                                <Table.Cell>{user.email}</Table.Cell>\n                                            </Table.Row>\n                                        </Table.Body>\n                                    </Table>\n                                </Grid.Column>\n                            </Grid.Row>\n                        </Grid>\n                    </Container>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Grid>\n                        <Grid.Row>\n                            <Grid.Column>\n                            <Button \n                                content='Close'\n                                color='grey'\n                                size='large'\n                                floated='left'\n                                onClick={()=>this.closeModal(\"View\")}\n                            />\n                            <Button \n                                icon='edit'\n                                labelPosition='left'\n                                content='Edit'\n                                size='large'\n                                floated='right'\n                                positive\n                                onClick={()=>{\n                                    this.openModal(\"Edit\");\n                                    this.closeModal(\"View\");\n                                }}\n                            />\n                            </Grid.Column>\n                        </Grid.Row>\n                    </Grid>\n                </Modal.Actions>\n            </Modal>\n        )   \n        \n        return (\n            <>\n                <Container>\n                    <Grid columns={1} >\n                        <Grid.Row>\n                            <Header as='h1'>User Panel</Header>\n                        </Grid.Row>\n                        <Grid.Row>\n                            <Grid.Column>\n                                <Button\n                                    content=\"Add User\"\n                                    icon=\"add\"\n                                    color=\"green\"\n                                    labelPosition=\"left\"\n                                    floated=\"right\"\n                                    onClick={()=>{\n                                        this.openModal(\"Create\");\n                                    }}\n                                />\n                            </Grid.Column>\n                        </Grid.Row>\n                    </Grid>\n                </Container>\n\n                <Divider horizontal>\n                <Header as=\"h2\">{organization} Users </Header>\n                </Divider>\n                    <Dimmer active={users ? false : true} inverted>\n                    <Loader/>\n                </Dimmer>\n                {users === undefined || users.length === 0 \n                ?(\n                    <Segment placeholder>\n                        <Header icon>\n                          <Icon name='users' size='large'/>\n                          <p>There are currently no users registered</p>\n                        </Header>\n                    </Segment>\n                    )\n                :(\n                    <Container>\n                    <Grid>\n                        <Grid.Row>\n                            <Grid.Column>\n                            <Table \n                                celled \n                                unstackable\n                            >\n                                <Table.Header>\n                                    <Table.Row >\n                                        <Table.HeaderCell>First Name </Table.HeaderCell>\n                                        <Table.HeaderCell>Last Name  </Table.HeaderCell>\n                                        <Table.HeaderCell>Level      </Table.HeaderCell>\n                                        <Table.HeaderCell>View      </Table.HeaderCell>\n                                        <Table.HeaderCell>Delete      </Table.HeaderCell>\n                                    </Table.Row>\n                                </Table.Header>\n                                <Table.Body>\n                                    {users.map((user, index) => (\n                                         <Table.Row key={index}>\n                                            <Table.Cell>{user.firstName}</Table.Cell>\n                                            <Table.Cell>{user.lastName}</Table.Cell>\n                                            <Table.Cell>{user.level}</Table.Cell>\n                                            <Table.Cell collapsing textAlign='center'>\n                                                <Button\n                                                    color='blue'\n                                                    icon = \"info\"\n                                                    onClick = { () => {\n                                                        this.setState({selectedUser: user});\n                                                        this.setState({viewUserModal: true});\n                                                    }}\n                                                />\n                                            </Table.Cell>\n                                            <Table.Cell collapsing textAlign='center' >\n                                                <Button\n                                                    color='red'\n                                                    negative\n                                                    icon = \"delete\"\n                                                    onClick={async () =>{\n                                                        deleteUser(organization, user.userID).then(()=>{\n                                                            updateUsers();\n                                                        })\n                                                    }}\n                                                />\n                                            </Table.Cell>\n                                        </Table.Row>\n                                    ))}\n                                </Table.Body>\n                             </Table>\n                             </Grid.Column>\n                        </Grid.Row>\n                    </Grid>\n                </Container>\n                    )\n                }\n                {userFormModal}\n                {userModal}\n                {userEditModal}\n            </>\n        )\n    }\n\n}\n\nconst condition = authUser => !!authUser;\nexport default withAuthorization(condition)(UserPanel);\n\n","\nimport React, { Component } from 'react';\nimport {\n    BrowserRouter as Router,\n    Route,Switch,\n} from 'react-router-dom';\nimport Navigation from '../Navigation';\nimport LandingPage from '../Landing';\nimport SignUpPage from '../SignUp';\nimport SignInPage from '../SignIn';\nimport PasswordForgetPage from '../PasswordForget';\nimport HomePage from '../Home';\nimport AccountPage from '../Account';\nimport AdminPage from '../Admin';\nimport { AuthUserContext } from '../Session';\nimport * as ROUTES from '../../constants/routes';\nimport { withFirebase } from '../Firebase';\nimport FaceRecognition from '../FaceRecognition';\nimport Recognizer from '../Recognizer';\nimport NewUser from \"../NewUser\";\nimport UserPanel from \"../UserPanel\";\n\nclass App extends Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n          authUser: null,\n      };\n  }\n  componentDidMount() {\n\n      this.props.firebase.auth.onAuthStateChanged(authUser => {\n              authUser\n                  ? this.setState({ authUser })\n                  : this.setState({ authUser: null });\n          },\n      );\n  }\n\n  componentWillUnmount() {\n      this.listener();\n  }\n\n  render() {\n      return (\n          <AuthUserContext.Provider value={this.state.authUser}>\n              <Router>\n                  <div>\n                      <Navigation authUser={this.state.authUser} />\n                      <Switch>\n                          <Route exact path={ROUTES.LANDING} component={LandingPage} />\n                          <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\n                          <Route path={ROUTES.SIGN_IN} component={SignInPage} />\n                          <Route path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage} />\n                          <Route path={ROUTES.HOME} component={HomePage} />\n                          <Route path={ROUTES.ACCOUNT} component={AccountPage} />\n                          <Route path={ROUTES.RECOGNIZER} component={Recognizer} />\n                          <Route path={ROUTES.NEWUSER} component={NewUser} />\n                          <Route path={ROUTES.USERPANEL} component={UserPanel} />\n                      </Switch>\n                  </div>\n              </Router>\n          </AuthUserContext.Provider>\n      );\n  }\n\n}\n\nexport default withFirebase(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'react-semantic-ui-datepickers/dist/react-semantic-ui-datepickers.css';\n\n\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './components/App';\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nReactDOM.render(\n    <FirebaseContext.Provider value={new Firebase()}>\n      <App />\n    </FirebaseContext.Provider>,\n    document.getElementById('root'),\n  );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}